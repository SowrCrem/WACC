[32mSemanticErrArrayTests:[0m
[32msemanticErr - array tests: arrayIndexComplexNotInt.wacc[0m
>assignRhs> (13, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2]
                           [34m^[0m
<assignRhs< (13, 19): 1,[37mÂ·[0m2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2]
                           [34m^[0m
<assignRhs< (13, 19): 1,[37mÂ·[0m2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0ma[1[37mÂ·[0m-[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 25): rse"];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0ma[!fal
                           [34m^[0m
<assignRhs< (16, 1): lse][32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: Binary arithmetic operator expected two integers, got integer and string
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - array tests: arrayIndexNotInt.wacc[0m
>assignRhs> (13, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2]
                           [34m^[0m
<assignRhs< (13, 19): 1,[37mÂ·[0m2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2]
                           [34m^[0m
<assignRhs< (13, 19): 1,[37mÂ·[0m2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0ma["hor
                           [34m^[0m
<assignRhs< (15, 1): se"][32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: ArrayElem expected all indices to be integers
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - array tests: arrayMultipleIndexError.wacc[0m
>assignRhs> (13, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2]
                           [34m^[0m
<assignRhs< (13, 19): 1,[37mÂ·[0m2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2]
                           [34m^[0m
<assignRhs< (13, 19): 1,[37mÂ·[0m2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 13): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m[3,[37mÂ·[0m4]
                           [34m^[0m
<assignRhs< (14, 19): 3,[37mÂ·[0m4];[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi [32mGood[0m
                           [34m^[0m
(line 16, column 8):
  unexpected "["
  expected identifier
  >
  >  int[][] ab = [a, b];
          ^
  >
failed
Exit Code: 100
[31m- should return exit code 200 *** FAILED ***[0m
[31m  100 was not equal to 200 (semanticErrArrayTests.scala:34)[0m
[32msemanticErr - array tests: badIndex.wacc[0m
>assignRhs> (13, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1];[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 16): =[37mÂ·[0m[1];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1];[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 16): =[37mÂ·[0m[1];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 200 *** FAILED ***[0m
[31m  0 was not equal to 200 (semanticErrArrayTests.scala:42)[0m
[32msemanticErr - array tests: indexUndefIdent.wacc[0m
>assignRhs> (13, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0mhorse[
                           [34m^[0m
<assignRhs< (14, 1): e[2][32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: ArrayElem expected an array, got None
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - array tests: mixingTypesInArrays.wacc[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 11): egin[37mÂ·[0mreturn
                              [34m^[0m
  >assignLhs> (14, 11): egin[37mÂ·[0mreturn
                             [34m^[0m
  <assignLhs< (14, 11): egin[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
<asgnEqParser< (14, 11): egin[37mÂ·[0mreturn [31mFail[0m
                              [34m^[0m
>assignRhs> (17, 12): [37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (17, 23): ive();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (17, 12): [37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (17, 23): ive();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0mf]
                           [34m^[0m
<assignRhs< (19, 1): ,[37mÂ·[0mf][32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: ArrayLiter expected all elements to be of the same type, got List(Some(integer), Some(char))
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - array tests: noArrayCovariance.wacc[0m
(line 13, column 9):
  unexpected "["
  expected identifier
  >begin
  >  char[][] acs = [] ;
           ^
  >  string[] bad = acs
failed
Exit Code: 100
[31m- should return exit code 200 *** FAILED ***[0m
[31m  100 was not equal to 200 (semanticErrArrayTests.scala:66)[0m
[32msemanticErr - array tests: nonMatchingArrays.wacc[0m
>assignRhs> (13, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2]
                           [34m^[0m
<assignRhs< (13, 19): 1,[37mÂ·[0m2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2]
                           [34m^[0m
<assignRhs< (13, 19): 1,[37mÂ·[0m2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
(line 14, column 8):
  unexpected "["
  expected identifier
  >  int[] a = [1, 2];
  >  int[][] aa = [a, a];
          ^
  >  int[] b = aa
failed
Exit Code: 100
[31m- should return exit code 200 *** FAILED ***[0m
[31m  100 was not equal to 200 (semanticErrArrayTests.scala:74)[0m
[32msemanticErr - array tests: noStringIndex.wacc[0m
>assignRhs> (12, 16): tr[37mÂ·[0m=[37mÂ·[0m"hello
                           [34m^[0m
<assignRhs< (12, 29): orld";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 16): tr[37mÂ·[0m=[37mÂ·[0m"hello
                           [34m^[0m
<assignRhs< (12, 29): orld";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 12): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mstr[0]
                           [34m^[0m
<assignRhs< (14, 1): r[0][32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: ArrayElem expected an array, got Some(string)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - array tests: wrongArrayDimension.wacc[0m
>assignRhs> (13, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2]
                           [34m^[0m
<assignRhs< (13, 19): 1,[37mÂ·[0m2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2]
                           [34m^[0m
<assignRhs< (13, 19): 1,[37mÂ·[0m2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 14): ps[37mÂ·[0m=[37mÂ·[0ma[1][2
                           [34m^[0m
<assignRhs< (15, 1): ][3][32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 200 *** FAILED ***[0m
[31m  0 was not equal to 200 (semanticErrArrayTests.scala:90)[0m
[32msemanticErr - array tests: wrongArrayType.wacc[0m
>assignRhs> (13, 31): ay[37mÂ·[0m=[37mÂ·[0m['a',[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 1): 'c'][32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected ArrayTypeNode(integer), got Some(ArrayTypeNode(char))
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32mSemanticErrExitTests:[0m
[32msemanticErr - exit tests: badCharExit.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m'
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m'
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m' [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m' [31mFail[0m
                             [34m^[0m
Exit statement requires an int expression, got Some(char)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - exit tests: exitNonInt.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m'f'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (12, 16): [37mÂ·[0m'f'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 12): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m'f'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (12, 16): [37mÂ·[0m'f'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
Exit statement requires an int expression, got Some(char)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - exit tests: globalReturn.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: expected None, got Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - exit tests: returnsInMain.wacc[0m
>asgnEqParser> (13, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (17, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (17, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (23, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (23, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
Type mismatch: expected None, got Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32mSemanticErrExpressionsTests:[0m
[32msemanticErr - expressions tests: boolOpTypeErr.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m||[37mÂ·[0m1
                           [34m^[0m
<assignRhs< (13, 1): ||[37mÂ·[0m1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected two booleans, got Some(integer) and Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - expressions tests: exprTypeErr.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m15[37mÂ·[0m+[37mÂ·[0m6
                           [34m^[0m
<assignRhs< (13, 1): |[37mÂ·[0m19[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected two booleans, got Some(integer) and Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - expressions tests: intOpTypeErr.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m+
                           [34m^[0m
<assignRhs< (13, 1): alse[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: Binary arithmetic operator expected two integers, got bool and bool
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - expressions tests: lessPairExpr.wacc[0m
>assignRhs> (12, 21): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (12, 34): 1,2)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 21): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (12, 34): 1,2)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (14, 21): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (14, 34): 2,3)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): y;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): y;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): y;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): y;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(PairTypeNode(integer,integer))
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - expressions tests: mixedOpTypeErr.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m+[37mÂ·[0m2[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 1): [37mÂ·[0m+[37mÂ·[0m5[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: Binary arithmetic operator expected two integers, got integer and bool
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - expressions tests: moreArrExpr.wacc[0m
>assignRhs> (12, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1,2];
                           [34m^[0m
<assignRhs< (12, 18): [1,2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1,2];
                           [34m^[0m
<assignRhs< (12, 18): [1,2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m[3,4];
                           [34m^[0m
<assignRhs< (13, 18): [3,4];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - expressions tests: stringElemErr.wacc[0m
>assignRhs> (12, 16): tr[37mÂ·[0m=[37mÂ·[0m"hello
                           [34m^[0m
<assignRhs< (12, 31): ld!"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 16): tr[37mÂ·[0m=[37mÂ·[0m"hello
                           [34m^[0m
<assignRhs< (12, 31): ld!"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mstr[0]
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mstr[0]
                            [34m^[0m
  <assignLhs< (14, 10): r[0][37mÂ·[0m=[37mÂ·[0m'H'[37mÂ·[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (14, 12): 0][37mÂ·[0m=[37mÂ·[0m'H'[37mÂ·[0m;[32mâ†™[0m
                             [34m^[0m
  <assignRhs< (14, 16): [37mÂ·[0m'H'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (14, 16): [37mÂ·[0m'H'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: ArrayElem expected an array, got Some(string)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32mSemanticErrIOTests:[0m
[32msemanticErr - IO tests: readTypeErr.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mre [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mre [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mb
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mb
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mb [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mb [31mFail[0m
                             [34m^[0m
>assignLhs> (13, 8): read[37mÂ·[0mb[37mÂ·[0m;[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m
                          [34m^[0m
<assignLhs< (13, 10): ad[37mÂ·[0mb[37mÂ·[0m;[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): ;[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): ;[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): ;[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): ;[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: expected int or char, got Some(bool)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32mSemanticErrFunctionTests:[0m
[32msemanticErr - function tests: callUndefFunction.wacc[0m
>assignRhs> (13, 16): lt[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (14, 1): b(5)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Function fib not found or arg count doesnt match
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - function tests: doubleArgDef.wacc[0m
>asgnEqParser> (13, 5): [37mÂ·[0mis[32mâ†™[0m	return
                             [34m^[0m
  >assignLhs> (13, 5): [37mÂ·[0mis[32mâ†™[0m	return
                            [34m^[0m
  <assignLhs< (13, 5): [37mÂ·[0mis[32mâ†™[0m	return [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [37mÂ·[0mis[32mâ†™[0m	return [31mFail[0m
                             [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - function tests: functionAssign.wacc[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0m2[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0m2[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0m2[32mâ†™[0men [32mGood[0m
                            [34m^[0m
  >assignRhs> (16, 7): [37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0m2[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m
                            [34m^[0m
  <assignRhs< (17, 1): [37mÂ·[0m=[37mÂ·[0m2[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (17, 1): [37mÂ·[0m=[37mÂ·[0m2[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 200 *** FAILED ***[0m
[31m  0 was not equal to 200 (semanticErrFunctionTests.scala:34)[0m
[32msemanticErr - function tests: functionBadArgUse.wacc[0m
>assignRhs> (13, 14): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m&&[37mÂ·[0mt
                           [34m^[0m
<assignRhs< (13, 24): true[37mÂ·[0m;[32mâ†™[0m		re [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 14): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m&&[37mÂ·[0mt
                           [34m^[0m
<assignRhs< (13, 24): true[37mÂ·[0m;[32mâ†™[0m		re [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 9): [37mÂ·[0m;[32mâ†™[0m		return
                             [34m^[0m
  >assignLhs> (14, 9): [37mÂ·[0m;[32mâ†™[0m		return
                            [34m^[0m
  <assignLhs< (14, 9): [37mÂ·[0m;[32mâ†™[0m		return [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 9): [37mÂ·[0m;[32mâ†™[0m		return [31mFail[0m
                             [34m^[0m
>assignRhs> (16, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (17, 1): (0)[37mÂ·[0m[32mâ†™[0mend[32mâ†™[0m	[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected two booleans, got Some(integer) and Some(bool)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - function tests: functionBadCall.wacc[0m
>asgnEqParser> (13, 9): is[32mâ†™[0m		return
                             [34m^[0m
  >assignLhs> (13, 9): is[32mâ†™[0m		return
                            [34m^[0m
  <assignLhs< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 14): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 23): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 14): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 23): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 5): )[37mÂ·[0m;[32mâ†™[0m	printl
                             [34m^[0m
  >assignLhs> (16, 5): )[37mÂ·[0m;[32mâ†™[0m	printl
                            [34m^[0m
  <assignLhs< (16, 5): )[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): )[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                             [34m^[0m
Type mismatch: expected bool, got Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - function tests: functionBadParam.wacc[0m
>asgnEqParser> (13, 9): is[32mâ†™[0m		return
                             [34m^[0m
  >assignLhs> (13, 9): is[32mâ†™[0m		return
                            [34m^[0m
  <assignLhs< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 14): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (15, 19): true[37mÂ·[0m;[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 14): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (15, 19): true[37mÂ·[0m;[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi [32mGood[0m
                           [34m^[0m
>assignRhs> (16, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (17, 1): (b)[37mÂ·[0m[32mâ†™[0mend[32mâ†™[0m	[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: Call expected List(integer), got List(Some(bool))
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - function tests: functionBadReturn.wacc[0m
>asgnEqParser> (13, 9): is[32mâ†™[0m		return
                             [34m^[0m
  >assignLhs> (13, 9): is[32mâ†™[0m		return
                            [34m^[0m
  <assignLhs< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 22): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 22): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 5): )[37mÂ·[0m;[32mâ†™[0m	printl
                             [34m^[0m
  >assignLhs> (16, 5): )[37mÂ·[0m;[32mâ†™[0m	printl
                            [34m^[0m
  <assignLhs< (16, 5): )[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): )[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                             [34m^[0m
Type mismatch: expected Some(integer), got Some(char)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - function tests: functionOverArgs.wacc[0m
>asgnEqParser> (13, 9): is[32mâ†™[0m		return
                             [34m^[0m
  >assignLhs> (13, 9): is[32mâ†™[0m		return
                            [34m^[0m
  <assignLhs< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 26): ,2,3);[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 26): ,2,3);[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 5): 3);[32mâ†™[0m	printl
                             [34m^[0m
  >assignLhs> (16, 5): 3);[32mâ†™[0m	printl
                            [34m^[0m
  <assignLhs< (16, 5): 3);[32mâ†™[0m	printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): 3);[32mâ†™[0m	printl [31mFail[0m
                             [34m^[0m
Expected 2 arguments, got 3
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - function tests: functionRedefine.wacc[0m
>asgnEqParser> (13, 9): is[32mâ†™[0m		return
                             [34m^[0m
  >assignLhs> (13, 9): is[32mâ†™[0m		return
                            [34m^[0m
  <assignLhs< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (18, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (18, 19): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (18, 19): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (19, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 200 *** FAILED ***[0m
[31m  0 was not equal to 200 (semanticErrFunctionTests.scala:82)[0m
[32msemanticErr - function tests: functionSwapArgs.wacc[0m
>asgnEqParser> (13, 9): is[32mâ†™[0m		return
                             [34m^[0m
  >assignLhs> (13, 9): is[32mâ†™[0m		return
                            [34m^[0m
  <assignLhs< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 27): ue,1);[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 27): ue,1);[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 5): 1);[32mâ†™[0m	printl
                             [34m^[0m
  >assignLhs> (16, 5): 1);[32mâ†™[0m	printl
                            [34m^[0m
  <assignLhs< (16, 5): 1);[32mâ†™[0m	printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): 1);[32mâ†™[0m	printl [31mFail[0m
                             [34m^[0m
Type mismatch: Call expected List(integer, bool), got List(Some(bool), Some(integer))
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - function tests: functionUnderArgs.wacc[0m
>asgnEqParser> (13, 9): is[32mâ†™[0m		return
                             [34m^[0m
  >assignLhs> (13, 9): is[32mâ†™[0m		return
                            [34m^[0m
  <assignLhs< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 9): is[32mâ†™[0m		return [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 22): [37mÂ·[0mf(1);[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 22): [37mÂ·[0mf(1);[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 5): 1);[32mâ†™[0m	printl
                             [34m^[0m
  >assignLhs> (16, 5): 1);[32mâ†™[0m	printl
                            [34m^[0m
  <assignLhs< (16, 5): 1);[32mâ†™[0m	printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): 1);[32mâ†™[0m	printl [31mFail[0m
                             [34m^[0m
Expected 2 arguments, got 1
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - function tests: funcVarAccess.wacc[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1
                            [34m^[0m
  <assignLhs< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
  >assignRhs> (13, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m	
                            [34m^[0m
  <assignRhs< (13, 12): =[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m		re [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 12): =[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m		re [32mGood[0m
                              [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1
                            [34m^[0m
  <assignLhs< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
  >assignRhs> (13, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m	
                            [34m^[0m
  <assignRhs< (13, 12): =[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m		re [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 12): =[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m		re [32mGood[0m
                              [34m^[0m
>asgnEqParser> (14, 9): [37mÂ·[0m;[32mâ†™[0m		return
                             [34m^[0m
  >assignLhs> (14, 9): [37mÂ·[0m;[32mâ†™[0m		return
                            [34m^[0m
  <assignLhs< (14, 9): [37mÂ·[0m;[32mâ†™[0m		return [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 9): [37mÂ·[0m;[32mâ†™[0m		return [31mFail[0m
                             [34m^[0m
>assignRhs> (16, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (16, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (16, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (16, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (17, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (17, 20): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 200 *** FAILED ***[0m
[31m  0 was not equal to 200 (semanticErrFunctionTests.scala:106)[0m
[32msemanticErr - function tests: invalidReturnsBranched.wacc[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (21, 16): lt[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (22, 1): [37mÂ·[0mf()[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: Ident expected a type, got None
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - function tests: mismatchingReturns.wacc[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0mt
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0mt
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0mt [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0mt [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (17, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (17, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0mt
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0mt
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0mt [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0mt [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (17, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (17, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (26, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (27, 1): lse)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected Some(integer), got Some(char)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32mSemanticErrIfTests:[0m
[32msemanticErr - if tests: ifIntCondition.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m15[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m15[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m15[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m15[37mÂ·[0m [31mFail[0m
                             [34m^[0m
Type mismatch: If condition must be boolean, got Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32mSemanticErrMultipleTests:[0m
[32msemanticErr - multiple tests: funcMess.wacc[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1
                            [34m^[0m
  <assignLhs< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
  >assignRhs> (13, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (13, 12): =[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 12): =[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1
                            [34m^[0m
  <assignLhs< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
  >assignRhs> (13, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (13, 12): =[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 12): =[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (17, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (17, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (17, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (17, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (18, 21): f(x)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: expected Some(integer), got Some(string)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - multiple tests: ifAndWhileErrs.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m15[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m15[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m15[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m15[37mÂ·[0m [31mFail[0m
                             [34m^[0m
Type mismatch: Ident expected a type, got None
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - multiple tests: messyExpr.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m((1[37mÂ·[0m+[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 44): |[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m((1[37mÂ·[0m+[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 44): |[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
Type mismatch: Binary arithmetic operator expected two integers, got integer and bool
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - multiple tests: multiCaseSensitivity.wacc[0m
>assignRhs> (12, 16): er[37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 19): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 16): er[37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 19): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 15): EX[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 17): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (18, 15): ed[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (18, 17): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Ident expected a type, got None
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - multiple tests: multiTypeErrs.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 16): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 16): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (13, 16): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m10[32mâ†™[0mend
                           [34m^[0m
<assignRhs< (15, 1): =[37mÂ·[0m10[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected integer, got Some(bool)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - multiple tests: obfuscatingReturnsWithWhile.wacc[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (16, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (16, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (16, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (16, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mfal
                             [34m^[0m
  >assignLhs> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mfal
                            [34m^[0m
  <assignLhs< (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mfal [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mfal [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (24, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (24, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (24, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (24, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (25, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (25, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (25, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (25, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (28, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (28, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (28, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (28, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
>asgnEqParser> (29, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (29, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (29, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (29, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (30, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (30, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (30, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (33, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (33, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (33, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (33, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (34, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (34, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (34, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (34, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (38, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (38, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (38, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (38, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (40, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m-
                             [34m^[0m
  >assignLhs> (40, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m-
                            [34m^[0m
  <assignLhs< (40, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m- [31mFail[0m
                            [34m^[0m
<asgnEqParser< (40, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m- [31mFail[0m
                             [34m^[0m
>assignRhs> (43, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (44, 1): [37mÂ·[0mf()[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected Some(integer), got Some(char)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32mSemanticErrPairsTests:[0m
[32msemanticErr - pairs tests: badPairAssign.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (13, 1): [37mÂ·[0m20)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected integer, got Some(PairTypeNode(integer,integer))
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - pairs tests: badPairExchange.wacc[0m
>assignRhs> (12, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (12, 35): 4,[37mÂ·[0m5);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (12, 35): 4,[37mÂ·[0m5);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
(line 13, column 12):
  unexpected ","
  expected "("
  >  pair(int, int) p = newpair(4, 5);
  >  pair(pair, int) q = newpair(p, 6);
              ^
  >  fst fst q = snd fst q
failed
Exit Code: 100
[31m- should return exit code 200 *** FAILED ***[0m
[31m  100 was not equal to 200 (semanticErrPairsTests.scala:26)[0m
[32msemanticErr - pairs tests: freeNonPair.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp
                           [34m^[0m
<assignRhs< (12, 12): x[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp
                           [34m^[0m
<assignRhs< (12, 12): x[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): 5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): 5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): 5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): 5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): x;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0m9
                             [34m^[0m
  >assignLhs> (14, 3): x;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0m9
                            [34m^[0m
  <assignLhs< (14, 3): x;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0m9 [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): x;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0m9 [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): ;[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): ;[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): ;[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): ;[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: expected pair or array, got Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - pairs tests: mismatchedPair.wacc[0m
>assignRhs> (12, 24): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (13, 1): [37mÂ·[0m20)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected PairTypeNode(char,bool), got Some(PairTypeNode(integer,integer))
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - pairs tests: nonMatchingPairs.wacc[0m
>assignRhs> (13, 23): p1[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (13, 36): 0,[37mÂ·[0m0);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 23): p1[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (13, 36): 0,[37mÂ·[0m0);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 25): p2[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (14, 42): [37mÂ·[0m'a');[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp2 [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp2[37mÂ·[0m=[37mÂ·[0mp
                             [34m^[0m
  >assignLhs> (15, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp2[37mÂ·[0m=[37mÂ·[0mp
                            [34m^[0m
  <assignLhs< (15, 6): [37mÂ·[0m[37mÂ·[0mp2[37mÂ·[0m=[37mÂ·[0mp1[32mâ†™[0me [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 8): p2[37mÂ·[0m=[37mÂ·[0mp1[32mâ†™[0mend
                            [34m^[0m
  <assignRhs< (16, 1): =[37mÂ·[0mp1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (16, 1): =[37mÂ·[0mp1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
Type mismatch: expected Some(PairTypeNode(char,char)), got Some(PairTypeNode(integer,integer))
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - pairs tests: noPairCovariance.wacc[0m
>assignRhs> (13, 30): cs[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (13, 35): null[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 30): cs[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (13, 35): null[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 30): ad[37mÂ·[0m=[37mÂ·[0mpcs[32mâ†™[0men
                           [34m^[0m
<assignRhs< (15, 1): [37mÂ·[0mpcs[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type checking not implemented for Null()
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - pairs tests: readUnknown.wacc[0m
(line 12, column 12):
  unexpected ","
  expected "("
  >begin
  >  pair(pair, int) p = null;
              ^
  >  read fst fst p
failed
Exit Code: 100
[31m- should return exit code 200 *** FAILED ***[0m
[31m  100 was not equal to 200 (semanticErrPairsTests.scala:66)[0m
[32msemanticErr - pairs tests: wrongTypeInParameterlessPair.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp
                           [34m^[0m
<assignRhs< (13, 12): c[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp
                           [34m^[0m
<assignRhs< (13, 12): c[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (14, 35): c,[37mÂ·[0mc);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
(line 15, column 12):
  unexpected ","
  expected "("
  >  pair(int, int) p = newpair(c, c);
  >  pair(pair, int) oops = newpair(p, 0);
              ^
  >
failed
Exit Code: 100
[31m- should return exit code 200 *** FAILED ***[0m
[31m  100 was not equal to 200 (semanticErrPairsTests.scala:74)[0m
[32mSemanticErrPrintTests:[0m
[32msemanticErr - print tests: printTypeErr01.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 12): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (13, 16): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Binary arithmetic operator expected two integers, got integer and char
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32mSemanticErrReadTests:[0m
[32msemanticErr - read tests: readIntoBadFst.wacc[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (12, 28): [37mÂ·[0mnull;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mre [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (12, 28): [37mÂ·[0mnull;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mre [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): l;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mf
                             [34m^[0m
  >assignLhs> (13, 3): l;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mf
                            [34m^[0m
  <assignLhs< (13, 3): l;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mf [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): l;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mf [31mFail[0m
                             [34m^[0m
>assignLhs> (13, 8): read[37mÂ·[0mfst[37mÂ·[0mp[32mâ†™[0m
                          [34m^[0m
<assignLhs< (14, 1): st[37mÂ·[0mp[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type checking not implemented for Null()
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - read tests: readIntoBadSnd.wacc[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (12, 28): [37mÂ·[0mnull;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mre [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (12, 28): [37mÂ·[0mnull;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mre [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): l;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0ms
                             [34m^[0m
  >assignLhs> (13, 3): l;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0ms
                            [34m^[0m
  <assignLhs< (13, 3): l;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0ms [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): l;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0ms [31mFail[0m
                             [34m^[0m
>assignLhs> (13, 8): read[37mÂ·[0msnd[37mÂ·[0mp[32mâ†™[0m
                          [34m^[0m
<assignLhs< (14, 1): nd[37mÂ·[0mp[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type checking not implemented for Null()
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - read tests: readTypeErr01.wacc[0m
>assignRhs> (12, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (12, 34): (1,2);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mre [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (12, 34): (1,2);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mre [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mp
                             [34m^[0m
  >assignLhs> (13, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mp
                            [34m^[0m
  <assignLhs< (13, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mp [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mp [31mFail[0m
                             [34m^[0m
>assignLhs> (13, 8): read[37mÂ·[0mp[32mâ†™[0mend[32mâ†™[0m
                          [34m^[0m
<assignLhs< (14, 1): ad[37mÂ·[0mp[32mâ†™[0mend[32mâ†™[0m[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected int or char, got Some(PairTypeNode(integer,integer))
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32mSemanticErrScopeTests:[0m
[32msemanticErr - scope tests: badParentScope.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb
                           [34m^[0m
<assignRhs< (13, 12): x[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb
                           [34m^[0m
<assignRhs< (13, 12): x[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): 5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (14, 3): 5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (14, 3): 5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): 5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
>assignRhs> (18, 15): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1][32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (19, 3): 1][32mâ†™[0m[37mÂ·[0m[37mÂ·[0mend[32mâ†™[0men [32mGood[0m
                          [34m^[0m
Type mismatch: expected pair or array, got Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - scope tests: badScopeRedefine.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (14, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (14, 19): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (14, 19): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[32mâ†™[0m[37mÂ·[0m[37mÂ·[0men
                            [34m^[0m
  <assignRhs< (16, 3): [37mÂ·[0m5[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mend[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m5[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mend[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                             [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
Type mismatch: expected Some(bool), got Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32mSemanticErrVariablesTests:[0m
[32msemanticErr - variables tests: basicTypeErr01.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mtrue[32mâ†™[0me
                           [34m^[0m
<assignRhs< (13, 1): true[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected integer, got Some(bool)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: basicTypeErr02.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m'f'[32mâ†™[0men
                           [34m^[0m
<assignRhs< (13, 1): [37mÂ·[0m'f'[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected integer, got Some(char)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: basicTypeErr03.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m"foo"[32mâ†™[0m
                           [34m^[0m
<assignRhs< (13, 1): foo"[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected integer, got Some(string)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: basicTypeErr04.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m
                           [34m^[0m
<assignRhs< (13, 1): [37mÂ·[0m=[37mÂ·[0m1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected bool, got Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: basicTypeErr05.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m't'[32mâ†™[0men
                           [34m^[0m
<assignRhs< (13, 1): [37mÂ·[0m't'[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected bool, got Some(char)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: basicTypeErr06.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m"true"
                           [34m^[0m
<assignRhs< (13, 1): rue"[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected bool, got Some(string)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: basicTypeErr07.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m
                           [34m^[0m
<assignRhs< (13, 1): [37mÂ·[0m=[37mÂ·[0m1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected char, got Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: basicTypeErr08.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0mfalse[32mâ†™[0m
                           [34m^[0m
<assignRhs< (13, 1): alse[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected char, got Some(bool)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: basicTypeErr09.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m"a"[32mâ†™[0men
                           [34m^[0m
<assignRhs< (13, 1): [37mÂ·[0m"a"[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected char, got Some(string)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: basicTypeErr10.wacc[0m
>assignRhs> (12, 14): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m128[32mâ†™[0men
                           [34m^[0m
<assignRhs< (13, 1): [37mÂ·[0m128[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected string, got Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: basicTypeErr11.wacc[0m
>assignRhs> (12, 14): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0mtrue[32mâ†™[0me
                           [34m^[0m
<assignRhs< (13, 1): true[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected string, got Some(bool)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: basicTypeErr12.wacc[0m
>assignRhs> (12, 14): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m'h'[32mâ†™[0men
                           [34m^[0m
<assignRhs< (13, 1): [37mÂ·[0m'h'[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: expected string, got Some(char)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: caseMatters.wacc[0m
>assignRhs> (13, 16): er[37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 19): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 16): er[37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 19): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Ident expected a type, got None
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: doubleDeclare.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m20[32mâ†™[0mend
                           [34m^[0m
<assignRhs< (14, 1): =[37mÂ·[0m20[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 200 *** FAILED ***[0m
[31m  0 was not equal to 200 (semanticErrVariablesTests.scala:122)[0m
[32msemanticErr - variables tests: undeclaredScopeVar.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[32mâ†™[0m[37mÂ·[0m[37mÂ·[0men
                           [34m^[0m
<assignRhs< (14, 3): [37mÂ·[0m5[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mend[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[32mâ†™[0m[37mÂ·[0m[37mÂ·[0men
                           [34m^[0m
<assignRhs< (14, 3): [37mÂ·[0m5[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mend[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[32mâ†™[0me [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[32mâ†™[0mend
                            [34m^[0m
  <assignRhs< (16, 1): =[37mÂ·[0m10[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (16, 1): =[37mÂ·[0m10[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 200 *** FAILED ***[0m
[31m  0 was not equal to 200 (semanticErrVariablesTests.scala:130)[0m
[32msemanticErr - variables tests: undeclaredVarAccess.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (13, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0my[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (14, 1): [37mÂ·[0m+[37mÂ·[0my[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (14, 1): [37mÂ·[0m+[37mÂ·[0my[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
Type mismatch: Binary arithmetic operator expected two integers, got integer and char
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - variables tests: undeclaredVar.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[32mâ†™[0me [32mGood[0m
                            [34m^[0m
  >assignRhs> (12, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[32mâ†™[0mend
                            [34m^[0m
  <assignRhs< (13, 1): =[37mÂ·[0m10[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (13, 1): =[37mÂ·[0m10[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 200 *** FAILED ***[0m
[31m  0 was not equal to 200 (semanticErrVariablesTests.scala:146)[0m
[32mSemanticErrWhileTests:[0m
[32msemanticErr - while tests: falsErr.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
Type mismatch: Ident expected a type, got None
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - while tests: truErr.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
Type mismatch: Ident expected a type, got None
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32msemanticErr - while tests: whileIntCondition.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
Type mismatch: While loop condition must be a boolean, got Some(integer)
failed
Exit Code: 200
[32m- should return exit code 200[0m
[32mSyntaxErrArrayTests:[0m
[32msyntaxErr - array tests: arrayExpr.wacc[0m
>assignRhs> (12, 13): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                           [34m^[0m
<assignRhs< (12, 24): [37mÂ·[0m3][37mÂ·[0m++[37mÂ·[0m[4][37mÂ·[0m [31mFail[0m
                           [34m^[0m
>assignRhs> (12, 13): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                           [34m^[0m
<assignRhs< (12, 24): [37mÂ·[0m3][37mÂ·[0m++[37mÂ·[0m[4][37mÂ·[0m [31mFail[0m
                           [34m^[0m
(line 12, column 25):
  unexpected space
  expected digit
  >begin
  >  int[] b = [1, 2, 3] ++ [4] ;
                           ^
  > println b[3]
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32mSyntaxErrBasicTests:[0m
[32msyntaxErr - basic tests: badComment2.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[37mÂ·[0mc
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m10[37mÂ·[0m;[37mÂ·[0mcan[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[37mÂ·[0mc
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m10[37mÂ·[0m;[37mÂ·[0mcan[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 16): 10[37mÂ·[0m;[37mÂ·[0mcan[37mÂ·[0mI[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (12, 16): 10[37mÂ·[0m;[37mÂ·[0mcan[37mÂ·[0mI[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (12, 20): [37mÂ·[0mcan[37mÂ·[0mI[37mÂ·[0mput[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (12, 20): [37mÂ·[0mcan[37mÂ·[0mI[37mÂ·[0mput[37mÂ·[0m [31mFail[0m
                              [34m^[0m
(line 12, column 20):
  unexpected "I"
  expected "=" or expected start of array
  >begin
  >  int x = 10 ; can I put in-line comments after the ';'?
                      ^
  >  x = 20 ; #yes, but only if you remember to use the '#' charcter!
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - basic tests: badComment.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0moops,[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0moops,[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 7): [37mÂ·[0moops,[37mÂ·[0mthis [32mGood[0m
                            [34m^[0m
<asgnEqParser< (12, 7): [37mÂ·[0moops,[37mÂ·[0mthis [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0moops,[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0moops,[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 7): [37mÂ·[0moops,[37mÂ·[0mthis [32mGood[0m
                            [34m^[0m
<asgnEqParser< (12, 7): [37mÂ·[0moops,[37mÂ·[0mthis [31mFail[0m
                             [34m^[0m
(line 12, column 7):
  unexpected ","
  expected "=" or expected start of array
  >begin
  >  oops, this is supposed to be a comment
         ^
  >  print "Hello World!\n"
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - basic tests: badEscape.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m'\H'[32mâ†™[0me
                           [34m^[0m
<assignRhs< (12, 14): [37mÂ·[0m=[37mÂ·[0m'\H'[32mâ†™[0mend [31mFail[0m
                           [34m^[0m
>assignRhs> (12, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m'\H'[32mâ†™[0me
                           [34m^[0m
<assignRhs< (12, 14): [37mÂ·[0m=[37mÂ·[0m'\H'[32mâ†™[0mend [31mFail[0m
                           [34m^[0m
(line 12, column 14):
  unexpected "H"
  expected end of escape sequence
  invalid escape sequence
  >begin
  >  char a = '\H'
                ^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - basic tests: beginNoend.wacc[0m
(line 12, column 1):
  unexpected end of input
  expected end
  >begin skip
  >
   ^
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - basic tests: bgnErr.wacc[0m
(line 11, column 1):
  unexpected "bgn"
  expected begin
  >
  >bgn skip end
   ^^^
  >
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - basic tests: multipleBegins.wacc[0m
(line 15, column 1):
  unexpected "b"
  expected end of input
  >
  >begin 
   ^
  >  skip 
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - basic tests: noBody.wacc[0m
>asgnEqParser> (11, 7): egin[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m
                             [34m^[0m
  >assignLhs> (11, 7): egin[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m
                            [34m^[0m
  <assignLhs< (11, 7): egin[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 7): egin[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 7): egin[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m
                             [34m^[0m
  >assignLhs> (11, 7): egin[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m
                            [34m^[0m
  <assignLhs< (11, 7): egin[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 7): egin[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                             [34m^[0m
(line 11, column 7):
  unexpected keyword end
  expected begin, fst, identifier, if, newpair, null, snd, statement, type, or while loopS
  >
  >begin end
         ^^^
  >
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - basic tests: skpErr.wacc[0m
>asgnEqParser> (11, 7): egin[37mÂ·[0mskp[37mÂ·[0men
                             [34m^[0m
  >assignLhs> (11, 7): egin[37mÂ·[0mskp[37mÂ·[0men
                            [34m^[0m
  <assignLhs< (11, 11): [37mÂ·[0mskp[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (11, 11): [37mÂ·[0mskp[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (11, 7): egin[37mÂ·[0mskp[37mÂ·[0men
                             [34m^[0m
  >assignLhs> (11, 7): egin[37mÂ·[0mskp[37mÂ·[0men
                            [34m^[0m
  <assignLhs< (11, 11): [37mÂ·[0mskp[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (11, 11): [37mÂ·[0mskp[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                              [34m^[0m
(line 11, column 11):
  unexpected "e"
  expected "=" or expected start of array
  >
  >begin skp end
             ^
  >
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - basic tests: unescapedChar.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m'"'[32mâ†™[0men
                           [34m^[0m
<assignRhs< (13, 1): [37mÂ·[0m'"'[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 100 *** FAILED ***[0m
[31m  0 was not equal to 100 (syntaxErrBasicTests.scala:82)[0m
[32mSyntaxErrFunctionTests:[0m
[32msyntaxErr - function tests: badlyNamed.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mintf()
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mintf()
                            [34m^[0m
  <assignLhs< (12, 7): [37mÂ·[0mintf()[37mÂ·[0mis[32mâ†™[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (12, 7): [37mÂ·[0mintf()[37mÂ·[0mis[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mintf()
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mintf()
                            [34m^[0m
  <assignLhs< (12, 7): [37mÂ·[0mintf()[37mÂ·[0mis[32mâ†™[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (12, 7): [37mÂ·[0mintf()[37mÂ·[0mis[32mâ†™[0m [31mFail[0m
                             [34m^[0m
(line 12, column 7):
  unexpected "("
  expected "=" or expected start of array
  >begin
  >  intf() is
         ^
  >    return 42
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - function tests: badlyPlaced.wacc[0m
(line 11, column 1):
  unexpected "int"
  expected begin
  >
  >int foo() is
   ^^^
  >  return 42
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - function tests: funcExpr2.wacc[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): nd[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): nd[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): nd[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): nd[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): nd[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): nd[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): nd[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): nd[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (16, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (16, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                           [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
(line 17, column 14):
  unexpected "(x"
  expected arithmetic operator, comparison operator, do, expected start of array, or logical operator
  >  int x = 2 ;
  >  while x > f(x) do
                ^^
  >    println x ;
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - function tests: funcExpr.wacc[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mf()[37mÂ·[0m+[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 12): x[37mÂ·[0m=[37mÂ·[0mf()[37mÂ·[0m+[37mÂ·[0mf [32mGood[0m
                           [34m^[0m
(line 15, column 12):
  unexpected "()"
  expected arithmetic operator, comparison operator, end, expected start of array, or logical operator
  >  end
  >  int x = f() + f()
              ^^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - function tests: functionConditionalNoReturn.wacc[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m([37mÂ·[0mb
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m([37mÂ·[0mb
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m([37mÂ·[0mb [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m([37mÂ·[0mb [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m([37mÂ·[0mb
                             [34m^[0m
  >assignLhs> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m([37mÂ·[0mb
                            [34m^[0m
  <assignLhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m([37mÂ·[0mb [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0m([37mÂ·[0mb [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (25, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (25, 29): se[37mÂ·[0m)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (25, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (25, 29): se[37mÂ·[0m)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (26, 12): [37mÂ·[0md[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mg
                           [34m^[0m
<assignRhs< (27, 1): ue[37mÂ·[0m)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 100 *** FAILED ***[0m
[31m  200 was not equal to 100 (syntaxErrFunctionTests.scala:50)[0m
[32msyntaxErr - function tests: functionEndingNotReturn.wacc[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (16, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (16, 19): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (16, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (16, 19): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (17, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 100 *** FAILED ***[0m
[31m  0 was not equal to 100 (syntaxErrFunctionTests.scala:58)[0m
[32msyntaxErr - function tests: functionLateDefine.wacc[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 19): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 19): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
(line 17, column 8):
  unexpected "("
  expected "="
  >  println x ;
  >  int g() is
          ^
  >    return 1
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - function tests: functionMissingCall.wacc[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mf()[32mâ†™[0men
                           [34m^[0m
<assignRhs< (15, 12): x[37mÂ·[0m=[37mÂ·[0mf()[32mâ†™[0mend [32mGood[0m
                           [34m^[0m
(line 15, column 12):
  unexpected "()"
  expected arithmetic operator, comparison operator, end, expected start of array, or logical operator
  >  end
  >  int x = f()
              ^^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - function tests: functionMissingParam.wacc[0m
(line 12, column 8):
  unexpected "("
  expected "="
  >begin
  >  int f(int x, int y,) is
          ^
  >    return 0 
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - function tests: functionMissingPType.wacc[0m
(line 12, column 8):
  unexpected "("
  expected "="
  >begin
  >  int f(x) is
          ^
  >    return 0 
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - function tests: functionMissingType.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf()[37mÂ·[0mis
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf()[37mÂ·[0mis
                            [34m^[0m
  <assignLhs< (12, 4): n[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf()[37mÂ·[0mis[32mâ†™[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (12, 4): n[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf()[37mÂ·[0mis[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf()[37mÂ·[0mis
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf()[37mÂ·[0mis
                            [34m^[0m
  <assignLhs< (12, 4): n[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf()[37mÂ·[0mis[32mâ†™[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (12, 4): n[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf()[37mÂ·[0mis[32mâ†™[0m [31mFail[0m
                             [34m^[0m
(line 12, column 4):
  unexpected "("
  expected "=" or expected start of array
  >begin
  >  f() is
      ^
  >    return 0 
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - function tests: functionNoReturn.wacc[0m
>assignRhs> (12, 14): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m[32mâ†™[0m
                           [34m^[0m
<assignRhs< (13, 3): e[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mend[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 19): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 19): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 100 *** FAILED ***[0m
[31m  0 was not equal to 100 (syntaxErrFunctionTests.scala:106)[0m
[32msyntaxErr - function tests: functionReturnInLoop.wacc[0m
>assignRhs> (13, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 14): i[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 14): i[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1;
                             [34m^[0m
  <assignRhs< (15, 16): i[37mÂ·[0m+[37mÂ·[0m1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (15, 16): i[37mÂ·[0m+[37mÂ·[0m1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1;
                             [34m^[0m
  <assignRhs< (15, 16): i[37mÂ·[0m+[37mÂ·[0m1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (15, 16): i[37mÂ·[0m+[37mÂ·[0m1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mi[37mÂ·[0m>
                             [34m^[0m
  >assignLhs> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mi[37mÂ·[0m>
                            [34m^[0m
  <assignLhs< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mi[37mÂ·[0m> [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mi[37mÂ·[0m> [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (18, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (18, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (24, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (24, 22): (10)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (24, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (24, 22): (10)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 100 *** FAILED ***[0m
[31m  200 was not equal to 100 (syntaxErrFunctionTests.scala:114)[0m
[32msyntaxErr - function tests: functionScopeDef.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
(line 13, column 10):
  unexpected "("
  expected "="
  >  begin
  >    int f() is
            ^
  >      return 0 
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - function tests: mutualRecursionNoReturn.wacc[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (18, 15): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                           [34m^[0m
<assignRhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (18, 15): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                           [34m^[0m
<assignRhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (26, 13): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                           [34m^[0m
<assignRhs< (27, 3): 1)[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mend[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>assignRhs> (29, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (29, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (29, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (29, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  >assignLhs> (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  <assignLhs< (30, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                            [34m^[0m
  >assignRhs> (30, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                            [34m^[0m
  <assignRhs< (31, 1): 1(8)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (31, 1): 1(8)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 100 *** FAILED ***[0m
[31m  200 was not equal to 100 (syntaxErrFunctionTests.scala:130)[0m
[32msyntaxErr - function tests: noBodyAfterFuncs.wacc[0m
>asgnEqParser> (13, 3): is[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (13, 3): is[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (13, 3): is[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): is[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 1): [37mÂ·[0mend[32mâ†™[0mend[32mâ†™[0m	[32mâ†™[0m[31mâ€¢[0m
                             [34m^[0m
  >assignLhs> (15, 1): [37mÂ·[0mend[32mâ†™[0mend[32mâ†™[0m	[32mâ†™[0m[31mâ€¢[0m
                            [34m^[0m
  <assignLhs< (15, 1): [37mÂ·[0mend[32mâ†™[0mend[32mâ†™[0m	[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 1): [37mÂ·[0mend[32mâ†™[0mend[32mâ†™[0m	[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 1): [37mÂ·[0mend[32mâ†™[0mend[32mâ†™[0m	[32mâ†™[0m[31mâ€¢[0m
                             [34m^[0m
  >assignLhs> (15, 1): [37mÂ·[0mend[32mâ†™[0mend[32mâ†™[0m	[32mâ†™[0m[31mâ€¢[0m
                            [34m^[0m
  <assignLhs< (15, 1): [37mÂ·[0mend[32mâ†™[0mend[32mâ†™[0m	[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 1): [37mÂ·[0mend[32mâ†™[0mend[32mâ†™[0m	[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                             [34m^[0m
(line 15, column 1):
  unexpected keyword end
  expected begin, fst, identifier, if, newpair, null, snd, statement, type, or while loopS
  >  end
  >end
   ^^^
  > 
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - function tests: thisIsNotC.wacc[0m
(line 12, column 8):
  unexpected "("
  expected "="
  >begin
  >  int f(int *x) is 
          ^
  >    *x = *x + 1;
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32mSyntaxErrExpressionsTests:[0m
[32msyntaxErr - expressions tests: missingOperand1.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m*[37mÂ·[0m6[32mâ†™[0men
                           [34m^[0m
<assignRhs< (12, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m*[37mÂ·[0m6[32mâ†™[0men [31mFail[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m*[37mÂ·[0m6[32mâ†™[0men
                           [34m^[0m
<assignRhs< (12, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m*[37mÂ·[0m6[32mâ†™[0men [31mFail[0m
                           [34m^[0m
(line 12, column 11):
  unexpected "*"
  expected """, "'", "(", "+", "-", arithmetic operator, boolean, call, digit, expected start of array, fst, identifier, logical operator, newpair, null, snd, or unary operator
  unclosed braces
  >begin
  >  int b = * 6
             ^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - expressions tests: missingOperand2.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m-[37mÂ·[0m[32mâ†™[0me
                           [34m^[0m
<assignRhs< (13, 1): 2[37mÂ·[0m-[37mÂ·[0m[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                          [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m-[37mÂ·[0m[32mâ†™[0me
                           [34m^[0m
<assignRhs< (13, 1): 2[37mÂ·[0m-[37mÂ·[0m[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                          [34m^[0m
(line 13, column 1):
  unexpected keyword end
  expected """, "'", "(", "+", "-", arithmetic operator, boolean, digit, expected start of array, fst, identifier, logical operator, newpair, null, snd, or unary operator
  unclosed braces
  >  int b = 2 - 
  >end
   ^^^
  >
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - expressions tests: printlnConcat.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
(line 12, column 22):
  unexpected space
  expected digit
  >begin
  >  println "Hello " ++ "World!"
                        ^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32mSyntaxErrIfTests:[0m
[32msyntaxErr - if tests: ifiErr.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mifi[37mÂ·[0mtr
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mifi[37mÂ·[0mtr
                            [34m^[0m
  <assignLhs< (12, 7): [37mÂ·[0mifi[37mÂ·[0mtrue[37mÂ·[0m[32mâ†™[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (12, 7): [37mÂ·[0mifi[37mÂ·[0mtrue[37mÂ·[0m[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mifi[37mÂ·[0mtr
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mifi[37mÂ·[0mtr
                            [34m^[0m
  <assignLhs< (12, 7): [37mÂ·[0mifi[37mÂ·[0mtrue[37mÂ·[0m[32mâ†™[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (12, 7): [37mÂ·[0mifi[37mÂ·[0mtrue[37mÂ·[0m[32mâ†™[0m [31mFail[0m
                             [34m^[0m
(line 12, column 7):
  unexpected "t"
  expected "=" or expected start of array
  >begin
  >  ifi true 
         ^
  >  then
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - if tests: ifNoelse.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
(line 15, column 3):
  unexpected "fi"
  expected else
  >    skip
  >  fi
     ^^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - if tests: ifNofi.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
(line 17, column 1):
  unexpected "en"
  expected fi
  >    skip
  >end
   ^^
  >
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - if tests: ifNothen.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
(line 13, column 3):
  unexpected "else"
  expected arithmetic operator, comparison operator, logical operator, or then
  >  if true 
  >  else
     ^^^^
  >    skip
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32mSyntaxErrLiteralsTests:[0m
[32msyntaxErr - literals tests: charLiteralSingle.wacc[0m
>assignRhs> (13, 14): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'Hello
                           [34m^[0m
<assignRhs< (13, 16): [37mÂ·[0m=[37mÂ·[0m'Hello[37mÂ·[0mJ [31mFail[0m
                           [34m^[0m
>assignRhs> (13, 14): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'Hello
                           [34m^[0m
<assignRhs< (13, 16): [37mÂ·[0m=[37mÂ·[0m'Hello[37mÂ·[0mJ [31mFail[0m
                           [34m^[0m
(line 13, column 16):
  unexpected "e"
  expected "'"
  >begin
  >    char c = 'Hello Jamie'
                  ^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - literals tests: stringLiteralNoNewlines.wacc[0m
>assignRhs> (12, 16): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m"hello
                           [34m^[0m
<assignRhs< (12, 22): hello[32mâ†™[0m[37mÂ·[0mworl [31mFail[0m
                           [34m^[0m
>assignRhs> (12, 16): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m"hello
                           [34m^[0m
<assignRhs< (12, 22): hello[32mâ†™[0m[37mÂ·[0mworl [31mFail[0m
                           [34m^[0m
(line 12, column 22):
  unexpected newline
  expected """ or string character
  >begin
  >    string s = "hello
                        ^
  > world"
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - literals tests: stringLiteralOnlyAscii.wacc[0m
>assignRhs> (12, 16): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m"hÃ©llo
                           [34m^[0m
<assignRhs< (12, 28): world"[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                           [34m^[0m
>assignRhs> (12, 16): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m"hÃ©llo
                           [34m^[0m
<assignRhs< (12, 28): world"[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                           [34m^[0m
(line 12, column 17):
  non-ascii characters in string literal, this is not allowed
  >begin
  >    string s = "hÃ©llo world"
                   ^^^^^^^^^^^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32mSyntaxErrPairsTests:[0m
[32msyntaxErr - pairs tests: badLookup01.wacc[0m
>assignRhs> (12, 25): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (12, 42): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 25): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (12, 42): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 100 *** FAILED ***[0m
[31m  0 was not equal to 100 (syntaxErrPairsTests.scala:18)[0m
[32msyntaxErr - pairs tests: badLookup02.wacc[0m
>assignRhs> (12, 25): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (12, 42): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 25): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (12, 42): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[31m- should return exit code 100 *** FAILED ***[0m
[31m  0 was not equal to 100 (syntaxErrPairsTests.scala:26)[0m
[32msyntaxErr - pairs tests: elemOfNonPair.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi
                           [34m^[0m
<assignRhs< (13, 12): a[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi
                           [34m^[0m
<assignRhs< (13, 12): a[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0ma;
                           [34m^[0m
<assignRhs< (14, 16): fst[37mÂ·[0ma;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0m(5
                           [34m^[0m
<assignRhs< (15, 15): [37mÂ·[0msnd[37mÂ·[0m(5[37mÂ·[0m+[37mÂ·[0m' [31mFail[0m
                           [34m^[0m
(line 15, column 15):
  unexpected "("
  expected identifier
  >  int b = fst a;
  >  int c = snd (5 + 'a')
                 ^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - pairs tests: fstNull.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mnu
                           [34m^[0m
<assignRhs< (12, 15): [37mÂ·[0mfst[37mÂ·[0mnull;[32mâ†™[0m [31mFail[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mnu
                           [34m^[0m
<assignRhs< (12, 15): [37mÂ·[0mfst[37mÂ·[0mnull;[32mâ†™[0m [31mFail[0m
                           [34m^[0m
(line 12, column 15):
  unexpected keyword null
  expected identifier
  >begin
  >  int i = fst null;
                 ^^^^
  >  println i
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - pairs tests: noNesting.wacc[0m
(line 12, column 27):
  unexpected ","
  expected "[]"
  >begin
  >    pair(pair(int, string), char) p = null
                             ^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - pairs tests: sndNull.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mnu
                           [34m^[0m
<assignRhs< (12, 15): [37mÂ·[0msnd[37mÂ·[0mnull;[32mâ†™[0m [31mFail[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mnu
                           [34m^[0m
<assignRhs< (12, 15): [37mÂ·[0msnd[37mÂ·[0mnull;[32mâ†™[0m [31mFail[0m
                           [34m^[0m
(line 12, column 15):
  unexpected keyword null
  expected identifier
  >begin
  >  int i = snd null;
                 ^^^^
  >  println i
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32mSyntaxErrPrintTests:[0m
[32msyntaxErr - print tests: printlnCharArry.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(ArrayTypeNode(char))
failed
Exit Code: 200
[31m- should return exit code 100 *** FAILED ***[0m
[31m  200 was not equal to 100 (syntaxErrPrintTests.scala:18)[0m
[32mSyntaxErrSequenceTests:[0m
[32msyntaxErr - sequence tests: doubleSeq.wacc[0m
>asgnEqParser> (12, 8): skip;;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0msk
                             [34m^[0m
  >assignLhs> (12, 8): skip;;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0msk
                            [34m^[0m
  <assignLhs< (12, 8): skip;;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0msk [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 8): skip;;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0msk [31mFail[0m
                             [34m^[0m
(line 12, column 8):
  unexpected ";"
  expected begin, fst, identifier, if, newpair, null, snd, statement, type, or while loopS
  >begin 
  >  skip;;
          ^
  >  skip 
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - sequence tests: emptySeq.wacc[0m
>asgnEqParser> (11, 7): egin[37mÂ·[0m;[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m
                             [34m^[0m
  >assignLhs> (11, 7): egin[37mÂ·[0m;[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m
                            [34m^[0m
  <assignLhs< (11, 7): egin[37mÂ·[0m;[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 7): egin[37mÂ·[0m;[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 7): egin[37mÂ·[0m;[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m
                             [34m^[0m
  >assignLhs> (11, 7): egin[37mÂ·[0m;[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m
                            [34m^[0m
  <assignLhs< (11, 7): egin[37mÂ·[0m;[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 7): egin[37mÂ·[0m;[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                             [34m^[0m
(line 11, column 7):
  unexpected ";"
  expected begin, fst, identifier, if, newpair, null, snd, statement, type, or while loopS
  >
  >begin ; end
         ^
  >
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - sequence tests: endSeq.wacc[0m
(line 11, column 15):
  unexpected ";"
  expected end of input
  >
  >begin skip end;
                 ^
  >
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - sequence tests: extraSeq.wacc[0m
>asgnEqParser> (11, 13): kip;[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m
                              [34m^[0m
  >assignLhs> (11, 13): kip;[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m
                             [34m^[0m
  <assignLhs< (11, 13): kip;[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (11, 13): kip;[37mÂ·[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                              [34m^[0m
(line 11, column 13):
  unexpected keyword end
  expected begin, fst, identifier, if, newpair, null, snd, statement, type, or while loopS
  >
  >begin skip; end
               ^^^
  >
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - sequence tests: missingSeq.wacc[0m
(line 13, column 3):
  unexpected "ski"
  expected end
  >  skip
  >  skip 
     ^^^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32mSyntaxErrVariablesTests:[0m
[32msyntaxErr - variables tests: badintAssignments1.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m22[37mÂ·[0m0[32mâ†™[0me
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m22[37mÂ·[0m0[32mâ†™[0mend[37mÂ·[0m [32mGood[0m
                           [34m^[0m
(line 12, column 14):
  unexpected "0"
  expected arithmetic operator, comparison operator, end, or logical operator
  >begin
  >  int x = 22 0
                ^
  >end 
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - variables tests: badintAssignments2.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m1A4[32mâ†™[0men
                           [34m^[0m
<assignRhs< (12, 12): y[37mÂ·[0m=[37mÂ·[0m1A4[32mâ†™[0mend [32mGood[0m
                           [34m^[0m
(line 12, column 12):
  unexpected "A4"
  expected arithmetic operator, comparison operator, digit, end, or logical operator
  >begin
  >  int y = 1A4
              ^^
  >end 
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - variables tests: badintAssignments.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m22[37mÂ·[0m0[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m22[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
(line 12, column 14):
  unexpected "0"
  expected arithmetic operator, comparison operator, end, or logical operator
  >begin
  >  int x = 22 0 ;
                ^
  >  int y = 1A4
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - variables tests: bigIntAssignment.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m220000
                           [34m^[0m
<assignRhs< (12, 21): 00000[37mÂ·[0m[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m220000
                           [34m^[0m
<assignRhs< (12, 21): 00000[37mÂ·[0m[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [31mFail[0m
                           [34m^[0m
(line 12, column 11):
  literal is not within the range -2147483648 to 2147483647
  >begin
  >  int x = 2200000000 
             ^^^^^^^^^^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - variables tests: varNoName.wacc[0m
(line 13, column 7):
  unexpected "="
  expected "[]" or identifier
  >begin
  >  int = 42
         ^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32mSyntaxErrWhileTests:[0m
[32msyntaxErr - while tests: donoErr.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
(line 14, column 3):
  unexpected "dono"
  expected done
  >    skip
  >  dono
     ^^^^
  >end
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - while tests: dooErr.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
(line 12, column 17):
  unexpected "o"
  expected end of do
  >begin
  >  while false doo
                   ^
  >    skip
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - while tests: whileNodone.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
(line 14, column 1):
  unexpected "end"
  expected done
  >    skip
  >end
   ^^^
  >
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - while tests: whileNodo.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
(line 13, column 5):
  unexpected "sk"
  expected arithmetic operator, comparison operator, do, or logical operator
  >  while false
  >    skip
       ^^
  >  done
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32msyntaxErr - while tests: whilErr.wacc[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhil[37mÂ·[0mf
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhil[37mÂ·[0mf
                            [34m^[0m
  <assignLhs< (12, 8): whil[37mÂ·[0mfalse[37mÂ·[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (12, 8): whil[37mÂ·[0mfalse[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhil[37mÂ·[0mf
                             [34m^[0m
  >assignLhs> (12, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhil[37mÂ·[0mf
                            [34m^[0m
  <assignLhs< (12, 8): whil[37mÂ·[0mfalse[37mÂ·[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (12, 8): whil[37mÂ·[0mfalse[37mÂ·[0m [31mFail[0m
                             [34m^[0m
(line 12, column 8):
  unexpected "f"
  expected "=" or expected start of array
  >begin
  >  whil false do
          ^
  >    skip
failed
Exit Code: 100
[32m- should return exit code 100[0m
[32mValidAdvancedTests:[0m
[32mvalid - advanced tests: binarySortTree.wacc[0m
(line 16, column 17):
  unexpected ")"
  expected "("
  >  # and points to the two given pairs.
  >  pair(int, pair) createNewNode(int value, pair(int, pair) left, pair(int, pair) right) is
                   ^
  >    pair(pair, pair) p = newpair(left, right) ;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validAdvancedTests.scala:18)[0m
[32mvalid - advanced tests: hashTable.wacc[0m
(line 14, column 14):
  unexpected "("
  expected "="
  > # Given a hash table, initialise it. Return true.
  > bool init(pair(int, pair)[] table) is
             ^
  >  int length = len table ;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validAdvancedTests.scala:26)[0m
[32mvalid - advanced tests: ticTacToe.wacc[0m
>asgnEqParser> (43, 9): is[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (43, 9): is[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (43, 9): is[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (43, 9): is[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (43, 9): is[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (43, 9): is[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (43, 9): is[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (43, 9): is[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (44, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (44, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (44, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (44, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (45, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (45, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (45, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (45, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (46, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (46, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (46, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (46, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (47, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (47, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (47, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (47, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (48, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (48, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (48, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (48, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (49, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (49, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (49, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (49, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (50, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (50, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (50, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (50, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (51, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (51, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (51, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (51, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (52, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (52, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (52, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (52, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>assignRhs> (54, 23): en[37mÂ·[0m=[37mÂ·[0m'\0'[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (54, 28): '\0'[37mÂ·[0m;[32mâ†™[0m		wh [32mGood[0m
                           [34m^[0m
>asgnEqParser> (55, 9): [37mÂ·[0m;[32mâ†™[0m		while[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (55, 9): [37mÂ·[0m;[32mâ†™[0m		while[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (55, 9): [37mÂ·[0m;[32mâ†™[0m		while[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (55, 9): [37mÂ·[0m;[32mâ†™[0m		while[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (56, 13): [37mÂ·[0m[32mâ†™[0m			print[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (56, 13): [37mÂ·[0m[32mâ†™[0m			print[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (56, 13): [37mÂ·[0m[32mâ†™[0m			print[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (56, 13): [37mÂ·[0m[32mâ†™[0m			print[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (56, 13): [37mÂ·[0m[32mâ†™[0m			print[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (56, 13): [37mÂ·[0m[32mâ†™[0m			print[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (56, 13): [37mÂ·[0m[32mâ†™[0m			print[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (56, 13): [37mÂ·[0m[32mâ†™[0m			print[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>assignRhs> (57, 22): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'\0'[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (57, 27): '\0'[37mÂ·[0m;[32mâ†™[0m			r [32mGood[0m
                           [34m^[0m
>asgnEqParser> (58, 13): ;[32mâ†™[0m			read[37mÂ·[0mc
                              [34m^[0m
  >assignLhs> (58, 13): ;[32mâ†™[0m			read[37mÂ·[0mc
                             [34m^[0m
  <assignLhs< (58, 13): ;[32mâ†™[0m			read[37mÂ·[0mc [31mFail[0m
                             [34m^[0m
<asgnEqParser< (58, 13): ;[32mâ†™[0m			read[37mÂ·[0mc [31mFail[0m
                              [34m^[0m
>assignLhs> (58, 18): read[37mÂ·[0mc[37mÂ·[0m;[32mâ†™[0m		
                           [34m^[0m
<assignLhs< (58, 20): ad[37mÂ·[0mc[37mÂ·[0m;[32mâ†™[0m			i [32mGood[0m
                           [34m^[0m
>asgnEqParser> (59, 13): ;[32mâ†™[0m			if[37mÂ·[0mc[37mÂ·[0m=
                              [34m^[0m
  >assignLhs> (59, 13): ;[32mâ†™[0m			if[37mÂ·[0mc[37mÂ·[0m=
                             [34m^[0m
  <assignLhs< (59, 13): ;[32mâ†™[0m			if[37mÂ·[0mc[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
<asgnEqParser< (59, 13): ;[32mâ†™[0m			if[37mÂ·[0mc[37mÂ·[0m= [31mFail[0m
                              [34m^[0m
>asgnEqParser> (60, 17): [32mâ†™[0m				chosen
                              [34m^[0m
  >assignLhs> (60, 17): [32mâ†™[0m				chosen
                             [34m^[0m
  <assignLhs< (60, 24): osen[37mÂ·[0m=[37mÂ·[0m'x'[32mâ†™[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (60, 26): en[37mÂ·[0m=[37mÂ·[0m'x'[32mâ†™[0m		
                             [34m^[0m
  <assignRhs< (61, 13): '[32mâ†™[0m			else[32mâ†™[0m	 [32mGood[0m
                             [34m^[0m
<asgnEqParser< (61, 13): '[32mâ†™[0m			else[32mâ†™[0m	 [32mGood[0m
                              [34m^[0m
>asgnEqParser> (62, 17): [32mâ†™[0m				if[37mÂ·[0mc[37mÂ·[0m=
                              [34m^[0m
  >assignLhs> (62, 17): [32mâ†™[0m				if[37mÂ·[0mc[37mÂ·[0m=
                             [34m^[0m
  <assignLhs< (62, 17): [32mâ†™[0m				if[37mÂ·[0mc[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
<asgnEqParser< (62, 17): [32mâ†™[0m				if[37mÂ·[0mc[37mÂ·[0m= [31mFail[0m
                              [34m^[0m
>asgnEqParser> (63, 21): 					chosen
                              [34m^[0m
  >assignLhs> (63, 21): 					chosen
                             [34m^[0m
  <assignLhs< (63, 28): osen[37mÂ·[0m=[37mÂ·[0m'o'[32mâ†™[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (63, 30): en[37mÂ·[0m=[37mÂ·[0m'o'[32mâ†™[0m		
                             [34m^[0m
  <assignRhs< (64, 17): [32mâ†™[0m				else[32mâ†™[0m	 [32mGood[0m
                             [34m^[0m
<asgnEqParser< (64, 17): [32mâ†™[0m				else[32mâ†™[0m	 [32mGood[0m
                              [34m^[0m
>asgnEqParser> (65, 21): 					if[37mÂ·[0mc[37mÂ·[0m=
                              [34m^[0m
  >assignLhs> (65, 21): 					if[37mÂ·[0mc[37mÂ·[0m=
                             [34m^[0m
  <assignLhs< (65, 21): 					if[37mÂ·[0mc[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
<asgnEqParser< (65, 21): 					if[37mÂ·[0mc[37mÂ·[0m= [31mFail[0m
                              [34m^[0m
>asgnEqParser> (66, 25): 					printl
                              [34m^[0m
  >assignLhs> (66, 25): 					printl
                             [34m^[0m
  <assignLhs< (66, 25): 					printl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (66, 25): 					printl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (66, 25): 					printl
                              [34m^[0m
  >assignLhs> (66, 25): 					printl
                             [34m^[0m
  <assignLhs< (66, 25): 					printl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (66, 25): 					printl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (67, 25): 					exit[37mÂ·[0m0
                              [34m^[0m
  >assignLhs> (67, 25): 					exit[37mÂ·[0m0
                             [34m^[0m
  <assignLhs< (67, 25): 					exit[37mÂ·[0m0 [31mFail[0m
                             [34m^[0m
<asgnEqParser< (67, 25): 					exit[37mÂ·[0m0 [31mFail[0m
                              [34m^[0m
>asgnEqParser> (69, 25): 					print[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (69, 25): 					print[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (69, 25): 					print[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (69, 25): 					print[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (69, 25): 					print[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (69, 25): 					print[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (69, 25): 					print[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (69, 25): 					print[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (70, 25): 					printl
                              [34m^[0m
  >assignLhs> (70, 25): 					printl
                             [34m^[0m
  <assignLhs< (70, 25): 					printl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (70, 25): 					printl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (71, 25): 					printl
                              [34m^[0m
  >assignLhs> (71, 25): 					printl
                             [34m^[0m
  <assignLhs< (71, 25): 					printl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (71, 25): 					printl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (76, 9): [37mÂ·[0m;[32mâ†™[0m		print[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (76, 9): [37mÂ·[0m;[32mâ†™[0m		print[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (76, 9): [37mÂ·[0m;[32mâ†™[0m		print[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (76, 9): [37mÂ·[0m;[32mâ†™[0m		print[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (77, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (77, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (77, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (77, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (78, 9): [37mÂ·[0m;[32mâ†™[0m		return
                             [34m^[0m
  >assignLhs> (78, 9): [37mÂ·[0m;[32mâ†™[0m		return
                            [34m^[0m
  <assignLhs< (78, 9): [37mÂ·[0m;[32mâ†™[0m		return [31mFail[0m
                            [34m^[0m
<asgnEqParser< (78, 9): [37mÂ·[0m;[32mâ†™[0m		return [31mFail[0m
                             [34m^[0m
(line 82, column 20):
  unexpected "("
  expected "="
  > # Print the board out to the screen.
  > bool printBoard(pair(pair, pair) board) is
                   ^
  >  pair(pair, pair) front = fst board ;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validAdvancedTests.scala:34)[0m
[32mValidArrayTests:[0m
[32mvalid - array tests: arrayBasic.wacc[0m
>assignRhs> (8, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[0][32mâ†™[0men
                          [34m^[0m
<assignRhs< (9, 1): [37mÂ·[0m[0][32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - array tests: arrayEmpty.wacc[0m
>assignRhs> (8, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[][32mâ†™[0mend
                          [34m^[0m
<assignRhs< (9, 1): =[37mÂ·[0m[][32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
Type mismatch: ArrayLiter expected all elements to be of the same type, got List()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validArrayTests.scala:26)[0m
[32mvalid - array tests: arrayIndexMayBeArrayIndex.wacc[0m
>assignRhs> (12, 19): s1[37mÂ·[0m=[37mÂ·[0m[2,[37mÂ·[0m0,
                           [34m^[0m
<assignRhs< (12, 29): ,[37mÂ·[0m1][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 19): s1[37mÂ·[0m=[37mÂ·[0m[2,[37mÂ·[0m0,
                           [34m^[0m
<assignRhs< (12, 29): ,[37mÂ·[0m1][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 19): s2[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                           [34m^[0m
<assignRhs< (13, 29): ,[37mÂ·[0m0][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (17, 16): xs[37mÂ·[0m=[37mÂ·[0m[5,[37mÂ·[0m6,
                           [34m^[0m
<assignRhs< (17, 26): ,[37mÂ·[0m7][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (18, 15): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mxs[idx
                             [34m^[0m
  >assignLhs> (20, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mxs[idx
                            [34m^[0m
  <assignLhs< (20, 29): i]]][37mÂ·[0m=[37mÂ·[0mxs[i [32mGood[0m
                             [34m^[0m
  >assignRhs> (20, 31): ]][37mÂ·[0m=[37mÂ·[0mxs[idx
                             [34m^[0m
  <assignRhs< (20, 55): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (20, 55): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (20, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mxs[idx
                             [34m^[0m
  >assignLhs> (20, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mxs[idx
                            [34m^[0m
  <assignLhs< (20, 29): i]]][37mÂ·[0m=[37mÂ·[0mxs[i [32mGood[0m
                             [34m^[0m
  >assignRhs> (20, 31): ]][37mÂ·[0m=[37mÂ·[0mxs[idx
                             [34m^[0m
  <assignRhs< (20, 55): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (20, 55): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (21, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (21, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (21, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (22, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (22, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (22, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[32mâ†™[0m
                             [34m^[0m
  <assignRhs< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[32mâ†™[0me [32mGood[0m
                            [34m^[0m
<asgnEqParser< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[32mâ†™[0me [32mGood[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - array tests: arrayLength.wacc[0m
>assignRhs> (10, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[43,[37mÂ·[0m2
                           [34m^[0m
<assignRhs< (10, 28): ,[37mÂ·[0m1][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[43,[37mÂ·[0m2
                           [34m^[0m
<assignRhs< (10, 28): ,[37mÂ·[0m1][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - array tests: arrayLookup.wacc[0m
>assignRhs> (10, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[43,[37mÂ·[0m2
                           [34m^[0m
<assignRhs< (10, 28): ,[37mÂ·[0m1][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[43,[37mÂ·[0m2
                           [34m^[0m
<assignRhs< (10, 28): ,[37mÂ·[0m1][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - array tests: arrayNested.wacc[0m
>assignRhs> (11, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,2,3
                           [34m^[0m
<assignRhs< (11, 20): ,2,3];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,2,3
                           [34m^[0m
<assignRhs< (11, 20): ,2,3];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 13): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m[3,4];
                           [34m^[0m
<assignRhs< (12, 18): [3,4];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
(line 13, column 8):
  unexpected "["
  expected identifier
  >  int[] b = [3,4];
  >  int[][] c = [a,b] ;
          ^
  >  println c[0][2] ;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validArrayTests.scala:58)[0m
[32mvalid - array tests: arrayOnHeap.wacc[0m
>assignRhs> (12, 21): rr[37mÂ·[0m=[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 24): =[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 21): rr[37mÂ·[0m=[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 24): =[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
(line 13, column 8):
  unexpected "["
  expected identifier
  >  int[] dummy_arr = [] ;
  >  int[][] arrs = [dummy_arr, dummy_arr] ;
          ^
  >  int i = 0;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validArrayTests.scala:66)[0m
[32mvalid - array tests: arrayPrint.wacc[0m
>assignRhs> (10, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[0,[37mÂ·[0m1,
                           [34m^[0m
<assignRhs< (10, 44): ,[37mÂ·[0m9][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[0,[37mÂ·[0m1,
                           [34m^[0m
<assignRhs< (10, 44): ,[37mÂ·[0m9][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (14, 7): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (14, 9): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                            [34m^[0m
<asgnEqParser< (14, 9): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mi[37mÂ·[0m<
                             [34m^[0m
  >assignLhs> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mi[37mÂ·[0m<
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mi[37mÂ·[0m< [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mi[37mÂ·[0m< [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (20, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (20, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (24, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (24, 9): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (25, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (25, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Print expected int, char or string, got Some(ArrayTypeNode(integer))
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validArrayTests.scala:74)[0m
[32mvalid - array tests: arraySimple.wacc[0m
>assignRhs> (10, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[0][37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (10, 17): [37mÂ·[0m[0][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ma[ [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[0][37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (10, 17): [37mÂ·[0m[0][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ma[ [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ma[0][37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ma[0][37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (11, 8): a[0][37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
  >assignRhs> (11, 10): 0][37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                             [34m^[0m
  <assignRhs< (11, 13): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (11, 13): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - array tests: array.wacc[0m
>assignRhs> (10, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[0,[37mÂ·[0m0,
                           [34m^[0m
<assignRhs< (10, 44): ,[37mÂ·[0m0][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[0,[37mÂ·[0m0,
                           [34m^[0m
<assignRhs< (10, 44): ,[37mÂ·[0m0][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0ma[i][37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0ma[i][37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (14, 10): a[i][37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (14, 12): i][37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                             [34m^[0m
  <assignRhs< (14, 14): [37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (14, 14): [37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0ma[i][37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0ma[i][37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (14, 10): a[i][37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (14, 12): i][37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                             [34m^[0m
  <assignRhs< (14, 14): [37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (14, 14): [37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 9): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (16, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (19, 7): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (19, 9): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                            [34m^[0m
<asgnEqParser< (19, 9): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                             [34m^[0m
>asgnEqParser> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mi[37mÂ·[0m<
                             [34m^[0m
  >assignLhs> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mi[37mÂ·[0m<
                            [34m^[0m
  <assignLhs< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mi[37mÂ·[0m< [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mi[37mÂ·[0m< [31mFail[0m
                             [34m^[0m
>asgnEqParser> (25, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (25, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (25, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (25, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (29, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (29, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (29, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (29, 9): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (30, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (30, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Print expected int, char or string, got Some(ArrayTypeNode(integer))
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validArrayTests.scala:90)[0m
[32mvalid - array tests: charArrayInStringArray.wacc[0m
>assignRhs> (9, 22): rr[37mÂ·[0m=[37mÂ·[0m['a',[37mÂ·[0m
                          [34m^[0m
<assignRhs< (9, 37): [37mÂ·[0m'c'];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>assignRhs> (9, 22): rr[37mÂ·[0m=[37mÂ·[0m['a',[37mÂ·[0m
                          [34m^[0m
<assignRhs< (9, 37): [37mÂ·[0m'c'];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>assignRhs> (10, 20): rr[37mÂ·[0m=[37mÂ·[0m[testA
                           [34m^[0m
<assignRhs< (11, 1): ar"][32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: ArrayLiter expected all elements to be of the same type, got List(Some(ArrayTypeNode(char)), Some(string), Some(string), Some(string))
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validArrayTests.scala:98)[0m
[32mvalid - array tests: emptyArrayAloneIsFine.wacc[0m
>assignRhs> (8, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[][32mâ†™[0mend
                          [34m^[0m
<assignRhs< (9, 1): =[37mÂ·[0m[][32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
Type mismatch: ArrayLiter expected all elements to be of the same type, got List()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validArrayTests.scala:106)[0m
[32mvalid - array tests: emptyArrayNextLine.wacc[0m
>assignRhs> (8, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                          [34m^[0m
<assignRhs< (8, 16): =[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                          [34m^[0m
>assignRhs> (8, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                          [34m^[0m
<assignRhs< (8, 16): =[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                          [34m^[0m
>assignRhs> (9, 12): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mtrue[32mâ†™[0me
                          [34m^[0m
<assignRhs< (10, 1): true[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type mismatch: ArrayLiter expected all elements to be of the same type, got List()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validArrayTests.scala:114)[0m
[32mvalid - array tests: emptyArrayPrint.wacc[0m
>assignRhs> (10, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 16): =[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 16): =[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: ArrayLiter expected all elements to be of the same type, got List()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validArrayTests.scala:122)[0m
[32mvalid - array tests: emptyArrayReplace.wacc[0m
>assignRhs> (10, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 16): =[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 16): =[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[0
                             [34m^[0m
  >assignLhs> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[0
                            [34m^[0m
  <assignLhs< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[0][37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (11, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[0][37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (11, 11): [37mÂ·[0m[0][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (11, 11): [37mÂ·[0m[0][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: ArrayLiter expected all elements to be of the same type, got List()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validArrayTests.scala:130)[0m
[32mvalid - array tests: emptyArrayScope.wacc[0m
>assignRhs> (8, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                          [34m^[0m
<assignRhs< (8, 16): =[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                          [34m^[0m
>assignRhs> (8, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                          [34m^[0m
<assignRhs< (8, 16): =[37mÂ·[0m[][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                          [34m^[0m
>asgnEqParser> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  >assignLhs> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                           [34m^[0m
  <assignLhs< (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                           [34m^[0m
<asgnEqParser< (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
>assignRhs> (10, 14): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mtrue[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 3): ue[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mend[32mâ†™[0men [32mGood[0m
                          [34m^[0m
Type mismatch: ArrayLiter expected all elements to be of the same type, got List()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validArrayTests.scala:138)[0m
[32mvalid - array tests: free.wacc[0m
>assignRhs> (8, 15): rr[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                          [34m^[0m
<assignRhs< (8, 25): ,[37mÂ·[0m3][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfr [32mGood[0m
                          [34m^[0m
>assignRhs> (8, 15): rr[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                          [34m^[0m
<assignRhs< (8, 25): ,[37mÂ·[0m3][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfr [32mGood[0m
                          [34m^[0m
>asgnEqParser> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0ma
                            [34m^[0m
  >assignLhs> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0ma
                           [34m^[0m
  <assignLhs< (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0ma [31mFail[0m
                           [34m^[0m
<asgnEqParser< (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0ma [31mFail[0m
                            [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - array tests: lenArrayIndex.wacc[0m
>assignRhs> (10, 15): rr[37mÂ·[0m=[37mÂ·[0m[];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 17): [37mÂ·[0m=[37mÂ·[0m[];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 15): rr[37mÂ·[0m=[37mÂ·[0m[];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 17): [37mÂ·[0m=[37mÂ·[0m[];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
(line 11, column 8):
  unexpected "["
  expected identifier
  >  int[] arr = [];
  >  int[][] arrs = [arr];
          ^
  >  print len arrs[0]
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validArrayTests.scala:154)[0m
[32mvalid - array tests: modifyString.wacc[0m
>assignRhs> (12, 16): tr[37mÂ·[0m=[37mÂ·[0m['h','
                           [34m^[0m
<assignRhs< (12, 66): '!'][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 16): tr[37mÂ·[0m=[37mÂ·[0m['h','
                           [34m^[0m
<assignRhs< (12, 66): '!'][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mstr[0]
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mstr[0]
                            [34m^[0m
  <assignLhs< (14, 10): r[0][37mÂ·[0m=[37mÂ·[0m'H'[37mÂ·[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (14, 12): 0][37mÂ·[0m=[37mÂ·[0m'H'[37mÂ·[0m;[32mâ†™[0m
                             [34m^[0m
  <assignRhs< (14, 16): [37mÂ·[0m'H'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (14, 16): [37mÂ·[0m'H'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mstr[37mÂ·[0m=[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mstr[37mÂ·[0m=[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 7): [37mÂ·[0mstr[37mÂ·[0m=[37mÂ·[0m['H' [32mGood[0m
                            [34m^[0m
  >assignRhs> (16, 9): tr[37mÂ·[0m=[37mÂ·[0m['H','
                            [34m^[0m
  <assignRhs< (16, 23): '!'][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (16, 23): '!'][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(ArrayTypeNode(char))
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validArrayTests.scala:162)[0m
[32mvalid - array tests: printRef.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (11, 13): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,2,3
                           [34m^[0m
<assignRhs< (11, 21): 2,3][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(ArrayTypeNode(integer))
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validArrayTests.scala:170)[0m
[32mvalid - array tests: stringFromArray.wacc[0m
>assignRhs> (8, 14): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m['a',[37mÂ·[0m
                          [34m^[0m
<assignRhs< (8, 25): 'b'][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                          [34m^[0m
>assignRhs> (8, 14): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m['a',[37mÂ·[0m
                          [34m^[0m
<assignRhs< (8, 25): 'b'][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                          [34m^[0m
>asgnEqParser> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m0
                            [34m^[0m
  >assignLhs> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m0
                           [34m^[0m
  <assignLhs< (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m0 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m0 [31mFail[0m
                            [34m^[0m
Type mismatch: expected string, got Some(ArrayTypeNode(char))
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validArrayTests.scala:178)[0m
[32mValidBasicTests:[0m
[32mvalid - exit tests: exit-1.wacc[0m
>asgnEqParser> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m-
                             [34m^[0m
  >assignLhs> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m-
                            [34m^[0m
  <assignLhs< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m- [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m- [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - exit tests: exitBasic2.wacc[0m
>asgnEqParser> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m4
                             [34m^[0m
  >assignLhs> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m4
                            [34m^[0m
  <assignLhs< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m4 [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m4 [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - exit tests: exitBasic.wacc[0m
>asgnEqParser> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m7
                             [34m^[0m
  >assignLhs> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m7
                            [34m^[0m
  <assignLhs< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m7 [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m7 [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - exit tests: exitWrap.wacc[0m
>asgnEqParser> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m2
                             [34m^[0m
  >assignLhs> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m2
                            [34m^[0m
  <assignLhs< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m2 [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m2 [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - skip tests: commentEoF.wacc[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validBasicTests.scala:50)[0m
[32mvalid - skip tests: commentInLine.wacc[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validBasicTests.scala:58)[0m
[32mvalid - skip tests: comment.wacc[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validBasicTests.scala:66)[0m
[32mvalid - skip tests: skip.wacc[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validBasicTests.scala:74)[0m
[32mValidExpressionsTests:[0m
[32mvalid - expressions tests: andExpr.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:18)[0m
[32mvalid - expressions tests: andOverOrExpr.wacc[0m
>assignRhs> (11, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (13, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:26)[0m
[32mvalid - expressions tests: boolCalc.wacc[0m
>assignRhs> (10, 13): b1[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (10, 18): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 13): b1[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (10, 18): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 13): b2[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 19): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 13): b3[37mÂ·[0m=[37mÂ·[0mb1[37mÂ·[0m&&[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 22): &[37mÂ·[0mb2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:34)[0m
[32mvalid - expressions tests: boolExpr1.wacc[0m
>assignRhs> (10, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m![37mÂ·[0m([37mÂ·[0m([37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 53): se)[37mÂ·[0m);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m![37mÂ·[0m([37mÂ·[0m([37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 53): se)[37mÂ·[0m);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: charComparisonExpr.wacc[0m
>assignRhs> (15, 13): c1[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (15, 17): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 13): c1[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (15, 17): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (16, 13): c2[37mÂ·[0m=[37mÂ·[0m'z'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (16, 17): [37mÂ·[0m'z'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:50)[0m
[32mvalid - expressions tests: divExpr.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: equalsExpr.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m==[37mÂ·[0my
                           [34m^[0m
<assignRhs< (15, 19): ==[37mÂ·[0my[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:66)[0m
[32mvalid - expressions tests: equalsOverAnd.wacc[0m
>assignRhs> (11, 12): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 12): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 12): [37mÂ·[0mq[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 12): [37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:74)[0m
[32mvalid - expressions tests: equalsOverBool.wacc[0m
>assignRhs> (11, 12): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (11, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 12): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (11, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 12): [37mÂ·[0mq[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 12): [37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 12): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (14, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:82)[0m
[32mvalid - expressions tests: equalsOverOr.wacc[0m
>assignRhs> (11, 12): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 12): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 12): [37mÂ·[0mq[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 12): [37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (13, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:90)[0m
[32mvalid - expressions tests: greaterEqExpr.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m6[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m6[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:98)[0m
[32mvalid - expressions tests: greaterExpr.wacc[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m6[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m6[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:106)[0m
[32mvalid - expressions tests: intCalc.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m30[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m30[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0my[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 17): [37mÂ·[0m+[37mÂ·[0my[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: intExpr1.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m([37mÂ·[0m10[37mÂ·[0m*
                           [34m^[0m
<assignRhs< (10, 30): [37mÂ·[0m15[37mÂ·[0m);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m([37mÂ·[0m10[37mÂ·[0m*
                           [34m^[0m
<assignRhs< (10, 30): [37mÂ·[0m15[37mÂ·[0m);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: lessCharExpr.wacc[0m
>assignRhs> (11, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (11, 16): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (11, 16): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 12): [37mÂ·[0me[37mÂ·[0m=[37mÂ·[0m'e'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (12, 16): [37mÂ·[0m'e'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'c'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (13, 16): [37mÂ·[0m'c'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:130)[0m
[32mvalid - expressions tests: lessEqExpr.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m6[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m6[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:138)[0m
[32mvalid - expressions tests: lessExpr.wacc[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m6[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m6[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:146)[0m
[32mvalid - expressions tests: longExpr2.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m(2[37mÂ·[0m+[37mÂ·[0m3
                           [34m^[0m
<assignRhs< (10, 95): +[37mÂ·[0m6));[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m(2[37mÂ·[0m+[37mÂ·[0m3
                           [34m^[0m
<assignRhs< (10, 95): +[37mÂ·[0m6));[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: longExpr3.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m((((((
                           [34m^[0m
<assignRhs< (10, 116): +[37mÂ·[0m17);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                            [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m((((((
                           [34m^[0m
<assignRhs< (10, 116): +[37mÂ·[0m17);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                            [34m^[0m
>asgnEqParser> (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: longExpr.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m+[37mÂ·[0m(2
                           [34m^[0m
<assignRhs< (10, 114): )))));[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                            [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m+[37mÂ·[0m(2
                           [34m^[0m
<assignRhs< (10, 114): )))));[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                            [34m^[0m
>asgnEqParser> (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: longSplitExpr2.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m+[37mÂ·[0m2[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 85): +[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m+[37mÂ·[0m2[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 85): +[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m-1[37mÂ·[0m-[37mÂ·[0m2
                           [34m^[0m
<assignRhs< (14, 86): -[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m*[37mÂ·[0m2[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 50): *[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (16, 13): iv[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (16, 16): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: longSplitExpr.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m+[37mÂ·[0m2[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 17): [37mÂ·[0m+[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m+[37mÂ·[0m2[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 17): [37mÂ·[0m+[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m+[37mÂ·[0m4[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 17): [37mÂ·[0m+[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m+[37mÂ·[0m6[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 17): [37mÂ·[0m+[37mÂ·[0m6[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0md[37mÂ·[0m=[37mÂ·[0m7[37mÂ·[0m+[37mÂ·[0m8[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 17): [37mÂ·[0m+[37mÂ·[0m8[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0me[37mÂ·[0m=[37mÂ·[0m9[37mÂ·[0m+[37mÂ·[0m10
                           [34m^[0m
<assignRhs< (14, 18): +[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0m11[37mÂ·[0m+[37mÂ·[0m1
                           [34m^[0m
<assignRhs< (15, 19): +[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (16, 11): [37mÂ·[0mg[37mÂ·[0m=[37mÂ·[0m13[37mÂ·[0m+[37mÂ·[0m1
                           [34m^[0m
<assignRhs< (16, 19): +[37mÂ·[0m14[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (17, 11): [37mÂ·[0mh[37mÂ·[0m=[37mÂ·[0m15[37mÂ·[0m+[37mÂ·[0m1
                           [34m^[0m
<assignRhs< (17, 19): +[37mÂ·[0m16[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (18, 14): =[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                           [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0ma
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0ma
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0ma [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0ma [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: minusExpr.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m15[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m15[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m15[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m15[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m20[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m20[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: minusMinusExpr.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: minusNoWhitespaceExpr.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: minusPlusExpr.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: modExpr.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: multExpr.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: multNoWhitespaceExpr.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: negBothDiv.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m-4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m-4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m-2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m-2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: negBothMod.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m-5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m-5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m-3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m-3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: negDividendDiv.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m-4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m-4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: negDividendMod.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m-5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m-5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: negDivisorDiv.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m-2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m-2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: negDivisorMod.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m-3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m-3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: negExpr.wacc[0m
>assignRhs> (10, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 16): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 16): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: notequalsExpr.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 13): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m!=[37mÂ·[0my
                           [34m^[0m
<assignRhs< (15, 19): !=[37mÂ·[0my[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:306)[0m
[32mvalid - expressions tests: notExpr.wacc[0m
>assignRhs> (11, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (11, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (11, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:314)[0m
[32mvalid - expressions tests: ordAndchrExpr.wacc[0m
>assignRhs> (11, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (11, 16): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (11, 16): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m99[37mÂ·[0m;[32mâ†™[0m[32mâ†™[0m
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m99[37mÂ·[0m;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: orExpr.wacc[0m
>assignRhs> (12, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 12): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:330)[0m
[32mvalid - expressions tests: plusExpr.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m15[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m15[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m15[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 14): =[37mÂ·[0m15[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m20[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m20[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: plusMinusExpr.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: plusNoWhitespaceExpr.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: plusPlusExpr.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: sequentialCount.wacc[0m
>assignRhs> (20, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (20, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (20, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (20, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (23, 7): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (23, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (23, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (24, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (24, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (24, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (24, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (25, 7): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (25, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (25, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (27, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (27, 7): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (27, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (27, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (28, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (28, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (28, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (28, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (29, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (29, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (29, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (29, 7): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (29, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (29, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (31, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (31, 7): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (31, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (31, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (33, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (33, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (33, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (33, 7): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (33, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (33, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (35, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (35, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (35, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (35, 7): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (35, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (35, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (36, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (36, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (36, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (36, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (37, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (37, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (37, 7): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (37, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (37, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (38, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (38, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (38, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (38, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (39, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (39, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (39, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (39, 7): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (39, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (39, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (40, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (40, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (40, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (40, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - expressions tests: stringEqualsExpr.wacc[0m
>assignRhs> (12, 15): s1[37mÂ·[0m=[37mÂ·[0m"Hello
                           [34m^[0m
<assignRhs< (12, 23): llo"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mst [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 15): s1[37mÂ·[0m=[37mÂ·[0m"Hello
                           [34m^[0m
<assignRhs< (12, 23): llo"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mst [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 15): s2[37mÂ·[0m=[37mÂ·[0m"foo"[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 21): foo"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mst [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 15): s3[37mÂ·[0m=[37mÂ·[0m"bar"[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 21): bar"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0ms1[37mÂ·[0m==[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 21): =[37mÂ·[0ms1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validExpressionsTests.scala:378)[0m
[32mValidFunctionTests:[0m
[32mvalid - nested_functions tests: fibonacciFullRec.wacc[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m<
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m<
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m< [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m< [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m<
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m<
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m< [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m< [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (21, 14): f1[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (21, 36): -[37mÂ·[0m1)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (22, 14): f2[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (22, 36): -[37mÂ·[0m2)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (26, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (26, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (26, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (26, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (26, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (26, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (28, 11): [37mÂ·[0mn[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mr
                           [34m^[0m
<assignRhs< (28, 12): n[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mre [32mGood[0m
                           [34m^[0m
>asgnEqParser> (29, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mn
                             [34m^[0m
  >assignLhs> (29, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mn
                            [34m^[0m
  <assignLhs< (29, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (29, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mn [31mFail[0m
                             [34m^[0m
>assignLhs> (29, 8): read[37mÂ·[0mn[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                          [34m^[0m
<assignLhs< (29, 10): ad[37mÂ·[0mn[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (33, 16): lt[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (33, 34): i(n)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:18)[0m
[32mvalid - nested_functions tests: fibonacciRecursive.wacc[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m<
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m<
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m< [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m< [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m<
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m<
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m< [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m< [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (18, 14): f1[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (18, 45): int)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtoP
                             [34m^[0m
  >assignLhs> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtoP
                            [34m^[0m
  <assignLhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtoP [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtoP [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (21, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (21, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (21, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (21, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (26, 14): f2[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (26, 43): lse)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (27, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (27, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (27, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (27, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (30, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (30, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (30, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (30, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (30, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (30, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (32, 16): lt[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (32, 41): rue)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (33, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (33, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (33, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (33, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:26)[0m
[32mvalid - nested_functions tests: fixedPointRealArithmetic.wacc[0m
>asgnEqParser> (22, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (22, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (22, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (27, 22): lt[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (27, 24): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (27, 22): lt[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (27, 24): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (28, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (28, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (28, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (28, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (29, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mresult
                              [34m^[0m
  >assignLhs> (29, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mresult
                             [34m^[0m
  <assignLhs< (29, 20): sult[37mÂ·[0m=[37mÂ·[0mresu [32mGood[0m
                             [34m^[0m
  >assignRhs> (29, 22): lt[37mÂ·[0m=[37mÂ·[0mresult
                             [34m^[0m
  <assignRhs< (29, 36): base[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (29, 36): base[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (29, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mresult
                              [34m^[0m
  >assignLhs> (29, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mresult
                             [34m^[0m
  <assignLhs< (29, 20): sult[37mÂ·[0m=[37mÂ·[0mresu [32mGood[0m
                             [34m^[0m
  >assignRhs> (29, 22): lt[37mÂ·[0m=[37mÂ·[0mresult
                             [34m^[0m
  <assignRhs< (29, 36): base[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (29, 36): base[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (30, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mamount
                              [34m^[0m
  >assignLhs> (30, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mamount
                             [34m^[0m
  <assignLhs< (30, 20): ount[37mÂ·[0m=[37mÂ·[0mamou [32mGood[0m
                             [34m^[0m
  >assignRhs> (30, 22): nt[37mÂ·[0m=[37mÂ·[0mamount
                             [34m^[0m
  <assignRhs< (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (32, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (32, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (32, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (32, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (36, 18): qq[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mq
                           [34m^[0m
<assignRhs< (36, 27): [37mÂ·[0mq()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (36, 18): qq[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mq
                           [34m^[0m
<assignRhs< (36, 27): [37mÂ·[0mq()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (38, 17): [37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mp
                           [34m^[0m
<assignRhs< (38, 35): [37mÂ·[0mqq)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (39, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (39, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (39, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (39, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (46, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (46, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (46, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (46, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (47, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (47, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (47, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (47, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (51, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (51, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (51, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (51, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (52, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (52, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (52, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (52, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (56, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (56, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (56, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (56, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (57, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m>
                             [34m^[0m
  >assignLhs> (57, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m>
                            [34m^[0m
  <assignLhs< (57, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m> [31mFail[0m
                            [34m^[0m
<asgnEqParser< (57, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m> [31mFail[0m
                             [34m^[0m
>asgnEqParser> (59, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                              [34m^[0m
  >assignLhs> (59, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  <assignLhs< (59, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
<asgnEqParser< (59, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                              [34m^[0m
>asgnEqParser> (61, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                              [34m^[0m
  >assignLhs> (61, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  <assignLhs< (61, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
<asgnEqParser< (61, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                              [34m^[0m
>asgnEqParser> (66, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (66, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (66, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (66, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (70, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (70, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (70, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (70, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (74, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (74, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (74, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (74, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (75, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (75, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (75, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (75, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (79, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (79, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (79, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (79, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (80, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (80, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (80, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (80, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (85, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (85, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (85, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (85, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (86, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (86, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (86, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (86, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (90, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (90, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (90, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (90, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (95, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (95, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (95, 18): ff[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (95, 27): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (96, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (96, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (96, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (96, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (100, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                              [34m^[0m
  >assignLhs> (100, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  <assignLhs< (100, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
<asgnEqParser< (100, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                              [34m^[0m
>assignRhs> (104, 14): n1[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                            [34m^[0m
<assignRhs< (104, 17): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (104, 14): n1[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                            [34m^[0m
<assignRhs< (104, 17): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (105, 14): n2[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m
                            [34m^[0m
<assignRhs< (105, 16): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>asgnEqParser> (107, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (107, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (107, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (107, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (108, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (108, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (108, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (108, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (109, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (109, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (109, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (109, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (110, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (110, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (110, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (110, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (111, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (111, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (111, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (111, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (112, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (112, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (112, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (112, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (113, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (113, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (113, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (113, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>assignRhs> (115, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mi
                            [34m^[0m
<assignRhs< (115, 38): (n1)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>asgnEqParser> (116, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                              [34m^[0m
  >assignLhs> (116, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  <assignLhs< (116, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                             [34m^[0m
  >assignRhs> (116, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0md
                             [34m^[0m
  <assignRhs< (116, 33): [37mÂ·[0mn2)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
<asgnEqParser< (116, 33): [37mÂ·[0mn2)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                               [34m^[0m
>asgnEqParser> (117, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                              [34m^[0m
  >assignLhs> (117, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  <assignLhs< (117, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                             [34m^[0m
  >assignRhs> (117, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mm
                             [34m^[0m
  <assignRhs< (117, 35): [37mÂ·[0mn2)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
<asgnEqParser< (117, 35): [37mÂ·[0mn2)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                               [34m^[0m
>assignRhs> (118, 18): lt[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                            [34m^[0m
<assignRhs< (118, 51): r(x)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>asgnEqParser> (119, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (119, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (119, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (119, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - nested_functions tests: functionConditionalReturn.wacc[0m
>asgnEqParser> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (17, 12): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (17, 20): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (17, 12): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (17, 20): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (18, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:42)[0m
[32mvalid - nested_functions tests: mutualRecursion.wacc[0m
>asgnEqParser> (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>asgnEqParser> (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (31, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (31, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (31, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (32, 15): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                           [34m^[0m
<assignRhs< (33, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>asgnEqParser> (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (31, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (31, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (31, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (32, 15): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                           [34m^[0m
<assignRhs< (33, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (34, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (34, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (34, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (34, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (39, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (39, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (39, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (39, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (40, 13): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                           [34m^[0m
<assignRhs< (40, 28): -[37mÂ·[0m1)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (41, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (41, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (41, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (41, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (44, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (44, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (44, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (44, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (45, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  >assignLhs> (45, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  <assignLhs< (45, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                            [34m^[0m
  >assignRhs> (45, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                            [34m^[0m
  <assignRhs< (46, 1): 1(8)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (46, 1): 1(8)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:50)[0m
[32mvalid - nested_functions tests: printInputTriangle.wacc[0m
>asgnEqParser> (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>assignRhs> (29, 15): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (29, 17): [37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (29, 15): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (29, 17): [37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (32, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (32, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (32, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (32, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m-[37mÂ·[0m1[32mâ†™[0m
                             [34m^[0m
  <assignRhs< (33, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (33, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (34, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (34, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (34, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (34, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (35, 15): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (36, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>assignRhs> (29, 15): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (29, 17): [37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (29, 15): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (29, 17): [37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (32, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (32, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (32, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (32, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m-[37mÂ·[0m1[32mâ†™[0m
                             [34m^[0m
  <assignRhs< (33, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (33, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (34, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (34, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (34, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (34, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (35, 15): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (36, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (40, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (40, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (40, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (40, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (40, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (40, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (40, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (40, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (41, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (41, 12): x[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (43, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (43, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (43, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (43, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
>assignLhs> (43, 8): read[37mÂ·[0mx;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mi
                          [34m^[0m
<assignLhs< (43, 9): ead[37mÂ·[0mx;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                          [34m^[0m
>assignRhs> (44, 11): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (45, 1): f(x)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:58)[0m
[32mvalid - nested_functions tests: printTriangle.wacc[0m
>asgnEqParser> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>assignRhs> (21, 15): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (21, 17): [37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (21, 15): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (21, 17): [37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (24, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (24, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (24, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (24, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m-[37mÂ·[0m1[32mâ†™[0m
                             [34m^[0m
  <assignRhs< (25, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (25, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (26, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (26, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (26, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (27, 15): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (28, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>assignRhs> (21, 15): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (21, 17): [37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (21, 15): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (21, 17): [37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (24, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (24, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (24, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (24, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m-[37mÂ·[0m1[32mâ†™[0m
                             [34m^[0m
  <assignRhs< (25, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (25, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (26, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (26, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (26, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (27, 15): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (28, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (29, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (29, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (29, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (29, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (32, 11): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (33, 1): f(8)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:66)[0m
[32mvalid - nested_functions tests: simpleRecursion.wacc[0m
>asgnEqParser> (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                            [34m^[0m
  >assignLhs> (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                           [34m^[0m
  <assignLhs< (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                           [34m^[0m
<asgnEqParser< (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
>assignRhs> (13, 15): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                           [34m^[0m
<assignRhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                            [34m^[0m
  >assignLhs> (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                           [34m^[0m
  <assignLhs< (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                           [34m^[0m
<asgnEqParser< (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
>assignRhs> (13, 15): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                           [34m^[0m
<assignRhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mfi[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (18, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (18, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (18, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  <assignLhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                            [34m^[0m
  >assignRhs> (19, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                            [34m^[0m
  <assignRhs< (20, 1): c(8)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (20, 1): c(8)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:74)[0m
[32mvalid - simple_functions tests: argScopeCanBeShadowed.wacc[0m
>assignRhs> (11, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (11, 19): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (11, 19): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 12): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 21): [37mÂ·[0mf(5);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 12): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 21): [37mÂ·[0mf(5);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:82)[0m
[32mvalid - simple_functions tests: asciiTable.wacc[0m
>assignRhs> (108, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                            [34m^[0m
<assignRhs< (108, 15): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (108, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                            [34m^[0m
<assignRhs< (108, 15): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>asgnEqParser> (109, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (109, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (109, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (109, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (110, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (110, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (110, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (110, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (110, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (110, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (110, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (110, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (111, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (111, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (111, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (111, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[32mâ†™[0m
                              [34m^[0m
  <assignRhs< (112, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
<asgnEqParser< (112, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                              [34m^[0m
>asgnEqParser> (113, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (113, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (113, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (113, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (114, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                              [34m^[0m
  >assignLhs> (114, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  <assignLhs< (114, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
<asgnEqParser< (114, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                              [34m^[0m
>asgnEqParser> (118, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (118, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (118, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (118, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (118, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (118, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (118, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (118, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (119, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m<
                              [34m^[0m
  >assignLhs> (119, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m<
                             [34m^[0m
  <assignLhs< (119, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m< [31mFail[0m
                             [34m^[0m
<asgnEqParser< (119, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mn[37mÂ·[0m< [31mFail[0m
                              [34m^[0m
>asgnEqParser> (120, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (120, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (120, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (120, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (124, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (124, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (124, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (124, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (125, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (125, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (125, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (125, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (126, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (126, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (126, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (126, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (127, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (127, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (127, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (127, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (128, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                              [34m^[0m
  >assignLhs> (128, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  <assignLhs< (128, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
<asgnEqParser< (128, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                              [34m^[0m
>asgnEqParser> (131, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (131, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (131, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (131, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (131, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (131, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (131, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (131, 3): d[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>assignRhs> (132, 12): [37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mp
                            [34m^[0m
<assignRhs< (132, 31): (13)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                            [34m^[0m
>assignRhs> (133, 13): um[37mÂ·[0m=[37mÂ·[0mord[37mÂ·[0m'[37mÂ·[0m
                            [34m^[0m
<assignRhs< (133, 21): [37mÂ·[0m'[37mÂ·[0m'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                            [34m^[0m
>asgnEqParser> (134, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (134, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (134, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (134, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (135, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mca
                              [34m^[0m
  >assignLhs> (135, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  <assignLhs< (135, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                             [34m^[0m
  >assignRhs> (135, 9): [37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mp
                             [34m^[0m
  <assignRhs< (135, 28): num)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
<asgnEqParser< (135, 28): num)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                               [34m^[0m
>asgnEqParser> (135, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mca
                              [34m^[0m
  >assignLhs> (135, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  <assignLhs< (135, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                             [34m^[0m
  >assignRhs> (135, 9): [37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mp
                             [34m^[0m
  <assignRhs< (135, 28): num)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
<asgnEqParser< (135, 28): num)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                               [34m^[0m
>asgnEqParser> (136, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mnum[37mÂ·[0m=[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (136, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mnum[37mÂ·[0m=[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (136, 9): [37mÂ·[0mnum[37mÂ·[0m=[37mÂ·[0mnum[37mÂ·[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (136, 11): um[37mÂ·[0m=[37mÂ·[0mnum[37mÂ·[0m+[37mÂ·[0m
                              [34m^[0m
  <assignRhs< (137, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
<asgnEqParser< (137, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                              [34m^[0m
>asgnEqParser> (138, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mca
                              [34m^[0m
  >assignLhs> (138, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  <assignLhs< (138, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                             [34m^[0m
  >assignRhs> (138, 7): [37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mp
                             [34m^[0m
  <assignRhs< (139, 1): (13)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (139, 1): (13)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                              [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:90)[0m
[32mvalid - simple_functions tests: functionDeclaration.wacc[0m
>asgnEqParser> (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  >assignLhs> (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                           [34m^[0m
  <assignLhs< (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                           [34m^[0m
<asgnEqParser< (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:98)[0m
[32mvalid - simple_functions tests: functionDoubleReturn.wacc[0m
>asgnEqParser> (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (14, 15): et[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (14, 23): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 15): et[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (14, 23): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: functionIfReturns.wacc[0m
>asgnEqParser> (10, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (10, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (10, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (10, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (10, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (10, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (12, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (12, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (13, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (13, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (13, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (13, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (13, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (13, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (13, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (14, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                              [34m^[0m
  >assignLhs> (14, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  <assignLhs< (14, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
<asgnEqParser< (14, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                              [34m^[0m
>asgnEqParser> (16, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (16, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (16, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (16, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (16, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (16, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (16, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (16, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (17, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                              [34m^[0m
  >assignLhs> (17, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  <assignLhs< (17, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
<asgnEqParser< (17, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                              [34m^[0m
>assignRhs> (21, 15): et[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (21, 23): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (21, 15): et[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (21, 23): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: functionManyArguments.wacc[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (27, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (27, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (27, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (27, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (28, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (28, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (28, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (28, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (29, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (29, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (29, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (29, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (31, 18): ls[37mÂ·[0m=[37mÂ·[0m[[37mÂ·[0mfals
                           [34m^[0m
<assignRhs< (31, 34): ue[37mÂ·[0m][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (31, 18): ls[37mÂ·[0m=[37mÂ·[0m[[37mÂ·[0mfals
                           [34m^[0m
<assignRhs< (31, 34): ue[37mÂ·[0m][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (32, 16): ts[37mÂ·[0m=[37mÂ·[0m[[37mÂ·[0m1,[37mÂ·[0m2
                           [34m^[0m
<assignRhs< (32, 25): [37mÂ·[0m2[37mÂ·[0m][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (33, 17): er[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0md
                           [34m^[0m
<assignRhs< (33, 71): nts)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (35, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (35, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (35, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (35, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:122)[0m
[32mvalid - simple_functions tests: functionMultiReturns.wacc[0m
>asgnEqParser> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (18, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                           [34m^[0m
<assignRhs< (18, 32): le()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mr
                           [34m^[0m
<assignRhs< (18, 32): le()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: functionReturnPair.wacc[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (12, 38): 0,15);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (12, 38): 0,15);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (16, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mg
                           [34m^[0m
<assignRhs< (16, 36): air();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (16, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mg
                           [34m^[0m
<assignRhs< (16, 36): air();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (17, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mp;
                           [34m^[0m
<assignRhs< (17, 16): fst[37mÂ·[0mp;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (18, 3): p;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): p;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): p;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): p;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: functionSimpleLoop.wacc[0m
>assignRhs> (11, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): i[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): i[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (13, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[32mâ†™[0m
                             [34m^[0m
  <assignRhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone;[32mâ†™[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mdone;[32mâ†™[0m [32mGood[0m
                             [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (17, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (17, 22): (10)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (17, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (17, 22): (10)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: functionSimple.wacc[0m
>asgnEqParser> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (13, 20): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (13, 20): [37mÂ·[0mf()[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: functionUpdateParameter.wacc[0m
>asgnEqParser> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5;
                             [34m^[0m
  >assignLhs> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5;
                            [34m^[0m
  <assignLhs< (18, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (18, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (18, 10): x[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (18, 10): x[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (24, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp
                           [34m^[0m
<assignRhs< (24, 12): y[37mÂ·[0m=[37mÂ·[0m1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (24, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp
                           [34m^[0m
<assignRhs< (24, 12): y[37mÂ·[0m=[37mÂ·[0m1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (25, 3): 1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (25, 3): 1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (25, 3): 1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (25, 3): 1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (26, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (26, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (26, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (27, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (27, 20): [37mÂ·[0mf(y);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (28, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (28, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (28, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (28, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (29, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (29, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (29, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (29, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: incFunction.wacc[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mi
                            [34m^[0m
  <assignRhs< (15, 19): c(x)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (15, 19): c(x)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                            [34m^[0m
  >assignRhs> (17, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mi
                            [34m^[0m
  <assignRhs< (17, 19): c(x)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (17, 19): c(x)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                            [34m^[0m
  >assignRhs> (18, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mi
                            [34m^[0m
  <assignRhs< (18, 19): c(x)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (18, 19): c(x)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  <assignLhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                            [34m^[0m
  >assignRhs> (19, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mi
                            [34m^[0m
  <assignRhs< (19, 19): c(x)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (19, 19): c(x)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: lotsOfLocals.wacc[0m
>assignRhs> (13, 18): x1[37mÂ·[0m=[37mÂ·[0m1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 19): 1[37mÂ·[0m=[37mÂ·[0m1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 18): x1[37mÂ·[0m=[37mÂ·[0m1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 19): 1[37mÂ·[0m=[37mÂ·[0m1;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 18): x2[37mÂ·[0m=[37mÂ·[0m2;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 19): 2[37mÂ·[0m=[37mÂ·[0m2;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 18): x3[37mÂ·[0m=[37mÂ·[0m3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 19): 3[37mÂ·[0m=[37mÂ·[0m3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (16, 18): x4[37mÂ·[0m=[37mÂ·[0m4;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (16, 19): 4[37mÂ·[0m=[37mÂ·[0m4;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (17, 19): x5[37mÂ·[0m=[37mÂ·[0m'5';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (17, 22): =[37mÂ·[0m'5';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 19): x6[37mÂ·[0m=[37mÂ·[0m'6';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (18, 22): =[37mÂ·[0m'6';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (19, 19): x7[37mÂ·[0m=[37mÂ·[0m'7';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (19, 22): =[37mÂ·[0m'7';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (20, 18): x8[37mÂ·[0m=[37mÂ·[0m8;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (20, 19): 8[37mÂ·[0m=[37mÂ·[0m8;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (21, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (21, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (21, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (22, 23): y1[37mÂ·[0m=[37mÂ·[0m'a';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (22, 26): =[37mÂ·[0m'a';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (22, 23): y1[37mÂ·[0m=[37mÂ·[0m'a';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (22, 26): =[37mÂ·[0m'a';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (23, 23): y2[37mÂ·[0m=[37mÂ·[0m'b';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (23, 26): =[37mÂ·[0m'b';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (24, 21): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (24, 23): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (25, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (25, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (25, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (25, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (27, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (27, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (27, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (27, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (30, 13): [37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (30, 37): 5,[37mÂ·[0m6);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (30, 13): [37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (30, 37): 5,[37mÂ·[0m6);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (31, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (31, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (31, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: manyArgumentsChar.wacc[0m
>assignRhs> (14, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mu[37mÂ·[0m+[37mÂ·[0mv[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 19): [37mÂ·[0m+[37mÂ·[0mv[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mu[37mÂ·[0m+[37mÂ·[0mv[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 19): [37mÂ·[0m+[37mÂ·[0mv[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 13): [37mÂ·[0mj[37mÂ·[0m=[37mÂ·[0mw[37mÂ·[0m+[37mÂ·[0mx[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 19): [37mÂ·[0m+[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mz[32mâ†™[0m[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mz[32mâ†™[0m[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mz[32mâ†™[0m[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mz[32mâ†™[0m[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 14): then[37mÂ·[0mreturn
                              [34m^[0m
  >assignLhs> (17, 14): then[37mÂ·[0mreturn
                             [34m^[0m
  <assignLhs< (17, 14): then[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
<asgnEqParser< (17, 14): then[37mÂ·[0mreturn [31mFail[0m
                              [34m^[0m
>asgnEqParser> (18, 14): else[37mÂ·[0mreturn
                              [34m^[0m
  >assignLhs> (18, 14): else[37mÂ·[0mreturn
                             [34m^[0m
  <assignLhs< (18, 14): else[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
<asgnEqParser< (18, 14): else[37mÂ·[0mreturn [31mFail[0m
                              [34m^[0m
>assignRhs> (22, 13): r1[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (22, 49): rue)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (22, 13): r1[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (22, 49): rue)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (25, 13): r2[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (25, 50): lse)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: manyArgumentsInt.wacc[0m
>assignRhs> (13, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mu[37mÂ·[0m+[37mÂ·[0mv[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 19): [37mÂ·[0m+[37mÂ·[0mv[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mu[37mÂ·[0m+[37mÂ·[0mv[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 19): [37mÂ·[0m+[37mÂ·[0mv[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 13): [37mÂ·[0mj[37mÂ·[0m=[37mÂ·[0mw[37mÂ·[0m*[37mÂ·[0mx[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 19): [37mÂ·[0m*[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 13): [37mÂ·[0mk[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m-[37mÂ·[0mz[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 19): [37mÂ·[0m-[37mÂ·[0mz[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (19, 11): [37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (19, 42): ,[37mÂ·[0m4)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (19, 11): [37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (19, 42): ,[37mÂ·[0m4)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: negFunction.wacc[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (15, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (15, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                            [34m^[0m
  >assignRhs> (17, 7): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mn
                            [34m^[0m
  <assignRhs< (17, 19): g(b)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (17, 19): g(b)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  <assignLhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                            [34m^[0m
  >assignRhs> (19, 7): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mn
                            [34m^[0m
  <assignRhs< (19, 19): g(b)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (19, 19): g(b)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  >assignLhs> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  <assignLhs< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                            [34m^[0m
  >assignRhs> (20, 7): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mn
                            [34m^[0m
  <assignRhs< (20, 19): g(b)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (20, 19): g(b)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mca
                             [34m^[0m
  >assignLhs> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  <assignLhs< (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                            [34m^[0m
  >assignRhs> (21, 7): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mn
                            [34m^[0m
  <assignRhs< (21, 19): g(b)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (21, 19): g(b)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:202)[0m
[32mvalid - simple_functions tests: punning.wacc[0m
>asgnEqParser> (10, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (10, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (10, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (12, 15): nc[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 16): c[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 15): nc[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 16): c[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 15): mp[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mi
                           [34m^[0m
<assignRhs< (13, 28): (inc);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Function inc not found or arg count doesnt match
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:210)[0m
[32mvalid - simple_functions tests: sameArgName2.wacc[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 21): f(99);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (15, 21): f(99);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: sameArgName.wacc[0m
>asgnEqParser> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (14, 21): f(99);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (14, 21): f(99);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: sameNameAsVar.wacc[0m
>asgnEqParser> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (14, 19): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (14, 19): l[37mÂ·[0mf();[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): );[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - simple_functions tests: usesArgumentWhilstMakingArgument.wacc[0m
>assignRhs> (13, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mg
                           [34m^[0m
<assignRhs< (13, 41): *[37mÂ·[0mv)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mg
                           [34m^[0m
<assignRhs< (13, 41): *[37mÂ·[0mv)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (24, 11): [37mÂ·[0mr[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                           [34m^[0m
<assignRhs< (25, 1): ,[37mÂ·[0m8)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Function g not found or arg count doesnt match
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validFunctionTests.scala:242)[0m
[32mValidIOTests:[0m
[32mvalid - IO tests: IOLoop.wacc[0m
>assignRhs> (29, 19): ue[37mÂ·[0m=[37mÂ·[0m'Y'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (29, 23): [37mÂ·[0m'Y'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (29, 19): ue[37mÂ·[0m=[37mÂ·[0m'Y'[37mÂ·[0m;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (29, 23): [37mÂ·[0m'Y'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (30, 14): ff[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (30, 16): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                           [34m^[0m
>asgnEqParser> (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (32, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (32, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (32, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (32, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (32, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (32, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (32, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (32, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (33, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mb
                             [34m^[0m
  >assignLhs> (33, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mb
                            [34m^[0m
  <assignLhs< (33, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mb [31mFail[0m
                            [34m^[0m
<asgnEqParser< (33, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mb [31mFail[0m
                             [34m^[0m
>assignLhs> (33, 10): read[37mÂ·[0mbuff[37mÂ·[0m;
                           [34m^[0m
<assignLhs< (33, 15): buff[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (34, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (34, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (34, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (34, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (35, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (35, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (35, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (35, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (36, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (36, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (36, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (36, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (37, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc
                             [34m^[0m
  >assignLhs> (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc
                            [34m^[0m
  <assignLhs< (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc [31mFail[0m
                            [34m^[0m
<asgnEqParser< (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc [31mFail[0m
                             [34m^[0m
>assignLhs> (38, 10): read[37mÂ·[0mcontin
                           [34m^[0m
<assignLhs< (39, 3): ue[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[32mâ†™[0me [32mGood[0m
                          [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - IO tests: IOSequence.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
>assignLhs> (14, 8): read[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                          [34m^[0m
<assignLhs< (14, 10): ad[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - print tests: hashInProgram.wacc[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[37mÂ·[0m#[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[37mÂ·[0m#[37mÂ·[0mco [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[37mÂ·[0m#[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[37mÂ·[0m#[37mÂ·[0mco [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): ne[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): ne[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): ne[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): ne[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - print tests: multipleStringsAssignment.wacc[0m
>assignRhs> (16, 15): s1[37mÂ·[0m=[37mÂ·[0m"Hi"[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (16, 20): "Hi"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mst [32mGood[0m
                           [34m^[0m
>assignRhs> (16, 15): s1[37mÂ·[0m=[37mÂ·[0m"Hi"[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (16, 20): "Hi"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mst [32mGood[0m
                           [34m^[0m
>assignRhs> (17, 15): s2[37mÂ·[0m=[37mÂ·[0m"Hello
                           [34m^[0m
<assignRhs< (17, 23): llo"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ms1[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ms1[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ms1[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ms1[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (28, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (28, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (28, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (28, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (29, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ms1[37mÂ·[0m=[37mÂ·[0ms
                             [34m^[0m
  >assignLhs> (29, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ms1[37mÂ·[0m=[37mÂ·[0ms
                            [34m^[0m
  <assignLhs< (29, 6): [37mÂ·[0m[37mÂ·[0ms1[37mÂ·[0m=[37mÂ·[0ms2[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
  >assignRhs> (29, 8): s1[37mÂ·[0m=[37mÂ·[0ms2[37mÂ·[0m;[32mâ†™[0m[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (29, 11): =[37mÂ·[0ms2[37mÂ·[0m;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp [32mGood[0m
                             [34m^[0m
<asgnEqParser< (29, 11): =[37mÂ·[0ms2[37mÂ·[0m;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp [32mGood[0m
                              [34m^[0m
>asgnEqParser> (31, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (31, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (31, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (33, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (33, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (33, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (33, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (34, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (35, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ms1[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (35, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ms1[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (35, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ms1[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (35, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ms1[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (36, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (36, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (36, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (36, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (38, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - print tests: print-backspace.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - print tests: printBool.wacc[0m
>asgnEqParser> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): ;[32mâ†™[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validIOTests.scala:58)[0m
[32mvalid - print tests: printCharArray.wacc[0m
>assignRhs> (13, 14): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m['h','
                           [34m^[0m
<assignRhs< (13, 27): ,'!'];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 14): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m['h','
                           [34m^[0m
<assignRhs< (13, 27): ,'!'];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(ArrayTypeNode(char))
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validIOTests.scala:66)[0m
[32mvalid - print tests: printCharAsString.wacc[0m
>assignRhs> (11, 16): tr[37mÂ·[0m=[37mÂ·[0m['f','
                           [34m^[0m
<assignRhs< (11, 29): ,'o'];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 16): tr[37mÂ·[0m=[37mÂ·[0m['f','
                           [34m^[0m
<assignRhs< (11, 29): ,'o'];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 3): r;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mstr[37mÂ·[0m=[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 3): r;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mstr[37mÂ·[0m=[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 7): [37mÂ·[0mstr[37mÂ·[0m=[37mÂ·[0m['b' [32mGood[0m
                            [34m^[0m
  >assignRhs> (13, 9): tr[37mÂ·[0m=[37mÂ·[0m['b','
                            [34m^[0m
  <assignRhs< (13, 22): ,'r'];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 22): ,'r'];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(ArrayTypeNode(char))
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validIOTests.scala:74)[0m
[32mvalid - print tests: printChar.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - print tests: printEscChar.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - print tests: printInt.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - print tests: println.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - print tests: print.wacc[0m
>asgnEqParser> (9, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  >assignLhs> (9, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                           [34m^[0m
  <assignLhs< (9, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                           [34m^[0m
<asgnEqParser< (9, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - read tests: echoBigInt.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
>assignLhs> (15, 8): read[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                          [34m^[0m
<assignLhs< (15, 10): ad[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - read tests: echoBigNegInt.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
>assignLhs> (15, 8): read[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                          [34m^[0m
<assignLhs< (15, 10): ad[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - read tests: echoChar.wacc[0m
>assignRhs> (13, 14): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'\0'[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (13, 19): '\0'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 14): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'\0'[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (13, 19): '\0'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 5): o";[32mâ†™[0m	read[37mÂ·[0mc
                             [34m^[0m
  >assignLhs> (15, 5): o";[32mâ†™[0m	read[37mÂ·[0mc
                            [34m^[0m
  <assignLhs< (15, 5): o";[32mâ†™[0m	read[37mÂ·[0mc [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): o";[32mâ†™[0m	read[37mÂ·[0mc [31mFail[0m
                             [34m^[0m
>assignLhs> (15, 10): read[37mÂ·[0mc[37mÂ·[0m;[32mâ†™[0m	p
                           [34m^[0m
<assignLhs< (15, 12): ad[37mÂ·[0mc[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 5): c[37mÂ·[0m;[32mâ†™[0m	printl
                             [34m^[0m
  >assignLhs> (16, 5): c[37mÂ·[0m;[32mâ†™[0m	printl
                            [34m^[0m
  <assignLhs< (16, 5): c[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): c[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - read tests: echoInt.wacc[0m
>assignRhs> (13, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 15): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 15): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 5): o";[32mâ†™[0m	read[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (15, 5): o";[32mâ†™[0m	read[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (15, 5): o";[32mâ†™[0m	read[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): o";[32mâ†™[0m	read[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
>assignLhs> (15, 10): read[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m	p
                           [34m^[0m
<assignLhs< (15, 12): ad[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 5): x[37mÂ·[0m;[32mâ†™[0m	printl
                             [34m^[0m
  >assignLhs> (16, 5): x[37mÂ·[0m;[32mâ†™[0m	printl
                            [34m^[0m
  <assignLhs< (16, 5): x[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): x[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - read tests: echoNegInt.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
>assignLhs> (15, 8): read[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                          [34m^[0m
<assignLhs< (15, 10): ad[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - read tests: echoPuncChar.wacc[0m
>assignRhs> (13, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'\0'[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (13, 17): '\0'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'\0'[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (13, 17): '\0'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc
                             [34m^[0m
  >assignLhs> (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc
                            [34m^[0m
  <assignLhs< (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc [31mFail[0m
                             [34m^[0m
>assignLhs> (15, 8): read[37mÂ·[0mc[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                          [34m^[0m
<assignLhs< (15, 10): ad[37mÂ·[0mc[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - read tests: readAtEof.wacc[0m
>assignRhs> (12, 14): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'Z';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 17): =[37mÂ·[0m'Z';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 14): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'Z';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 17): =[37mÂ·[0m'Z';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc [31mFail[0m
                             [34m^[0m
>assignLhs> (13, 10): read[37mÂ·[0mc;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignLhs< (13, 11): ead[37mÂ·[0mc;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (16, 15): c2[37mÂ·[0m=[37mÂ·[0m'Z';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (16, 18): =[37mÂ·[0m'Z';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mc [31mFail[0m
                             [34m^[0m
>assignLhs> (17, 10): read[37mÂ·[0mc2;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignLhs< (17, 12): ad[37mÂ·[0mc2;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - read tests: read.wacc[0m
>assignRhs> (12, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 15): [37mÂ·[0m=[37mÂ·[0m10;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 15): [37mÂ·[0m=[37mÂ·[0m10;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): "[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (14, 5): "[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (14, 5): "[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): "[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
>assignLhs> (14, 10): read[37mÂ·[0mx[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m
                           [34m^[0m
<assignLhs< (15, 1): ad[37mÂ·[0mx[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mValidIfTests:[0m
[32mvalid - if tests: if1.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - if tests: if2.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m!
                             [34m^[0m
  >assignLhs> (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m!
                            [34m^[0m
  <assignLhs< (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m! [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m! [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - if tests: if3.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m37;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m37;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): 7;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m<
                             [34m^[0m
  >assignLhs> (12, 3): 7;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m<
                            [34m^[0m
  <assignLhs< (12, 3): 7;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m< [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): 7;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m< [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - if tests: if4.wacc[0m
>assignRhs> (10, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (10, 16): [37mÂ·[0mtrue;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (10, 16): [37mÂ·[0mtrue;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0mfalse;
                           [34m^[0m
<assignRhs< (11, 17): false;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): e;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0m&
                             [34m^[0m
  >assignLhs> (12, 3): e;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0m&
                            [34m^[0m
  <assignLhs< (12, 3): e;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0m& [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): e;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0m& [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - if tests: if5.wacc[0m
>assignRhs> (10, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (10, 16): [37mÂ·[0mtrue;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (10, 16): [37mÂ·[0mtrue;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbo [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0mfalse;
                           [34m^[0m
<assignRhs< (11, 17): false;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): e;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0m|
                             [34m^[0m
  >assignLhs> (12, 3): e;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0m|
                            [34m^[0m
  <assignLhs< (12, 3): e;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0m| [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): e;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mb[37mÂ·[0m| [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - if tests: if6.wacc[0m
>assignRhs> (10, 13): c1[37mÂ·[0m=[37mÂ·[0m'f';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 16): =[37mÂ·[0m'f';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 13): c1[37mÂ·[0m=[37mÂ·[0m'f';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 16): =[37mÂ·[0m'f';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 13): c2[37mÂ·[0m=[37mÂ·[0m'F';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 16): =[37mÂ·[0m'F';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): ';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mc1[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): ';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mc1[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): ';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mc1[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): ';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mc1[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - if tests: ifBasic.wacc[0m
>asgnEqParser> (8, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  >assignLhs> (8, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                           [34m^[0m
  <assignLhs< (8, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                           [34m^[0m
<asgnEqParser< (8, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validIfTests.scala:66)[0m
[32mvalid - if tests: ifFalse.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mfal
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mfal
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mfal [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mfal [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - if tests: ifTrue.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - if tests: whitespace.wacc[0m
>assignRhs> (10, 11): nt[37mÂ·[0ma=13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0ma=13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): nt[37mÂ·[0ma=13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0ma=13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma==
                             [34m^[0m
  >assignLhs> (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma==
                            [34m^[0m
  <assignLhs< (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma== [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma== [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 16): then[37mÂ·[0ma=1els
                              [34m^[0m
  >assignLhs> (11, 16): then[37mÂ·[0ma=1els
                             [34m^[0m
  <assignLhs< (11, 17): hen[37mÂ·[0ma=1else [32mGood[0m
                             [34m^[0m
  >assignRhs> (11, 18): en[37mÂ·[0ma=1else[37mÂ·[0m
                             [34m^[0m
  <assignRhs< (11, 19): n[37mÂ·[0ma=1else[37mÂ·[0ma [32mGood[0m
                             [34m^[0m
<asgnEqParser< (11, 19): n[37mÂ·[0ma=1else[37mÂ·[0ma [32mGood[0m
                              [34m^[0m
>asgnEqParser> (11, 24): else[37mÂ·[0ma=0fi;
                              [34m^[0m
  >assignLhs> (11, 24): else[37mÂ·[0ma=0fi;
                             [34m^[0m
  <assignLhs< (11, 25): lse[37mÂ·[0ma=0fi;[32mâ†™[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (11, 26): se[37mÂ·[0ma=0fi;[32mâ†™[0m[37mÂ·[0m
                             [34m^[0m
  <assignRhs< (11, 27): e[37mÂ·[0ma=0fi;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (11, 27): e[37mÂ·[0ma=0fi;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (12, 3): i;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): i;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): i;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): i;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mValidPairsTests:[0m
[32mvalid - pairs tests: checkRefPair.wacc[0m
>assignRhs> (18, 23): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (18, 40): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 23): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (18, 40): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (19, 23): [37mÂ·[0mq[37mÂ·[0m=[37mÂ·[0mp;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp
                           [34m^[0m
<assignRhs< (19, 24): q[37mÂ·[0m=[37mÂ·[0mp;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (20, 3): p;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (20, 3): p;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (20, 3): p;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 3): p;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (23, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mp[37mÂ·[0m
                           [34m^[0m
<assignRhs< (23, 17): st[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (24, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mq[37mÂ·[0m
                           [34m^[0m
<assignRhs< (24, 17): st[37mÂ·[0mq[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (26, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (28, 13): c1[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mp[37mÂ·[0m
                           [34m^[0m
<assignRhs< (28, 19): nd[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (29, 13): c2[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mq[37mÂ·[0m
                           [34m^[0m
<assignRhs< (29, 19): nd[37mÂ·[0mq[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (31, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (32, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(PairTypeNode(integer,char))
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validPairsTests.scala:18)[0m
[32mvalid - pairs tests: createPair02.wacc[0m
>assignRhs> (8, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (9, 1): 'b')[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - pairs tests: createPair03.wacc[0m
>assignRhs> (8, 23): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (9, 1): 'a')[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - pairs tests: createPair.wacc[0m
>assignRhs> (8, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (9, 1): ,[37mÂ·[0m3)[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - pairs tests: createRefPair.wacc[0m
>assignRhs> (8, 23): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (8, 40): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                          [34m^[0m
>assignRhs> (8, 23): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (8, 40): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                          [34m^[0m
>assignRhs> (9, 23): [37mÂ·[0mq[37mÂ·[0m=[37mÂ·[0mp[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (10, 1): [37mÂ·[0m=[37mÂ·[0mp[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - pairs tests: free.wacc[0m
>assignRhs> (8, 23): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (8, 40): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfr [32mGood[0m
                          [34m^[0m
>assignRhs> (8, 23): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (8, 40): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfr [32mGood[0m
                          [34m^[0m
>asgnEqParser> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0ma
                            [34m^[0m
  >assignLhs> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0ma
                           [34m^[0m
  <assignLhs< (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0ma [31mFail[0m
                           [34m^[0m
<asgnEqParser< (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfree[37mÂ·[0ma [31mFail[0m
                            [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - pairs tests: linkedList.wacc[0m
(line 10, column 17):
  unexpected ")"
  expected "("
  >begin
  >  pair(int, pair) p = newpair(11, null) ;
                   ^
  >    pair(int, pair) q = newpair(4, p) ;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validPairsTests.scala:66)[0m
[32mvalid - pairs tests: nestedPairLeftAssign.wacc[0m
>assignRhs> (10, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (10, 36): ,[37mÂ·[0m3)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (10, 36): ,[37mÂ·[0m3)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
(line 11, column 17):
  unexpected ")"
  expected "("
  >  pair(int, int) p = newpair(2, 3) ;
  >  pair(int, pair) q = newpair(1, p) ;
                   ^
  >  fst snd q = 7 ;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validPairsTests.scala:74)[0m
[32mvalid - pairs tests: nestedPairRightExtract.wacc[0m
>assignRhs> (10, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (10, 36): ,[37mÂ·[0m3)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (10, 36): ,[37mÂ·[0m3)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
(line 11, column 17):
  unexpected ")"
  expected "("
  >  pair(int, int) p = newpair(2, 3) ;
  >  pair(int, pair) q = newpair(1, p) ;
                   ^
  >  int x = fst snd q ;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validPairsTests.scala:82)[0m
[32mvalid - pairs tests: nestedPair.wacc[0m
>assignRhs> (8, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (8, 36): ,[37mÂ·[0m3)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                          [34m^[0m
>assignRhs> (8, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (8, 36): ,[37mÂ·[0m3)[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                          [34m^[0m
(line 9, column 17):
  unexpected ")"
  expected "("
  >  pair(int, int) p = newpair(2, 3) ;
  >  pair(int, pair) q = newpair(1, p)
                   ^
  >end
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validPairsTests.scala:90)[0m
[32mvalid - pairs tests: null.wacc[0m
(line 11, column 12):
  unexpected ","
  expected "("
  >begin
  >  pair(pair, pair) p = null ;
              ^
  >  println p ;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validPairsTests.scala:98)[0m
[32mvalid - pairs tests: pairarray.wacc[0m
>assignRhs> (10, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (10, 35): 5,[37mÂ·[0m6);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (10, 35): 5,[37mÂ·[0m6);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 24): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[p,[37mÂ·[0mp]
                           [34m^[0m
<assignRhs< (11, 30): p,[37mÂ·[0mp];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfs [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfst[37mÂ·[0ma[
                             [34m^[0m
  >assignLhs> (12, 3): ];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfst[37mÂ·[0ma[
                            [34m^[0m
  <assignLhs< (12, 8): fst[37mÂ·[0ma[0][37mÂ·[0m=[37mÂ·[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (12, 8): fst[37mÂ·[0ma[0][37mÂ·[0m=[37mÂ·[0m [31mFail[0m
                             [34m^[0m
(line 12, column 8):
  unexpected "["
  expected "="
  >  pair(int, int)[] a = [p, p];
  >  fst a[0] = 3 ;
          ^
  >  int x = fst a[1] ;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validPairsTests.scala:106)[0m
[32mvalid - pairs tests: pairExchangeArrayOk.wacc[0m
>assignRhs> (9, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (9, 35): 4,[37mÂ·[0m5);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                          [34m^[0m
>assignRhs> (9, 22): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (9, 35): 4,[37mÂ·[0m5);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpa [32mGood[0m
                          [34m^[0m
(line 10, column 12):
  unexpected ","
  expected "("
  >  pair(int, int) p = newpair(4, 5);
  >  pair(pair, int) q = newpair(p, 6);
              ^
  >  fst fst q = []
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validPairsTests.scala:114)[0m
[32mvalid - pairs tests: printNullPair.wacc[0m
(line 10, column 12):
  unexpected ","
  expected "("
  >begin
  >  pair(pair, pair) p = null ;
              ^
  >  println p
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validPairsTests.scala:122)[0m
[32mvalid - pairs tests: printNull.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type checking not implemented for Null()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validPairsTests.scala:130)[0m
[32mvalid - pairs tests: printPairOfNulls.wacc[0m
(line 10, column 12):
  unexpected ","
  expected "("
  >begin
  >  pair(pair, pair) p = newpair(null, null) ;
              ^
  >  print p ;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validPairsTests.scala:138)[0m
[32mvalid - pairs tests: printPair.wacc[0m
>assignRhs> (10, 23): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (10, 40): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 23): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (10, 40): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mp[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 17): st[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (16, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mp[37mÂ·[0m
                           [34m^[0m
<assignRhs< (16, 18): nd[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Print expected int, char or string, got Some(PairTypeNode(integer,char))
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validPairsTests.scala:146)[0m
[32mvalid - pairs tests: readPair.wacc[0m
>assignRhs> (13, 25): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (13, 42): ,[37mÂ·[0m0)[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 25): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (13, 42): ,[37mÂ·[0m0)[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 5): )[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 5): )[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 5): )[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): )[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 14): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'0';[32mâ†™[0m	
                           [34m^[0m
<assignRhs< (15, 17): =[37mÂ·[0m'0';[32mâ†™[0m	rea [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 5): 0';[32mâ†™[0m	read[37mÂ·[0mc
                             [34m^[0m
  >assignLhs> (16, 5): 0';[32mâ†™[0m	read[37mÂ·[0mc
                            [34m^[0m
  <assignLhs< (16, 5): 0';[32mâ†™[0m	read[37mÂ·[0mc [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): 0';[32mâ†™[0m	read[37mÂ·[0mc [31mFail[0m
                             [34m^[0m
>assignLhs> (16, 10): read[37mÂ·[0mc[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignLhs< (16, 12): ad[37mÂ·[0mc[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m	f [32mGood[0m
                           [34m^[0m
>asgnEqParser> (17, 5): ;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m	fst[37mÂ·[0mp[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 5): ;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m	fst[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 11): st[37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mc[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (17, 13): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mc[37mÂ·[0m;[32mâ†™[0m	p
                             [34m^[0m
  <assignRhs< (17, 15): [37mÂ·[0m=[37mÂ·[0mc[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                             [34m^[0m
<asgnEqParser< (17, 15): [37mÂ·[0m=[37mÂ·[0mc[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                              [34m^[0m
>asgnEqParser> (18, 5): c[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 5): c[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 5): c[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 5): c[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (19, 13): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m	r
                           [34m^[0m
<assignRhs< (19, 15): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m	rea [32mGood[0m
                           [34m^[0m
>asgnEqParser> (20, 5): 0[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0mi
                             [34m^[0m
  >assignLhs> (20, 5): 0[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0mi
                            [34m^[0m
  <assignLhs< (20, 5): 0[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0mi [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 5): 0[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0mi [31mFail[0m
                             [34m^[0m
>assignLhs> (20, 10): read[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m	s
                           [34m^[0m
<assignLhs< (20, 12): ad[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m	snd [32mGood[0m
                           [34m^[0m
>asgnEqParser> (21, 5): i[37mÂ·[0m;[32mâ†™[0m	snd[37mÂ·[0mp[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (21, 5): i[37mÂ·[0m;[32mâ†™[0m	snd[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (21, 11): nd[37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (21, 13): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m	#
                             [34m^[0m
  <assignRhs< (21, 15): [37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m	#[37mÂ·[0mC [32mGood[0m
                             [34m^[0m
<asgnEqParser< (21, 15): [37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m;[32mâ†™[0m	#[37mÂ·[0mC [32mGood[0m
                              [34m^[0m
>asgnEqParser> (23, 5): d[37mÂ·[0mi[32mâ†™[0m	c[37mÂ·[0m=[37mÂ·[0m'\
                             [34m^[0m
  >assignLhs> (23, 5): d[37mÂ·[0mi[32mâ†™[0m	c[37mÂ·[0m=[37mÂ·[0m'\
                            [34m^[0m
  <assignLhs< (23, 7): i[32mâ†™[0m	c[37mÂ·[0m=[37mÂ·[0m'\0' [32mGood[0m
                            [34m^[0m
  >assignRhs> (23, 9): 	c[37mÂ·[0m=[37mÂ·[0m'\0'[37mÂ·[0m;
                            [34m^[0m
  <assignRhs< (23, 14): '\0'[37mÂ·[0m;[32mâ†™[0m	i[37mÂ·[0m= [32mGood[0m
                             [34m^[0m
<asgnEqParser< (23, 14): '\0'[37mÂ·[0m;[32mâ†™[0m	i[37mÂ·[0m= [32mGood[0m
                              [34m^[0m
>asgnEqParser> (24, 5): '[37mÂ·[0m;[32mâ†™[0m	i[37mÂ·[0m=[37mÂ·[0m-1
                             [34m^[0m
  >assignLhs> (24, 5): '[37mÂ·[0m;[32mâ†™[0m	i[37mÂ·[0m=[37mÂ·[0m-1
                            [34m^[0m
  <assignLhs< (24, 7): ;[32mâ†™[0m	i[37mÂ·[0m=[37mÂ·[0m-1[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
  >assignRhs> (24, 9): 	i[37mÂ·[0m=[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m	
                            [34m^[0m
  <assignRhs< (24, 12): =[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                             [34m^[0m
<asgnEqParser< (24, 12): =[37mÂ·[0m-1[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                              [34m^[0m
>asgnEqParser> (25, 5): 1[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (25, 5): 1[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (25, 5): 1[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (25, 5): 1[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (26, 5): "[37mÂ·[0m;[32mâ†™[0m	c[37mÂ·[0m=[37mÂ·[0mfs
                             [34m^[0m
  >assignLhs> (26, 5): "[37mÂ·[0m;[32mâ†™[0m	c[37mÂ·[0m=[37mÂ·[0mfs
                            [34m^[0m
  <assignLhs< (26, 7): ;[32mâ†™[0m	c[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (26, 9): 	c[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (26, 15): st[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                             [34m^[0m
<asgnEqParser< (26, 15): st[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                              [34m^[0m
>asgnEqParser> (27, 5): p[37mÂ·[0m;[32mâ†™[0m	printl
                             [34m^[0m
  >assignLhs> (27, 5): p[37mÂ·[0m;[32mâ†™[0m	printl
                            [34m^[0m
  <assignLhs< (27, 5): p[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (27, 5): p[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (28, 5): c[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (28, 5): c[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (28, 5): c[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (28, 5): c[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (29, 5): "[37mÂ·[0m;[32mâ†™[0m	i[37mÂ·[0m=[37mÂ·[0msn
                             [34m^[0m
  >assignLhs> (29, 5): "[37mÂ·[0m;[32mâ†™[0m	i[37mÂ·[0m=[37mÂ·[0msn
                            [34m^[0m
  <assignLhs< (29, 7): ;[32mâ†™[0m	i[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (29, 9): 	i[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (29, 15): nd[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                             [34m^[0m
<asgnEqParser< (29, 15): nd[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                              [34m^[0m
>asgnEqParser> (30, 5): p[37mÂ·[0m;[32mâ†™[0m	printl
                             [34m^[0m
  >assignLhs> (30, 5): p[37mÂ·[0m;[32mâ†™[0m	printl
                            [34m^[0m
  <assignLhs< (30, 5): p[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 5): p[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - pairs tests: writeFst.wacc[0m
>assignRhs> (11, 23): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (11, 40): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 23): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (11, 40): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mp[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 17): st[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfst[37mÂ·[0mp[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mfst[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 9): st[37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
  >assignRhs> (14, 11): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                             [34m^[0m
  <assignRhs< (14, 14): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (14, 14): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0mfs
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0mfs
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 7): [37mÂ·[0mf[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (15, 13): st[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (15, 13): st[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - pairs tests: writeSnd.wacc[0m
>assignRhs> (11, 23): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (11, 40): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 23): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (11, 40): 'a')[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mch [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 12): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mp[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 18): nd[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0msnd[37mÂ·[0mp[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0msnd[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 9): nd[37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0m'Z'[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (14, 11): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0m'Z'[37mÂ·[0m;[32mâ†™[0m
                             [34m^[0m
  <assignRhs< (14, 15): [37mÂ·[0m'Z'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ms[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (14, 15): [37mÂ·[0m'Z'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ms[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0msn
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0msn
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 7): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (15, 13): nd[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (15, 13): nd[37mÂ·[0mp[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mValidRuntimeErrTests:[0m
[32mvalid - arrayOutOfBounds tests: arrayNegBounds.wacc[0m
>assignRhs> (12, 15): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[43,[37mÂ·[0m2
                           [34m^[0m
<assignRhs< (12, 30): ,[37mÂ·[0m1][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 15): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[43,[37mÂ·[0m2
                           [34m^[0m
<assignRhs< (12, 30): ,[37mÂ·[0m1][37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                           [34m^[0m
<assignRhs< (13, 23): ,[37mÂ·[0m3][37mÂ·[0m;	[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): ;	[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): ;	[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): ;	[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): ;	[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - arrayOutOfBounds tests: arrayOutOfBounds.wacc[0m
>assignRhs> (13, 13): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                           [34m^[0m
<assignRhs< (13, 23): ,[37mÂ·[0m3][37mÂ·[0m;[32mâ†™[0m	int [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                           [34m^[0m
<assignRhs< (13, 23): ,[37mÂ·[0m3][37mÂ·[0m;[32mâ†™[0m	int [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 15): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[43,[37mÂ·[0m2
                           [34m^[0m
<assignRhs< (14, 30): ,[37mÂ·[0m1][37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 5): ][37mÂ·[0m;[32mâ†™[0m	printl
                             [34m^[0m
  >assignLhs> (15, 5): ][37mÂ·[0m;[32mâ†™[0m	printl
                            [34m^[0m
  <assignLhs< (15, 5): ][37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): ][37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - arrayOutOfBounds tests: arrayOutOfBoundsWrite.wacc[0m
>assignRhs> (13, 13): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                           [34m^[0m
<assignRhs< (13, 23): ,[37mÂ·[0m3][37mÂ·[0m;[32mâ†™[0m	int [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                           [34m^[0m
<assignRhs< (13, 23): ,[37mÂ·[0m3][37mÂ·[0m;[32mâ†™[0m	int [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 15): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[43,[37mÂ·[0m2
                           [34m^[0m
<assignRhs< (14, 30): ,[37mÂ·[0m1][37mÂ·[0m;[32mâ†™[0m	a[5 [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 5): ][37mÂ·[0m;[32mâ†™[0m	a[5][37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (15, 5): ][37mÂ·[0m;[32mâ†™[0m	a[5][37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (15, 10): a[5][37mÂ·[0m=[37mÂ·[0m100[37mÂ·[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (15, 12): 5][37mÂ·[0m=[37mÂ·[0m100[37mÂ·[0m;[32mâ†™[0m
                             [34m^[0m
  <assignRhs< (15, 16): [37mÂ·[0m100[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (15, 16): [37mÂ·[0m100[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - badChar tests: negativeChr.wacc[0m
>assignRhs> (12, 14): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0mchr[37mÂ·[0m-1
                           [34m^[0m
<assignRhs< (13, 1): r[37mÂ·[0m-1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - badChar tests: tooBigChr.wacc[0m
>assignRhs> (12, 14): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0mchr[37mÂ·[0m12
                           [34m^[0m
<assignRhs< (13, 1): [37mÂ·[0m128[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - divideByZero tests: divideByZero.wacc[0m
>assignRhs> (12, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m	
                           [34m^[0m
<assignRhs< (12, 16): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m	int [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m	
                           [34m^[0m
<assignRhs< (12, 16): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m	int [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m	p
                           [34m^[0m
<assignRhs< (13, 15): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 5): 0[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 5): 0[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 5): 0[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): 0[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - divideByZero tests: divZero.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m/[37mÂ·[0m0
                           [34m^[0m
<assignRhs< (12, 18): [37mÂ·[0m/[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m/[37mÂ·[0m0
                           [34m^[0m
<assignRhs< (12, 18): [37mÂ·[0m/[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - divideByZero tests: modByZero.wacc[0m
>assignRhs> (12, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m	
                           [34m^[0m
<assignRhs< (12, 16): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m	int [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m	
                           [34m^[0m
<assignRhs< (12, 16): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m	int [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m	p
                           [34m^[0m
<assignRhs< (13, 15): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m	pri [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 5): 0[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 5): 0[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 5): 0[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): 0[37mÂ·[0m;[32mâ†™[0m	print[37mÂ·[0m [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - integerOverflow tests: intJustOverflow.wacc[0m
>assignRhs> (14, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m214748
                           [34m^[0m
<assignRhs< (14, 22): 3646[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m214748
                           [34m^[0m
<assignRhs< (14, 22): 3646[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (16, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (16, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (16, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (18, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (18, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[37mÂ·[0m#err [32mGood[0m
                             [34m^[0m
<asgnEqParser< (18, 13): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[37mÂ·[0m#err [32mGood[0m
                              [34m^[0m
>asgnEqParser> (19, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - integerOverflow tests: intmultOverflow.wacc[0m
>assignRhs> (14, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m214748
                           [34m^[0m
<assignRhs< (14, 19): 7483[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m214748
                           [34m^[0m
<assignRhs< (14, 19): 7483[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m*[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (16, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m*[37mÂ·[0m10
                            [34m^[0m
  <assignRhs< (16, 16): 1000[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (16, 16): 1000[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m*[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (18, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m*[37mÂ·[0m10
                            [34m^[0m
  <assignRhs< (18, 16): 1000[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (18, 16): 1000[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m*[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (20, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m*[37mÂ·[0m10
                            [34m^[0m
  <assignRhs< (20, 16): 1000[37mÂ·[0m;[37mÂ·[0m#err [32mGood[0m
                             [34m^[0m
<asgnEqParser< (20, 16): 1000[37mÂ·[0m;[37mÂ·[0m#err [32mGood[0m
                              [34m^[0m
>asgnEqParser> (21, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (21, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (21, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - integerOverflow tests: intnegateOverflow2.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-21474
                           [34m^[0m
<assignRhs< (13, 22): 83648[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp [31mFail[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-21474
                           [34m^[0m
<assignRhs< (13, 22): 83648[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp [31mFail[0m
                           [34m^[0m
(line 13, column 12):
  literal is not within the range -2147483648 to 2147483647
  >begin
  >  int x = -2147483648 ;
              ^^^^^^^^^^
  >  println x ;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validRuntimeErrTests.scala:98)[0m
[32mvalid - integerOverflow tests: intnegateOverflow3.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-20000
                           [34m^[0m
<assignRhs< (13, 18): 0000[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-20000
                           [34m^[0m
<assignRhs< (13, 18): 0000[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx*
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx*
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx*10 [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx*1000
                            [34m^[0m
  <assignRhs< (15, 18): 00000;[37mÂ·[0m#err [32mGood[0m
                             [34m^[0m
<asgnEqParser< (15, 18): 00000;[37mÂ·[0m#err [32mGood[0m
                              [34m^[0m
>asgnEqParser> (16, 3): ?[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): ?[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): ?[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): ?[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - integerOverflow tests: intnegateOverflow4.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-20000
                           [34m^[0m
<assignRhs< (13, 23): 0000[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-20000
                           [34m^[0m
<assignRhs< (13, 23): 0000[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m20
                            [34m^[0m
  <assignRhs< (15, 21): 00000;[37mÂ·[0m#err [32mGood[0m
                             [34m^[0m
<asgnEqParser< (15, 21): 00000;[37mÂ·[0m#err [32mGood[0m
                              [34m^[0m
>asgnEqParser> (16, 3): ?[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): ?[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): ?[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): ?[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - integerOverflow tests: intnegateOverflow.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-21474
                           [34m^[0m
<assignRhs< (13, 22): 83648[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp [31mFail[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-21474
                           [34m^[0m
<assignRhs< (13, 22): 83648[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp [31mFail[0m
                           [34m^[0m
(line 13, column 12):
  literal is not within the range -2147483648 to 2147483647
  >begin
  >  int x = -2147483648 ;
              ^^^^^^^^^^
  >  println x ;
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validRuntimeErrTests.scala:122)[0m
[32mvalid - integerOverflow tests: intUnderflow.wacc[0m
>assignRhs> (14, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-21474
                           [34m^[0m
<assignRhs< (14, 23): 3647[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-21474
                           [34m^[0m
<assignRhs< (14, 23): 3647[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (16, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (16, 13): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (16, 13): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (18, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (18, 13): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[37mÂ·[0m#err [32mGood[0m
                             [34m^[0m
<asgnEqParser< (18, 13): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[37mÂ·[0m#err [32mGood[0m
                              [34m^[0m
>asgnEqParser> (19, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - integerOverflow tests: intWayOverflow.wacc[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m200000
                           [34m^[0m
<assignRhs< (13, 22): 0000[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m200000
                           [34m^[0m
<assignRhs< (13, 22): 0000[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0m20
                            [34m^[0m
  <assignRhs< (15, 21): 00000;[37mÂ·[0m#err [32mGood[0m
                             [34m^[0m
<asgnEqParser< (15, 21): 00000;[37mÂ·[0m#err [32mGood[0m
                              [34m^[0m
>asgnEqParser> (16, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): e?[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - nullDereference tests: freeNull.wacc[0m
(line 12, column 12):
  unexpected ","
  expected "("
  >begin
  >  pair(pair, pair) a = null ;
              ^
  >  free a
failed
Exit Code: 100
[31m- should return exit code 0 *** FAILED ***[0m
[31m  100 was not equal to 0 (validRuntimeErrTests.scala:146)[0m
[32mvalid - nullDereference tests: readNull1.wacc[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 29): null[37mÂ·[0m;[32mâ†™[0m	rea [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 29): null[37mÂ·[0m;[32mâ†™[0m	rea [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 5): l[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0mf
                             [34m^[0m
  >assignLhs> (13, 5): l[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0mf
                            [34m^[0m
  <assignLhs< (13, 5): l[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0mf [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): l[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0mf [31mFail[0m
                             [34m^[0m
>assignLhs> (13, 10): read[37mÂ·[0mfst[37mÂ·[0mp[32mâ†™[0m
                           [34m^[0m
<assignLhs< (14, 1): st[37mÂ·[0mp[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type checking not implemented for Null()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validRuntimeErrTests.scala:154)[0m
[32mvalid - nullDereference tests: readNull2.wacc[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 29): null[37mÂ·[0m;[32mâ†™[0m	rea [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 29): null[37mÂ·[0m;[32mâ†™[0m	rea [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 5): l[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0ms
                             [34m^[0m
  >assignLhs> (13, 5): l[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0ms
                            [34m^[0m
  <assignLhs< (13, 5): l[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0ms [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): l[37mÂ·[0m;[32mâ†™[0m	read[37mÂ·[0ms [31mFail[0m
                             [34m^[0m
>assignLhs> (13, 10): read[37mÂ·[0msnd[37mÂ·[0mp[32mâ†™[0m
                           [34m^[0m
<assignLhs< (14, 1): nd[37mÂ·[0mp[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type checking not implemented for Null()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validRuntimeErrTests.scala:162)[0m
[32mvalid - nullDereference tests: setNull1.wacc[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 29): null[37mÂ·[0m;[32mâ†™[0m	fst [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 29): null[37mÂ·[0m;[32mâ†™[0m	fst [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 5): l[37mÂ·[0m;[32mâ†™[0m	fst[37mÂ·[0mp[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 5): l[37mÂ·[0m;[32mâ†™[0m	fst[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 11): st[37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0m1[32mâ†™[0men [32mGood[0m
                             [34m^[0m
  >assignRhs> (13, 13): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0m1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m
                             [34m^[0m
  <assignRhs< (14, 1): [37mÂ·[0m=[37mÂ·[0m1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (14, 1): [37mÂ·[0m=[37mÂ·[0m1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
Type checking not implemented for Null()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validRuntimeErrTests.scala:170)[0m
[32mvalid - nullDereference tests: setNull2.wacc[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 29): null[37mÂ·[0m;[32mâ†™[0m	snd [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 29): null[37mÂ·[0m;[32mâ†™[0m	snd [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 5): l[37mÂ·[0m;[32mâ†™[0m	snd[37mÂ·[0mp[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 5): l[37mÂ·[0m;[32mâ†™[0m	snd[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 11): nd[37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0m1[32mâ†™[0men [32mGood[0m
                             [34m^[0m
  >assignRhs> (13, 13): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0m1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m
                             [34m^[0m
  <assignRhs< (14, 1): [37mÂ·[0m=[37mÂ·[0m1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (14, 1): [37mÂ·[0m=[37mÂ·[0m1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
Type checking not implemented for Null()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validRuntimeErrTests.scala:178)[0m
[32mvalid - nullDereference tests: useNull1.wacc[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 29): null[37mÂ·[0m;[32mâ†™[0m	int [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 29): null[37mÂ·[0m;[32mâ†™[0m	int [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mp[32mâ†™[0m
                           [34m^[0m
<assignRhs< (14, 1): st[37mÂ·[0mp[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type checking not implemented for Null()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validRuntimeErrTests.scala:186)[0m
[32mvalid - nullDereference tests: useNull2.wacc[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 29): null[37mÂ·[0m;[32mâ†™[0m	int [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 24): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (12, 29): null[37mÂ·[0m;[32mâ†™[0m	int [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mp[32mâ†™[0m
                           [34m^[0m
<assignRhs< (14, 1): nd[37mÂ·[0mp[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
Type checking not implemented for Null()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validRuntimeErrTests.scala:194)[0m
[32mValidScopeTests:[0m
[32mvalid - scope tests: ifNested1.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m>
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m>
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m> [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m> [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - scope tests: ifNested2.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m13;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>asgnEqParser> (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): 3;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m>
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m>
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m> [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m> [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m<
                             [34m^[0m
  >assignLhs> (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m<
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m< [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m< [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m>
                             [34m^[0m
  >assignLhs> (19, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m>
                            [34m^[0m
  <assignLhs< (19, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m> [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m> [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m>
                              [34m^[0m
  >assignLhs> (21, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m>
                             [34m^[0m
  <assignLhs< (21, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m> [31mFail[0m
                             [34m^[0m
<asgnEqParser< (21, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0ma[37mÂ·[0m> [31mFail[0m
                              [34m^[0m
>asgnEqParser> (23, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (23, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (23, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (23, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (25, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (25, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (25, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (25, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (28, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (28, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (28, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (28, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (32, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (32, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (32, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (32, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (35, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (35, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (35, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (35, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - scope tests: indentationNotImportant.wacc[0m
>asgnEqParser> (8, 2): gin[32mâ†™[0m[37mÂ·[0mwhile[32mâ†™[0m
                            [34m^[0m
  >assignLhs> (8, 2): gin[32mâ†™[0m[37mÂ·[0mwhile[32mâ†™[0m
                           [34m^[0m
  <assignLhs< (8, 2): gin[32mâ†™[0m[37mÂ·[0mwhile[32mâ†™[0m [31mFail[0m
                           [34m^[0m
<asgnEqParser< (8, 2): gin[32mâ†™[0m[37mÂ·[0mwhile[32mâ†™[0m [31mFail[0m
                            [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validScopeTests.scala:34)[0m
[32mvalid - scope tests: intsAndKeywords.wacc[0m
>asgnEqParser> (7, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  >assignLhs> (7, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                           [34m^[0m
  <assignLhs< (7, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                           [34m^[0m
<asgnEqParser< (7, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
>assignRhs> (8, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m125end
                          [34m^[0m
<assignRhs< (8, 16): =[37mÂ·[0m125end[32mâ†™[0men [32mGood[0m
                          [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - scope tests: printAllTypes.wacc[0m
>assignRhs> (21, 18): ma[37mÂ·[0m=[37mÂ·[0m",[37mÂ·[0m";[32mâ†™[0m
                           [34m^[0m
<assignRhs< (21, 22): [37mÂ·[0m",[37mÂ·[0m";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (21, 18): ma[37mÂ·[0m=[37mÂ·[0m",[37mÂ·[0m";[32mâ†™[0m
                           [34m^[0m
<assignRhs< (21, 22): [37mÂ·[0m",[37mÂ·[0m";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (22, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb
                           [34m^[0m
<assignRhs< (22, 12): x[37mÂ·[0m=[37mÂ·[0m5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                           [34m^[0m
>asgnEqParser> (23, 3): 5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (23, 3): 5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (23, 3): 5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 3): 5;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (24, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m'x';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (24, 17): =[37mÂ·[0m'x';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (24, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m'x';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (24, 17): =[37mÂ·[0m'x';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (26, 16): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (26, 20): [37mÂ·[0mtrue;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (26, 16): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue;[32mâ†™[0m
                           [34m^[0m
<assignRhs< (26, 20): [37mÂ·[0mtrue;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (27, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (27, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (27, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (27, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (28, 20): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m"this[37mÂ·[0m
                           [34m^[0m
<assignRhs< (28, 38): ring";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (28, 20): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m"this[37mÂ·[0m
                           [34m^[0m
<assignRhs< (28, 38): ring";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (29, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (29, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (29, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (29, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (30, 21): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1,2,3
                           [34m^[0m
<assignRhs< (30, 28): ,2,3];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (30, 21): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1,2,3
                           [34m^[0m
<assignRhs< (30, 28): ,2,3];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (31, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                              [34m^[0m
  >assignLhs> (31, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  <assignLhs< (31, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (31, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                              [34m^[0m
>assignRhs> (32, 24): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m['x',[37mÂ·[0m
                           [34m^[0m
<assignRhs< (32, 39): [37mÂ·[0m'z'];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (32, 24): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m['x',[37mÂ·[0m
                           [34m^[0m
<assignRhs< (32, 39): [37mÂ·[0m'z'];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (33, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                              [34m^[0m
  >assignLhs> (33, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  <assignLhs< (33, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (33, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                              [34m^[0m
>assignRhs> (34, 26): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[true,
                           [34m^[0m
<assignRhs< (34, 45): true];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (34, 26): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[true,
                           [34m^[0m
<assignRhs< (34, 45): true];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (35, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                              [34m^[0m
  >assignLhs> (35, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  <assignLhs< (35, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (35, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                              [34m^[0m
>assignRhs> (36, 30): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m["arra
                           [34m^[0m
<assignRhs< (36, 56): ngs"];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (36, 30): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m["arra
                           [34m^[0m
<assignRhs< (36, 56): ngs"];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (37, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                              [34m^[0m
  >assignLhs> (37, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  <assignLhs< (37, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (37, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                              [34m^[0m
>assignRhs> (38, 38): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (38, 51): 1,[37mÂ·[0m2);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (38, 38): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (38, 51): 1,[37mÂ·[0m2);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (39, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                              [34m^[0m
  >assignLhs> (39, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  <assignLhs< (39, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (39, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                              [34m^[0m
>assignRhs> (40, 42): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (40, 60): true);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (40, 42): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (40, 60): true);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (41, 42): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (41, 61): alse);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (42, 44): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[y,[37mÂ·[0mz]
                           [34m^[0m
<assignRhs< (42, 50): y,[37mÂ·[0mz];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (43, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                              [34m^[0m
  >assignLhs> (43, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  <assignLhs< (43, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (43, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                              [34m^[0m
>assignRhs> (44, 33): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                           [34m^[0m
<assignRhs< (44, 42): 2,[37mÂ·[0m3];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (44, 33): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                           [34m^[0m
<assignRhs< (44, 42): 2,[37mÂ·[0m3];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (45, 34): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0m['a',[37mÂ·[0m
                           [34m^[0m
<assignRhs< (45, 49): [37mÂ·[0m'c'];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (46, 47): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mnewpai
                           [34m^[0m
<assignRhs< (46, 60): y,[37mÂ·[0mz);[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (47, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                              [34m^[0m
  >assignLhs> (47, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  <assignLhs< (47, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (47, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                              [34m^[0m
>assignRhs> (50, 33): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mx;
                           [34m^[0m
<assignRhs< (50, 38): fst[37mÂ·[0mx;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (51, 34): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mx;
                           [34m^[0m
<assignRhs< (51, 39): snd[37mÂ·[0mx;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (52, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (52, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (52, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (52, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (53, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (53, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (53, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (53, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (54, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (54, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (54, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (54, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (55, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (55, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (55, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (55, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (56, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (56, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (56, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (56, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (57, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (57, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (57, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (57, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (58, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (58, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (58, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (58, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (59, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (59, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (59, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (59, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (60, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (60, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (60, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (60, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (61, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (61, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (61, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (61, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (62, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (62, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (62, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (62, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (63, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (63, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (63, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (63, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (64, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (64, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (64, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (64, 23): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>assignRhs> (66, 42): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mx[0];[32mâ†™[0m
                           [34m^[0m
<assignRhs< (66, 46): [37mÂ·[0mx[0];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (67, 31): aa[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0ma;
                           [34m^[0m
<assignRhs< (67, 36): fst[37mÂ·[0ma;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (68, 31): ab[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0ma;
                           [34m^[0m
<assignRhs< (68, 36): snd[37mÂ·[0ma;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (69, 42): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mx[1];[32mâ†™[0m
                           [34m^[0m
<assignRhs< (69, 46): [37mÂ·[0mx[1];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (70, 31): ba[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mb;
                           [34m^[0m
<assignRhs< (70, 36): fst[37mÂ·[0mb;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (71, 31): bb[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mb;
                           [34m^[0m
<assignRhs< (71, 36): snd[37mÂ·[0mb;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (72, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (72, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (72, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (72, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (73, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (73, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (73, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (73, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (74, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (74, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (74, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (74, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (75, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (75, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (75, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (75, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (76, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (76, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (76, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (76, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (77, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (77, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (77, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (77, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (78, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (78, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (78, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (78, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (79, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (79, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (79, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (79, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (80, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (80, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (80, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (80, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (81, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (81, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (81, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (81, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (82, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (82, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (82, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (82, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (83, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (83, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (83, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (83, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (84, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (84, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (84, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (84, 21): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>assignRhs> (86, 27): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mx;
                           [34m^[0m
<assignRhs< (86, 32): fst[37mÂ·[0mx;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (87, 27): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mx;
                           [34m^[0m
<assignRhs< (87, 32): snd[37mÂ·[0mx;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (88, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (88, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (88, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (88, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (89, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (89, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (89, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (89, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (90, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (90, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (90, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (90, 19): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>assignRhs> (92, 28): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mx[0];[32mâ†™[0m
                           [34m^[0m
<assignRhs< (92, 32): [37mÂ·[0mx[0];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (93, 28): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mx[1];[32mâ†™[0m
                           [34m^[0m
<assignRhs< (93, 32): [37mÂ·[0mx[1];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (94, 28): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0mx[2];[32mâ†™[0m
                           [34m^[0m
<assignRhs< (94, 32): [37mÂ·[0mx[2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (95, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (95, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (95, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (95, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (96, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (96, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (96, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (96, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (97, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (97, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (97, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (97, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (98, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  >assignLhs> (98, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  <assignLhs< (98, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
<asgnEqParser< (98, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
>asgnEqParser> (99, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (99, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (99, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (99, 17): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (101, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                               [34m^[0m
  >assignLhs> (101, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  <assignLhs< (101, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
<asgnEqParser< (101, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                               [34m^[0m
>asgnEqParser> (102, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                               [34m^[0m
  >assignLhs> (102, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  <assignLhs< (102, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
<asgnEqParser< (102, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                               [34m^[0m
>asgnEqParser> (103, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                               [34m^[0m
  >assignLhs> (103, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  <assignLhs< (103, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
<asgnEqParser< (103, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                               [34m^[0m
>asgnEqParser> (104, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                               [34m^[0m
  >assignLhs> (104, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  <assignLhs< (104, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
<asgnEqParser< (104, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                               [34m^[0m
>asgnEqParser> (105, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                               [34m^[0m
  >assignLhs> (105, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  <assignLhs< (105, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
<asgnEqParser< (105, 15): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                               [34m^[0m
>asgnEqParser> (107, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                               [34m^[0m
  >assignLhs> (107, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  <assignLhs< (107, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
<asgnEqParser< (107, 13): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                               [34m^[0m
>assignRhs> (109, 19): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0mx[0];[32mâ†™[0m
                            [34m^[0m
<assignRhs< (109, 23): [37mÂ·[0mx[0];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (110, 19): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mx[1];[32mâ†™[0m
                            [34m^[0m
<assignRhs< (110, 23): [37mÂ·[0mx[1];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (111, 19): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0mx[2];[32mâ†™[0m
                            [34m^[0m
<assignRhs< (111, 23): [37mÂ·[0mx[2];[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>asgnEqParser> (112, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                               [34m^[0m
  >assignLhs> (112, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  <assignLhs< (112, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
<asgnEqParser< (112, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                               [34m^[0m
>asgnEqParser> (113, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                               [34m^[0m
  >assignLhs> (113, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  <assignLhs< (113, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
<asgnEqParser< (113, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                               [34m^[0m
>asgnEqParser> (114, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                               [34m^[0m
  >assignLhs> (114, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  <assignLhs< (114, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
<asgnEqParser< (114, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                               [34m^[0m
>asgnEqParser> (115, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                               [34m^[0m
  >assignLhs> (115, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                              [34m^[0m
  <assignLhs< (115, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                              [34m^[0m
<asgnEqParser< (115, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                               [34m^[0m
>asgnEqParser> (116, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                               [34m^[0m
  >assignLhs> (116, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  <assignLhs< (116, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
<asgnEqParser< (116, 11): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                               [34m^[0m
>asgnEqParser> (118, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (118, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (118, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (118, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (120, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (120, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (120, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (120, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (122, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (122, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (122, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (122, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
>asgnEqParser> (124, 3): d;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                              [34m^[0m
  >assignLhs> (124, 3): d;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  <assignLhs< (124, 3): d;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
<asgnEqParser< (124, 3): d;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                              [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validScopeTests.scala:50)[0m
[32mvalid - scope tests: scopeBasic.wacc[0m
>asgnEqParser> (9, 3): p;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  >assignLhs> (9, 3): p;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                           [34m^[0m
  <assignLhs< (9, 3): p;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                           [34m^[0m
<asgnEqParser< (9, 3): p;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validScopeTests.scala:58)[0m
[32mvalid - scope tests: scopeIfRedefine.wacc[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mif[37mÂ·[0mx[37mÂ·[0m= [31mFail[0m
                             [34m^[0m
>assignRhs> (13, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (13, 19): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (13, 19): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>assignRhs> (16, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m'a';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (16, 17): =[37mÂ·[0m'a';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (16, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m'a';[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (16, 17): =[37mÂ·[0m'a';[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validScopeTests.scala:66)[0m
[32mvalid - scope tests: scopeRedefine.wacc[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (13, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (13, 11): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 11): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (13, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (13, 11): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 11): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>assignRhs> (14, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (14, 19): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validScopeTests.scala:74)[0m
[32mvalid - scope tests: scopeSimpleRedefine.wacc[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (13, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (13, 19): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 14): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (13, 19): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Println expected int, char or string, got Some(bool)
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validScopeTests.scala:82)[0m
[32mvalid - scope tests: scopeVars.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (15, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 15): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 13): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 15): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - scope tests: scope.wacc[0m
>asgnEqParser> (8, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  >assignLhs> (8, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                           [34m^[0m
  <assignLhs< (8, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                           [34m^[0m
<asgnEqParser< (8, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
>asgnEqParser> (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  >assignLhs> (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                           [34m^[0m
  <assignLhs< (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                           [34m^[0m
<asgnEqParser< (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
>asgnEqParser> (10, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (10, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (10, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 9): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validScopeTests.scala:98)[0m
[32mvalid - scope tests: scopeWhileNested.wacc[0m
>assignRhs> (15, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (18, 18): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m"count
                           [34m^[0m
<assignRhs< (18, 33): ..[37mÂ·[0m"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 18): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m"count
                           [34m^[0m
<assignRhs< (18, 33): ..[37mÂ·[0m"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (18, 18): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m"count
                           [34m^[0m
<assignRhs< (18, 33): ..[37mÂ·[0m"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 18): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m"count
                           [34m^[0m
<assignRhs< (18, 33): ..[37mÂ·[0m"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (22, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m1[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (23, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (23, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (24, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (24, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (24, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (24, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (25, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
Type mismatch: Binary arithmetic operator expected two integers, got string and integer
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validScopeTests.scala:106)[0m
[32mvalid - scope tests: scopeWhileRedefine.wacc[0m
>assignRhs> (15, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mst [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 13): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mst [32mGood[0m
                           [34m^[0m
>assignRhs> (16, 14): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m"[37mÂ·[0mBoom
                           [34m^[0m
<assignRhs< (16, 23): om!"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                           [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (18, 16): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m"count
                           [34m^[0m
<assignRhs< (18, 31): ..[37mÂ·[0m"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 16): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m"count
                           [34m^[0m
<assignRhs< (18, 31): ..[37mÂ·[0m"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (21, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (21, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m1[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (22, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (22, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (24, 3): x;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (24, 3): x;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (24, 3): x;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (24, 3): x;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - scope tests: splitScope.wacc[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbe [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mbegin[32mâ†™[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (13, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (13, 11): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 11): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (13, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (13, 11): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 11): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>assignRhs> (14, 14): [37mÂ·[0mz[37mÂ·[0m=[37mÂ·[0mtrue[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 3): ue[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mend[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                          [34m^[0m
>assignRhs> (16, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (16, 13): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mValidSequenceTests:[0m
[32mvalid - sequence tests: basicSeq2.wacc[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validSequenceTests.scala:18)[0m
[32mvalid - sequence tests: basicSeq.wacc[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validSequenceTests.scala:26)[0m
[32mvalid - sequence tests: boolAssignment.wacc[0m
>assignRhs> (8, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                          [34m^[0m
<assignRhs< (8, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>assignRhs> (8, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                          [34m^[0m
<assignRhs< (8, 18): alse[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtr
                            [34m^[0m
  >assignLhs> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtr
                           [34m^[0m
  <assignLhs< (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue [32mGood[0m
                           [34m^[0m
  >assignRhs> (9, 7): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue[32mâ†™[0me
                           [34m^[0m
  <assignRhs< (10, 1): true[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (10, 1): true[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - sequence tests: charAssignment.wacc[0m
>assignRhs> (8, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m
                          [34m^[0m
<assignRhs< (8, 16): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mc[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>assignRhs> (8, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m
                          [34m^[0m
<assignRhs< (8, 16): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mc[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'Z
                            [34m^[0m
  >assignLhs> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'Z
                           [34m^[0m
  <assignLhs< (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'Z'[32mâ†™[0m [32mGood[0m
                           [34m^[0m
  >assignRhs> (9, 7): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'Z'[32mâ†™[0men
                           [34m^[0m
  <assignRhs< (10, 1): [37mÂ·[0m'Z'[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (10, 1): [37mÂ·[0m'Z'[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - sequence tests: exitSimple.wacc[0m
>asgnEqParser> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m4
                             [34m^[0m
  >assignLhs> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m4
                            [34m^[0m
  <assignLhs< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m4 [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m4 [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m4
                             [34m^[0m
  >assignLhs> (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m4
                            [34m^[0m
  <assignLhs< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m4 [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0m4 [31mFail[0m
                             [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - sequence tests: intAssignment.wacc[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m20
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m20
                            [34m^[0m
  <assignLhs< (12, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m20[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
  >assignRhs> (12, 7): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m20[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (12, 10): =[37mÂ·[0m20[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                             [34m^[0m
<asgnEqParser< (12, 10): =[37mÂ·[0m20[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                              [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - sequence tests: intLeadingZeros.wacc[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m000000
                           [34m^[0m
<assignRhs< (11, 52): 0042[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m000000
                           [34m^[0m
<assignRhs< (11, 52): 0042[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m000000
                           [34m^[0m
<assignRhs< (12, 52): 0000[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - sequence tests: stringAssignment.wacc[0m
>assignRhs> (8, 14): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m"foo"[37mÂ·[0m
                          [34m^[0m
<assignRhs< (8, 20): foo"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ms[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>assignRhs> (8, 14): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m"foo"[37mÂ·[0m
                          [34m^[0m
<assignRhs< (8, 20): foo"[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ms[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m"b
                            [34m^[0m
  >assignLhs> (9, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m"b
                           [34m^[0m
  <assignLhs< (9, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m"bar [32mGood[0m
                           [34m^[0m
  >assignRhs> (9, 7): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m"bar"[32mâ†™[0m
                           [34m^[0m
  <assignRhs< (10, 1): bar"[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (10, 1): bar"[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mValidVariablesTests:[0m
[32mvalid - variables tests: boolDeclaration2.wacc[0m
>assignRhs> (8, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue[32mâ†™[0me
                          [34m^[0m
<assignRhs< (9, 1): true[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: boolDeclaration.wacc[0m
>assignRhs> (8, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mfalse[32mâ†™[0m
                          [34m^[0m
<assignRhs< (9, 1): alse[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: capCharDeclaration.wacc[0m
>assignRhs> (8, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'M'[32mâ†™[0men
                          [34m^[0m
<assignRhs< (9, 1): [37mÂ·[0m'M'[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: charDeclaration2.wacc[0m
>assignRhs> (8, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'z'[32mâ†™[0men
                          [34m^[0m
<assignRhs< (9, 1): [37mÂ·[0m'z'[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: charDeclaration.wacc[0m
>assignRhs> (8, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'a'[32mâ†™[0men
                          [34m^[0m
<assignRhs< (9, 1): [37mÂ·[0m'a'[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: emptyStringDeclaration.wacc[0m
>assignRhs> (8, 14): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m""[32mâ†™[0mend
                          [34m^[0m
<assignRhs< (9, 1): =[37mÂ·[0m""[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: intDeclaration.wacc[0m
>assignRhs> (8, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m42[32mâ†™[0mend
                          [34m^[0m
<assignRhs< (9, 1): =[37mÂ·[0m42[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: longVarNames.wacc[0m
>assignRhs> (11, 73): id[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 75): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 73): id[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 75): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mt
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mt
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mt [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0mt [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: manyVariables.wacc[0m
>assignRhs> (8, 10): x0[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0min
                          [34m^[0m
<assignRhs< (8, 12): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>assignRhs> (8, 10): x0[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0min
                          [34m^[0m
<assignRhs< (8, 12): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>assignRhs> (9, 10): x1[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0min
                          [34m^[0m
<assignRhs< (9, 12): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                          [34m^[0m
>assignRhs> (10, 10): x2[37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0min
                           [34m^[0m
<assignRhs< (10, 12): [37mÂ·[0m=[37mÂ·[0m2[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 10): x3[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0min
                           [34m^[0m
<assignRhs< (11, 12): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 10): x4[37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0min
                           [34m^[0m
<assignRhs< (12, 12): [37mÂ·[0m=[37mÂ·[0m4[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 10): x5[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0min
                           [34m^[0m
<assignRhs< (13, 12): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 10): x6[37mÂ·[0m=[37mÂ·[0m6[37mÂ·[0m;[32mâ†™[0min
                           [34m^[0m
<assignRhs< (14, 12): [37mÂ·[0m=[37mÂ·[0m6[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 10): x7[37mÂ·[0m=[37mÂ·[0m7[37mÂ·[0m;[32mâ†™[0min
                           [34m^[0m
<assignRhs< (15, 12): [37mÂ·[0m=[37mÂ·[0m7[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (16, 10): x8[37mÂ·[0m=[37mÂ·[0m8[37mÂ·[0m;[32mâ†™[0min
                           [34m^[0m
<assignRhs< (16, 12): [37mÂ·[0m=[37mÂ·[0m8[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (17, 10): x9[37mÂ·[0m=[37mÂ·[0m9[37mÂ·[0m;[32mâ†™[0min
                           [34m^[0m
<assignRhs< (17, 12): [37mÂ·[0m=[37mÂ·[0m9[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (18, 11): 10[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (18, 14): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (19, 11): 11[37mÂ·[0m=[37mÂ·[0m11[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (19, 14): =[37mÂ·[0m11[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (20, 11): 12[37mÂ·[0m=[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (20, 14): =[37mÂ·[0m12[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (21, 11): 13[37mÂ·[0m=[37mÂ·[0m13[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (21, 14): =[37mÂ·[0m13[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (22, 11): 14[37mÂ·[0m=[37mÂ·[0m14[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (22, 14): =[37mÂ·[0m14[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (23, 11): 15[37mÂ·[0m=[37mÂ·[0m15[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (23, 14): =[37mÂ·[0m15[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (24, 11): 16[37mÂ·[0m=[37mÂ·[0m16[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (24, 14): =[37mÂ·[0m16[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (25, 11): 17[37mÂ·[0m=[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (25, 14): =[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (26, 11): 18[37mÂ·[0m=[37mÂ·[0m18[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (26, 14): =[37mÂ·[0m18[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (27, 11): 19[37mÂ·[0m=[37mÂ·[0m19[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (27, 14): =[37mÂ·[0m19[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (28, 11): 20[37mÂ·[0m=[37mÂ·[0m20[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (28, 14): =[37mÂ·[0m20[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (29, 11): 21[37mÂ·[0m=[37mÂ·[0m21[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (29, 14): =[37mÂ·[0m21[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (30, 11): 22[37mÂ·[0m=[37mÂ·[0m22[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (30, 14): =[37mÂ·[0m22[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (31, 11): 23[37mÂ·[0m=[37mÂ·[0m23[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (31, 14): =[37mÂ·[0m23[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (32, 11): 24[37mÂ·[0m=[37mÂ·[0m24[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (32, 14): =[37mÂ·[0m24[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (33, 11): 25[37mÂ·[0m=[37mÂ·[0m25[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (33, 14): =[37mÂ·[0m25[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (34, 11): 26[37mÂ·[0m=[37mÂ·[0m26[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (34, 14): =[37mÂ·[0m26[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (35, 11): 27[37mÂ·[0m=[37mÂ·[0m27[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (35, 14): =[37mÂ·[0m27[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (36, 11): 28[37mÂ·[0m=[37mÂ·[0m28[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (36, 14): =[37mÂ·[0m28[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (37, 11): 29[37mÂ·[0m=[37mÂ·[0m29[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (37, 14): =[37mÂ·[0m29[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (38, 11): 30[37mÂ·[0m=[37mÂ·[0m30[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (38, 14): =[37mÂ·[0m30[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (39, 11): 31[37mÂ·[0m=[37mÂ·[0m31[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (39, 14): =[37mÂ·[0m31[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (40, 11): 32[37mÂ·[0m=[37mÂ·[0m32[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (40, 14): =[37mÂ·[0m32[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (41, 11): 33[37mÂ·[0m=[37mÂ·[0m33[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (41, 14): =[37mÂ·[0m33[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (42, 11): 34[37mÂ·[0m=[37mÂ·[0m34[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (42, 14): =[37mÂ·[0m34[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (43, 11): 35[37mÂ·[0m=[37mÂ·[0m35[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (43, 14): =[37mÂ·[0m35[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (44, 11): 36[37mÂ·[0m=[37mÂ·[0m36[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (44, 14): =[37mÂ·[0m36[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (45, 11): 37[37mÂ·[0m=[37mÂ·[0m37[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (45, 14): =[37mÂ·[0m37[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (46, 11): 38[37mÂ·[0m=[37mÂ·[0m38[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (46, 14): =[37mÂ·[0m38[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (47, 11): 39[37mÂ·[0m=[37mÂ·[0m39[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (47, 14): =[37mÂ·[0m39[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (48, 11): 40[37mÂ·[0m=[37mÂ·[0m40[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (48, 14): =[37mÂ·[0m40[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (49, 11): 41[37mÂ·[0m=[37mÂ·[0m41[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (49, 14): =[37mÂ·[0m41[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (50, 11): 42[37mÂ·[0m=[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (50, 14): =[37mÂ·[0m42[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (51, 11): 43[37mÂ·[0m=[37mÂ·[0m43[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (51, 14): =[37mÂ·[0m43[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (52, 11): 44[37mÂ·[0m=[37mÂ·[0m44[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (52, 14): =[37mÂ·[0m44[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (53, 11): 45[37mÂ·[0m=[37mÂ·[0m45[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (53, 14): =[37mÂ·[0m45[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (54, 11): 46[37mÂ·[0m=[37mÂ·[0m46[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (54, 14): =[37mÂ·[0m46[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (55, 11): 47[37mÂ·[0m=[37mÂ·[0m47[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (55, 14): =[37mÂ·[0m47[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (56, 11): 48[37mÂ·[0m=[37mÂ·[0m48[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (56, 14): =[37mÂ·[0m48[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (57, 11): 49[37mÂ·[0m=[37mÂ·[0m49[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (57, 14): =[37mÂ·[0m49[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (58, 11): 50[37mÂ·[0m=[37mÂ·[0m50[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (58, 14): =[37mÂ·[0m50[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (59, 11): 51[37mÂ·[0m=[37mÂ·[0m51[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (59, 14): =[37mÂ·[0m51[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (60, 11): 52[37mÂ·[0m=[37mÂ·[0m52[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (60, 14): =[37mÂ·[0m52[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (61, 11): 53[37mÂ·[0m=[37mÂ·[0m53[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (61, 14): =[37mÂ·[0m53[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (62, 11): 54[37mÂ·[0m=[37mÂ·[0m54[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (62, 14): =[37mÂ·[0m54[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (63, 11): 55[37mÂ·[0m=[37mÂ·[0m55[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (63, 14): =[37mÂ·[0m55[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (64, 11): 56[37mÂ·[0m=[37mÂ·[0m56[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (64, 14): =[37mÂ·[0m56[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (65, 11): 57[37mÂ·[0m=[37mÂ·[0m57[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (65, 14): =[37mÂ·[0m57[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (66, 11): 58[37mÂ·[0m=[37mÂ·[0m58[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (66, 14): =[37mÂ·[0m58[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (67, 11): 59[37mÂ·[0m=[37mÂ·[0m59[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (67, 14): =[37mÂ·[0m59[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (68, 11): 60[37mÂ·[0m=[37mÂ·[0m60[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (68, 14): =[37mÂ·[0m60[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (69, 11): 61[37mÂ·[0m=[37mÂ·[0m61[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (69, 14): =[37mÂ·[0m61[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (70, 11): 62[37mÂ·[0m=[37mÂ·[0m62[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (70, 14): =[37mÂ·[0m62[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (71, 11): 63[37mÂ·[0m=[37mÂ·[0m63[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (71, 14): =[37mÂ·[0m63[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (72, 11): 64[37mÂ·[0m=[37mÂ·[0m64[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (72, 14): =[37mÂ·[0m64[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (73, 11): 65[37mÂ·[0m=[37mÂ·[0m65[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (73, 14): =[37mÂ·[0m65[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (74, 11): 66[37mÂ·[0m=[37mÂ·[0m66[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (74, 14): =[37mÂ·[0m66[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (75, 11): 67[37mÂ·[0m=[37mÂ·[0m67[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (75, 14): =[37mÂ·[0m67[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (76, 11): 68[37mÂ·[0m=[37mÂ·[0m68[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (76, 14): =[37mÂ·[0m68[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (77, 11): 69[37mÂ·[0m=[37mÂ·[0m69[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (77, 14): =[37mÂ·[0m69[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (78, 11): 70[37mÂ·[0m=[37mÂ·[0m70[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (78, 14): =[37mÂ·[0m70[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (79, 11): 71[37mÂ·[0m=[37mÂ·[0m71[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (79, 14): =[37mÂ·[0m71[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (80, 11): 72[37mÂ·[0m=[37mÂ·[0m72[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (80, 14): =[37mÂ·[0m72[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (81, 11): 73[37mÂ·[0m=[37mÂ·[0m73[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (81, 14): =[37mÂ·[0m73[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (82, 11): 74[37mÂ·[0m=[37mÂ·[0m74[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (82, 14): =[37mÂ·[0m74[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (83, 11): 75[37mÂ·[0m=[37mÂ·[0m75[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (83, 14): =[37mÂ·[0m75[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (84, 11): 76[37mÂ·[0m=[37mÂ·[0m76[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (84, 14): =[37mÂ·[0m76[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (85, 11): 77[37mÂ·[0m=[37mÂ·[0m77[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (85, 14): =[37mÂ·[0m77[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (86, 11): 78[37mÂ·[0m=[37mÂ·[0m78[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (86, 14): =[37mÂ·[0m78[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (87, 11): 79[37mÂ·[0m=[37mÂ·[0m79[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (87, 14): =[37mÂ·[0m79[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (88, 11): 80[37mÂ·[0m=[37mÂ·[0m80[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (88, 14): =[37mÂ·[0m80[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (89, 11): 81[37mÂ·[0m=[37mÂ·[0m81[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (89, 14): =[37mÂ·[0m81[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (90, 11): 82[37mÂ·[0m=[37mÂ·[0m82[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (90, 14): =[37mÂ·[0m82[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (91, 11): 83[37mÂ·[0m=[37mÂ·[0m83[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (91, 14): =[37mÂ·[0m83[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (92, 11): 84[37mÂ·[0m=[37mÂ·[0m84[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (92, 14): =[37mÂ·[0m84[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (93, 11): 85[37mÂ·[0m=[37mÂ·[0m85[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (93, 14): =[37mÂ·[0m85[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (94, 11): 86[37mÂ·[0m=[37mÂ·[0m86[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (94, 14): =[37mÂ·[0m86[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (95, 11): 87[37mÂ·[0m=[37mÂ·[0m87[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (95, 14): =[37mÂ·[0m87[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (96, 11): 88[37mÂ·[0m=[37mÂ·[0m88[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (96, 14): =[37mÂ·[0m88[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (97, 11): 89[37mÂ·[0m=[37mÂ·[0m89[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (97, 14): =[37mÂ·[0m89[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (98, 11): 90[37mÂ·[0m=[37mÂ·[0m90[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (98, 14): =[37mÂ·[0m90[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (99, 11): 91[37mÂ·[0m=[37mÂ·[0m91[37mÂ·[0m;[32mâ†™[0mi
                           [34m^[0m
<assignRhs< (99, 14): =[37mÂ·[0m91[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                           [34m^[0m
>assignRhs> (100, 11): 92[37mÂ·[0m=[37mÂ·[0m92[37mÂ·[0m;[32mâ†™[0mi
                            [34m^[0m
<assignRhs< (100, 14): =[37mÂ·[0m92[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (101, 11): 93[37mÂ·[0m=[37mÂ·[0m93[37mÂ·[0m;[32mâ†™[0mi
                            [34m^[0m
<assignRhs< (101, 14): =[37mÂ·[0m93[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (102, 11): 94[37mÂ·[0m=[37mÂ·[0m94[37mÂ·[0m;[32mâ†™[0mi
                            [34m^[0m
<assignRhs< (102, 14): =[37mÂ·[0m94[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (103, 11): 95[37mÂ·[0m=[37mÂ·[0m95[37mÂ·[0m;[32mâ†™[0mi
                            [34m^[0m
<assignRhs< (103, 14): =[37mÂ·[0m95[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (104, 11): 96[37mÂ·[0m=[37mÂ·[0m96[37mÂ·[0m;[32mâ†™[0mi
                            [34m^[0m
<assignRhs< (104, 14): =[37mÂ·[0m96[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (105, 11): 97[37mÂ·[0m=[37mÂ·[0m97[37mÂ·[0m;[32mâ†™[0mi
                            [34m^[0m
<assignRhs< (105, 14): =[37mÂ·[0m97[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (106, 11): 98[37mÂ·[0m=[37mÂ·[0m98[37mÂ·[0m;[32mâ†™[0mi
                            [34m^[0m
<assignRhs< (106, 14): =[37mÂ·[0m98[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (107, 11): 99[37mÂ·[0m=[37mÂ·[0m99[37mÂ·[0m;[32mâ†™[0mi
                            [34m^[0m
<assignRhs< (107, 14): =[37mÂ·[0m99[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (108, 12): 00[37mÂ·[0m=[37mÂ·[0m100[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (108, 16): [37mÂ·[0m100[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (109, 12): 01[37mÂ·[0m=[37mÂ·[0m101[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (109, 16): [37mÂ·[0m101[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (110, 12): 02[37mÂ·[0m=[37mÂ·[0m102[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (110, 16): [37mÂ·[0m102[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (111, 12): 03[37mÂ·[0m=[37mÂ·[0m103[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (111, 16): [37mÂ·[0m103[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (112, 12): 04[37mÂ·[0m=[37mÂ·[0m104[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (112, 16): [37mÂ·[0m104[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (113, 12): 05[37mÂ·[0m=[37mÂ·[0m105[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (113, 16): [37mÂ·[0m105[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (114, 12): 06[37mÂ·[0m=[37mÂ·[0m106[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (114, 16): [37mÂ·[0m106[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (115, 12): 07[37mÂ·[0m=[37mÂ·[0m107[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (115, 16): [37mÂ·[0m107[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (116, 12): 08[37mÂ·[0m=[37mÂ·[0m108[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (116, 16): [37mÂ·[0m108[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (117, 12): 09[37mÂ·[0m=[37mÂ·[0m109[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (117, 16): [37mÂ·[0m109[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (118, 12): 10[37mÂ·[0m=[37mÂ·[0m110[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (118, 16): [37mÂ·[0m110[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (119, 12): 11[37mÂ·[0m=[37mÂ·[0m111[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (119, 16): [37mÂ·[0m111[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (120, 12): 12[37mÂ·[0m=[37mÂ·[0m112[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (120, 16): [37mÂ·[0m112[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (121, 12): 13[37mÂ·[0m=[37mÂ·[0m113[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (121, 16): [37mÂ·[0m113[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (122, 12): 14[37mÂ·[0m=[37mÂ·[0m114[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (122, 16): [37mÂ·[0m114[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (123, 12): 15[37mÂ·[0m=[37mÂ·[0m115[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (123, 16): [37mÂ·[0m115[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (124, 12): 16[37mÂ·[0m=[37mÂ·[0m116[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (124, 16): [37mÂ·[0m116[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (125, 12): 17[37mÂ·[0m=[37mÂ·[0m117[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (125, 16): [37mÂ·[0m117[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (126, 12): 18[37mÂ·[0m=[37mÂ·[0m118[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (126, 16): [37mÂ·[0m118[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (127, 12): 19[37mÂ·[0m=[37mÂ·[0m119[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (127, 16): [37mÂ·[0m119[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (128, 12): 20[37mÂ·[0m=[37mÂ·[0m120[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (128, 16): [37mÂ·[0m120[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (129, 12): 21[37mÂ·[0m=[37mÂ·[0m121[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (129, 16): [37mÂ·[0m121[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (130, 12): 22[37mÂ·[0m=[37mÂ·[0m122[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (130, 16): [37mÂ·[0m122[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (131, 12): 23[37mÂ·[0m=[37mÂ·[0m123[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (131, 16): [37mÂ·[0m123[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (132, 12): 24[37mÂ·[0m=[37mÂ·[0m124[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (132, 16): [37mÂ·[0m124[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (133, 12): 25[37mÂ·[0m=[37mÂ·[0m125[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (133, 16): [37mÂ·[0m125[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (134, 12): 26[37mÂ·[0m=[37mÂ·[0m126[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (134, 16): [37mÂ·[0m126[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (135, 12): 27[37mÂ·[0m=[37mÂ·[0m127[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (135, 16): [37mÂ·[0m127[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (136, 12): 28[37mÂ·[0m=[37mÂ·[0m128[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (136, 16): [37mÂ·[0m128[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (137, 12): 29[37mÂ·[0m=[37mÂ·[0m129[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (137, 16): [37mÂ·[0m129[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (138, 12): 30[37mÂ·[0m=[37mÂ·[0m130[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (138, 16): [37mÂ·[0m130[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (139, 12): 31[37mÂ·[0m=[37mÂ·[0m131[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (139, 16): [37mÂ·[0m131[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (140, 12): 32[37mÂ·[0m=[37mÂ·[0m132[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (140, 16): [37mÂ·[0m132[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (141, 12): 33[37mÂ·[0m=[37mÂ·[0m133[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (141, 16): [37mÂ·[0m133[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (142, 12): 34[37mÂ·[0m=[37mÂ·[0m134[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (142, 16): [37mÂ·[0m134[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (143, 12): 35[37mÂ·[0m=[37mÂ·[0m135[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (143, 16): [37mÂ·[0m135[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (144, 12): 36[37mÂ·[0m=[37mÂ·[0m136[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (144, 16): [37mÂ·[0m136[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (145, 12): 37[37mÂ·[0m=[37mÂ·[0m137[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (145, 16): [37mÂ·[0m137[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (146, 12): 38[37mÂ·[0m=[37mÂ·[0m138[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (146, 16): [37mÂ·[0m138[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (147, 12): 39[37mÂ·[0m=[37mÂ·[0m139[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (147, 16): [37mÂ·[0m139[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (148, 12): 40[37mÂ·[0m=[37mÂ·[0m140[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (148, 16): [37mÂ·[0m140[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (149, 12): 41[37mÂ·[0m=[37mÂ·[0m141[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (149, 16): [37mÂ·[0m141[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (150, 12): 42[37mÂ·[0m=[37mÂ·[0m142[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (150, 16): [37mÂ·[0m142[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (151, 12): 43[37mÂ·[0m=[37mÂ·[0m143[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (151, 16): [37mÂ·[0m143[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (152, 12): 44[37mÂ·[0m=[37mÂ·[0m144[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (152, 16): [37mÂ·[0m144[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (153, 12): 45[37mÂ·[0m=[37mÂ·[0m145[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (153, 16): [37mÂ·[0m145[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (154, 12): 46[37mÂ·[0m=[37mÂ·[0m146[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (154, 16): [37mÂ·[0m146[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (155, 12): 47[37mÂ·[0m=[37mÂ·[0m147[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (155, 16): [37mÂ·[0m147[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (156, 12): 48[37mÂ·[0m=[37mÂ·[0m148[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (156, 16): [37mÂ·[0m148[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (157, 12): 49[37mÂ·[0m=[37mÂ·[0m149[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (157, 16): [37mÂ·[0m149[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (158, 12): 50[37mÂ·[0m=[37mÂ·[0m150[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (158, 16): [37mÂ·[0m150[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (159, 12): 51[37mÂ·[0m=[37mÂ·[0m151[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (159, 16): [37mÂ·[0m151[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (160, 12): 52[37mÂ·[0m=[37mÂ·[0m152[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (160, 16): [37mÂ·[0m152[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (161, 12): 53[37mÂ·[0m=[37mÂ·[0m153[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (161, 16): [37mÂ·[0m153[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (162, 12): 54[37mÂ·[0m=[37mÂ·[0m154[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (162, 16): [37mÂ·[0m154[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (163, 12): 55[37mÂ·[0m=[37mÂ·[0m155[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (163, 16): [37mÂ·[0m155[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (164, 12): 56[37mÂ·[0m=[37mÂ·[0m156[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (164, 16): [37mÂ·[0m156[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (165, 12): 57[37mÂ·[0m=[37mÂ·[0m157[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (165, 16): [37mÂ·[0m157[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (166, 12): 58[37mÂ·[0m=[37mÂ·[0m158[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (166, 16): [37mÂ·[0m158[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (167, 12): 59[37mÂ·[0m=[37mÂ·[0m159[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (167, 16): [37mÂ·[0m159[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (168, 12): 60[37mÂ·[0m=[37mÂ·[0m160[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (168, 16): [37mÂ·[0m160[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (169, 12): 61[37mÂ·[0m=[37mÂ·[0m161[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (169, 16): [37mÂ·[0m161[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (170, 12): 62[37mÂ·[0m=[37mÂ·[0m162[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (170, 16): [37mÂ·[0m162[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (171, 12): 63[37mÂ·[0m=[37mÂ·[0m163[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (171, 16): [37mÂ·[0m163[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (172, 12): 64[37mÂ·[0m=[37mÂ·[0m164[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (172, 16): [37mÂ·[0m164[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (173, 12): 65[37mÂ·[0m=[37mÂ·[0m165[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (173, 16): [37mÂ·[0m165[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (174, 12): 66[37mÂ·[0m=[37mÂ·[0m166[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (174, 16): [37mÂ·[0m166[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (175, 12): 67[37mÂ·[0m=[37mÂ·[0m167[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (175, 16): [37mÂ·[0m167[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (176, 12): 68[37mÂ·[0m=[37mÂ·[0m168[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (176, 16): [37mÂ·[0m168[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (177, 12): 69[37mÂ·[0m=[37mÂ·[0m169[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (177, 16): [37mÂ·[0m169[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (178, 12): 70[37mÂ·[0m=[37mÂ·[0m170[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (178, 16): [37mÂ·[0m170[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (179, 12): 71[37mÂ·[0m=[37mÂ·[0m171[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (179, 16): [37mÂ·[0m171[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (180, 12): 72[37mÂ·[0m=[37mÂ·[0m172[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (180, 16): [37mÂ·[0m172[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (181, 12): 73[37mÂ·[0m=[37mÂ·[0m173[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (181, 16): [37mÂ·[0m173[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (182, 12): 74[37mÂ·[0m=[37mÂ·[0m174[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (182, 16): [37mÂ·[0m174[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (183, 12): 75[37mÂ·[0m=[37mÂ·[0m175[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (183, 16): [37mÂ·[0m175[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (184, 12): 76[37mÂ·[0m=[37mÂ·[0m176[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (184, 16): [37mÂ·[0m176[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (185, 12): 77[37mÂ·[0m=[37mÂ·[0m177[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (185, 16): [37mÂ·[0m177[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (186, 12): 78[37mÂ·[0m=[37mÂ·[0m178[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (186, 16): [37mÂ·[0m178[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (187, 12): 79[37mÂ·[0m=[37mÂ·[0m179[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (187, 16): [37mÂ·[0m179[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (188, 12): 80[37mÂ·[0m=[37mÂ·[0m180[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (188, 16): [37mÂ·[0m180[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (189, 12): 81[37mÂ·[0m=[37mÂ·[0m181[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (189, 16): [37mÂ·[0m181[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (190, 12): 82[37mÂ·[0m=[37mÂ·[0m182[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (190, 16): [37mÂ·[0m182[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (191, 12): 83[37mÂ·[0m=[37mÂ·[0m183[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (191, 16): [37mÂ·[0m183[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (192, 12): 84[37mÂ·[0m=[37mÂ·[0m184[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (192, 16): [37mÂ·[0m184[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (193, 12): 85[37mÂ·[0m=[37mÂ·[0m185[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (193, 16): [37mÂ·[0m185[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (194, 12): 86[37mÂ·[0m=[37mÂ·[0m186[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (194, 16): [37mÂ·[0m186[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (195, 12): 87[37mÂ·[0m=[37mÂ·[0m187[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (195, 16): [37mÂ·[0m187[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (196, 12): 88[37mÂ·[0m=[37mÂ·[0m188[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (196, 16): [37mÂ·[0m188[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (197, 12): 89[37mÂ·[0m=[37mÂ·[0m189[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (197, 16): [37mÂ·[0m189[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (198, 12): 90[37mÂ·[0m=[37mÂ·[0m190[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (198, 16): [37mÂ·[0m190[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (199, 12): 91[37mÂ·[0m=[37mÂ·[0m191[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (199, 16): [37mÂ·[0m191[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (200, 12): 92[37mÂ·[0m=[37mÂ·[0m192[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (200, 16): [37mÂ·[0m192[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (201, 12): 93[37mÂ·[0m=[37mÂ·[0m193[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (201, 16): [37mÂ·[0m193[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (202, 12): 94[37mÂ·[0m=[37mÂ·[0m194[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (202, 16): [37mÂ·[0m194[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (203, 12): 95[37mÂ·[0m=[37mÂ·[0m195[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (203, 16): [37mÂ·[0m195[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (204, 12): 96[37mÂ·[0m=[37mÂ·[0m196[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (204, 16): [37mÂ·[0m196[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (205, 12): 97[37mÂ·[0m=[37mÂ·[0m197[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (205, 16): [37mÂ·[0m197[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (206, 12): 98[37mÂ·[0m=[37mÂ·[0m198[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (206, 16): [37mÂ·[0m198[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (207, 12): 99[37mÂ·[0m=[37mÂ·[0m199[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (207, 16): [37mÂ·[0m199[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (208, 12): 00[37mÂ·[0m=[37mÂ·[0m200[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (208, 16): [37mÂ·[0m200[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (209, 12): 01[37mÂ·[0m=[37mÂ·[0m201[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (209, 16): [37mÂ·[0m201[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (210, 12): 02[37mÂ·[0m=[37mÂ·[0m202[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (210, 16): [37mÂ·[0m202[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (211, 12): 03[37mÂ·[0m=[37mÂ·[0m203[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (211, 16): [37mÂ·[0m203[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (212, 12): 04[37mÂ·[0m=[37mÂ·[0m204[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (212, 16): [37mÂ·[0m204[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (213, 12): 05[37mÂ·[0m=[37mÂ·[0m205[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (213, 16): [37mÂ·[0m205[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (214, 12): 06[37mÂ·[0m=[37mÂ·[0m206[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (214, 16): [37mÂ·[0m206[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (215, 12): 07[37mÂ·[0m=[37mÂ·[0m207[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (215, 16): [37mÂ·[0m207[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (216, 12): 08[37mÂ·[0m=[37mÂ·[0m208[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (216, 16): [37mÂ·[0m208[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (217, 12): 09[37mÂ·[0m=[37mÂ·[0m209[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (217, 16): [37mÂ·[0m209[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (218, 12): 10[37mÂ·[0m=[37mÂ·[0m210[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (218, 16): [37mÂ·[0m210[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (219, 12): 11[37mÂ·[0m=[37mÂ·[0m211[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (219, 16): [37mÂ·[0m211[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (220, 12): 12[37mÂ·[0m=[37mÂ·[0m212[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (220, 16): [37mÂ·[0m212[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (221, 12): 13[37mÂ·[0m=[37mÂ·[0m213[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (221, 16): [37mÂ·[0m213[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (222, 12): 14[37mÂ·[0m=[37mÂ·[0m214[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (222, 16): [37mÂ·[0m214[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (223, 12): 15[37mÂ·[0m=[37mÂ·[0m215[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (223, 16): [37mÂ·[0m215[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (224, 12): 16[37mÂ·[0m=[37mÂ·[0m216[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (224, 16): [37mÂ·[0m216[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (225, 12): 17[37mÂ·[0m=[37mÂ·[0m217[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (225, 16): [37mÂ·[0m217[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (226, 12): 18[37mÂ·[0m=[37mÂ·[0m218[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (226, 16): [37mÂ·[0m218[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (227, 12): 19[37mÂ·[0m=[37mÂ·[0m219[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (227, 16): [37mÂ·[0m219[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (228, 12): 20[37mÂ·[0m=[37mÂ·[0m220[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (228, 16): [37mÂ·[0m220[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (229, 12): 21[37mÂ·[0m=[37mÂ·[0m221[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (229, 16): [37mÂ·[0m221[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (230, 12): 22[37mÂ·[0m=[37mÂ·[0m222[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (230, 16): [37mÂ·[0m222[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (231, 12): 23[37mÂ·[0m=[37mÂ·[0m223[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (231, 16): [37mÂ·[0m223[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (232, 12): 24[37mÂ·[0m=[37mÂ·[0m224[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (232, 16): [37mÂ·[0m224[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (233, 12): 25[37mÂ·[0m=[37mÂ·[0m225[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (233, 16): [37mÂ·[0m225[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (234, 12): 26[37mÂ·[0m=[37mÂ·[0m226[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (234, 16): [37mÂ·[0m226[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (235, 12): 27[37mÂ·[0m=[37mÂ·[0m227[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (235, 16): [37mÂ·[0m227[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (236, 12): 28[37mÂ·[0m=[37mÂ·[0m228[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (236, 16): [37mÂ·[0m228[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (237, 12): 29[37mÂ·[0m=[37mÂ·[0m229[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (237, 16): [37mÂ·[0m229[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (238, 12): 30[37mÂ·[0m=[37mÂ·[0m230[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (238, 16): [37mÂ·[0m230[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (239, 12): 31[37mÂ·[0m=[37mÂ·[0m231[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (239, 16): [37mÂ·[0m231[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (240, 12): 32[37mÂ·[0m=[37mÂ·[0m232[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (240, 16): [37mÂ·[0m232[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (241, 12): 33[37mÂ·[0m=[37mÂ·[0m233[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (241, 16): [37mÂ·[0m233[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (242, 12): 34[37mÂ·[0m=[37mÂ·[0m234[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (242, 16): [37mÂ·[0m234[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (243, 12): 35[37mÂ·[0m=[37mÂ·[0m235[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (243, 16): [37mÂ·[0m235[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (244, 12): 36[37mÂ·[0m=[37mÂ·[0m236[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (244, 16): [37mÂ·[0m236[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (245, 12): 37[37mÂ·[0m=[37mÂ·[0m237[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (245, 16): [37mÂ·[0m237[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (246, 12): 38[37mÂ·[0m=[37mÂ·[0m238[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (246, 16): [37mÂ·[0m238[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (247, 12): 39[37mÂ·[0m=[37mÂ·[0m239[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (247, 16): [37mÂ·[0m239[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (248, 12): 40[37mÂ·[0m=[37mÂ·[0m240[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (248, 16): [37mÂ·[0m240[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (249, 12): 41[37mÂ·[0m=[37mÂ·[0m241[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (249, 16): [37mÂ·[0m241[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (250, 12): 42[37mÂ·[0m=[37mÂ·[0m242[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (250, 16): [37mÂ·[0m242[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (251, 12): 43[37mÂ·[0m=[37mÂ·[0m243[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (251, 16): [37mÂ·[0m243[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (252, 12): 44[37mÂ·[0m=[37mÂ·[0m244[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (252, 16): [37mÂ·[0m244[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (253, 12): 45[37mÂ·[0m=[37mÂ·[0m245[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (253, 16): [37mÂ·[0m245[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (254, 12): 46[37mÂ·[0m=[37mÂ·[0m246[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (254, 16): [37mÂ·[0m246[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (255, 12): 47[37mÂ·[0m=[37mÂ·[0m247[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (255, 16): [37mÂ·[0m247[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (256, 12): 48[37mÂ·[0m=[37mÂ·[0m248[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (256, 16): [37mÂ·[0m248[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (257, 12): 49[37mÂ·[0m=[37mÂ·[0m249[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (257, 16): [37mÂ·[0m249[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (258, 12): 50[37mÂ·[0m=[37mÂ·[0m250[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (258, 16): [37mÂ·[0m250[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (259, 12): 51[37mÂ·[0m=[37mÂ·[0m251[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (259, 16): [37mÂ·[0m251[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (260, 12): 52[37mÂ·[0m=[37mÂ·[0m252[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (260, 16): [37mÂ·[0m252[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (261, 12): 53[37mÂ·[0m=[37mÂ·[0m253[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (261, 16): [37mÂ·[0m253[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (262, 12): 54[37mÂ·[0m=[37mÂ·[0m254[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (262, 16): [37mÂ·[0m254[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (263, 12): 55[37mÂ·[0m=[37mÂ·[0m255[37mÂ·[0m;[32mâ†™[0m
                            [34m^[0m
<assignRhs< (263, 16): [37mÂ·[0m255[37mÂ·[0m;[32mâ†™[0mint[37mÂ·[0m [32mGood[0m
                            [34m^[0m
>assignRhs> (264, 12): 56[37mÂ·[0m=[37mÂ·[0m256[32mâ†™[0men
                            [34m^[0m
<assignRhs< (265, 1): [37mÂ·[0m256[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                           [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: negIntDeclaration.wacc[0m
>assignRhs> (8, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m-1[32mâ†™[0mend
                          [34m^[0m
<assignRhs< (9, 1): =[37mÂ·[0m-1[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: puncCharDeclaration.wacc[0m
>assignRhs> (8, 12): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'!'[32mâ†™[0men
                          [34m^[0m
<assignRhs< (9, 1): [37mÂ·[0m'!'[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: stringCarriageReturn.wacc[0m
>assignRhs> (8, 14): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m"Hello
                          [34m^[0m
<assignRhs< (9, 1): !\n"[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: stringDeclaration.wacc[0m
>assignRhs> (8, 14): [37mÂ·[0ms[37mÂ·[0m=[37mÂ·[0m"Hello
                          [34m^[0m
<assignRhs< (9, 1): ld!"[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: _VarNames.wacc[0m
>assignRhs> (11, 23): re[37mÂ·[0m=[37mÂ·[0m19[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 26): =[37mÂ·[0m19[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 23): re[37mÂ·[0m=[37mÂ·[0m19[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 26): =[37mÂ·[0m19[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mex [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0ma
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0ma
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0ma [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mexit[37mÂ·[0ma [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - variables tests: zeroIntDeclaration.wacc[0m
>assignRhs> (8, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (9, 1): [37mÂ·[0m=[37mÂ·[0m0[32mâ†™[0mend[32mâ†™[0m[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mValidWhileTests:[0m
[32mvalid - while tests: fibonacciFullIt.wacc[0m
>asgnEqParser> (14, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (14, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (14, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (16, 11): [37mÂ·[0mn[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mr
                           [34m^[0m
<assignRhs< (16, 12): n[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mre [32mGood[0m
                           [34m^[0m
>asgnEqParser> (17, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mn
                             [34m^[0m
  >assignLhs> (17, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mn
                            [34m^[0m
  <assignLhs< (17, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mn [31mFail[0m
                             [34m^[0m
>assignLhs> (17, 8): read[37mÂ·[0mn[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                          [34m^[0m
<assignLhs< (17, 10): ad[37mÂ·[0mn[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>assignRhs> (21, 12): f0[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (21, 14): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (22, 12): f1[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (22, 14): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (23, 14): ve[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mw
                           [34m^[0m
<assignRhs< (23, 15): e[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                           [34m^[0m
>asgnEqParser> (24, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (24, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (24, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (24, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0msave[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0msave[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (25, 10): save[37mÂ·[0m=[37mÂ·[0mf0[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
  >assignRhs> (25, 12): ve[37mÂ·[0m=[37mÂ·[0mf0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                             [34m^[0m
  <assignRhs< (25, 15): =[37mÂ·[0mf0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (25, 15): =[37mÂ·[0mf0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0msave[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0msave[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (25, 10): save[37mÂ·[0m=[37mÂ·[0mf0[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
  >assignRhs> (25, 12): ve[37mÂ·[0m=[37mÂ·[0mf0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                             [34m^[0m
  <assignRhs< (25, 15): =[37mÂ·[0mf0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (25, 15): =[37mÂ·[0mf0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mf0[37mÂ·[0m=[37mÂ·[0mf
                             [34m^[0m
  >assignLhs> (26, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mf0[37mÂ·[0m=[37mÂ·[0mf
                            [34m^[0m
  <assignLhs< (26, 8): [37mÂ·[0m[37mÂ·[0mf0[37mÂ·[0m=[37mÂ·[0mf1[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
  >assignRhs> (26, 10): f0[37mÂ·[0m=[37mÂ·[0mf1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                             [34m^[0m
  <assignRhs< (26, 13): =[37mÂ·[0mf1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (26, 13): =[37mÂ·[0mf1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (27, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mf1[37mÂ·[0m=[37mÂ·[0ms
                             [34m^[0m
  >assignLhs> (27, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mf1[37mÂ·[0m=[37mÂ·[0ms
                            [34m^[0m
  <assignLhs< (27, 8): [37mÂ·[0m[37mÂ·[0mf1[37mÂ·[0m=[37mÂ·[0msave [32mGood[0m
                            [34m^[0m
  >assignRhs> (27, 10): f1[37mÂ·[0m=[37mÂ·[0msave[37mÂ·[0m+
                             [34m^[0m
  <assignRhs< (27, 20): +[37mÂ·[0mf1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (27, 20): +[37mÂ·[0mf1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (28, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mn[37mÂ·[0m=[37mÂ·[0mn[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (28, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mn[37mÂ·[0m=[37mÂ·[0mn[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (28, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mn[37mÂ·[0m=[37mÂ·[0mn[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (28, 9): [37mÂ·[0mn[37mÂ·[0m=[37mÂ·[0mn[37mÂ·[0m-[37mÂ·[0m1[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (29, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (29, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (30, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - while tests: fibonacciIterative.wacc[0m
>assignRhs> (11, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 12): f0[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 14): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 12): f1[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 14): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 14): ve[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mp
                           [34m^[0m
<assignRhs< (14, 15): e[37mÂ·[0m=[37mÂ·[0m0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (15, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): 0;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0msave[37mÂ·[0m=
                             [34m^[0m
  >assignLhs> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0msave[37mÂ·[0m=
                            [34m^[0m
  <assignLhs< (19, 10): save[37mÂ·[0m=[37mÂ·[0mf0[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
  >assignRhs> (19, 12): ve[37mÂ·[0m=[37mÂ·[0mf0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                             [34m^[0m
  <assignRhs< (19, 15): =[37mÂ·[0mf0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (19, 15): =[37mÂ·[0mf0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mf0[37mÂ·[0m=[37mÂ·[0mf
                             [34m^[0m
  >assignLhs> (20, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mf0[37mÂ·[0m=[37mÂ·[0mf
                            [34m^[0m
  <assignLhs< (20, 8): [37mÂ·[0m[37mÂ·[0mf0[37mÂ·[0m=[37mÂ·[0mf1[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
  >assignRhs> (20, 10): f0[37mÂ·[0m=[37mÂ·[0mf1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                             [34m^[0m
  <assignRhs< (20, 13): =[37mÂ·[0mf1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (20, 13): =[37mÂ·[0mf1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mf1[37mÂ·[0m=[37mÂ·[0ms
                             [34m^[0m
  >assignLhs> (21, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mf1[37mÂ·[0m=[37mÂ·[0ms
                            [34m^[0m
  <assignLhs< (21, 8): [37mÂ·[0m[37mÂ·[0mf1[37mÂ·[0m=[37mÂ·[0msave [32mGood[0m
                            [34m^[0m
  >assignRhs> (21, 10): f1[37mÂ·[0m=[37mÂ·[0msave[37mÂ·[0m+
                             [34m^[0m
  <assignRhs< (21, 20): +[37mÂ·[0mf1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (21, 20): +[37mÂ·[0mf1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (22, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (22, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (22, 9): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (23, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (23, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (24, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (24, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (24, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (24, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - while tests: loopCharCondition.wacc[0m
>assignRhs> (11, 14): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'\0'[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (11, 19): '\0'[37mÂ·[0m;[32mâ†™[0m	whi [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 14): [37mÂ·[0mc[37mÂ·[0m=[37mÂ·[0m'\0'[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (11, 19): '\0'[37mÂ·[0m;[32mâ†™[0m	whi [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 5): '[37mÂ·[0m;[32mâ†™[0m	while[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 5): '[37mÂ·[0m;[32mâ†™[0m	while[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 5): '[37mÂ·[0m;[32mâ†™[0m	while[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): '[37mÂ·[0m;[32mâ†™[0m	while[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 9): do[32mâ†™[0m		c[37mÂ·[0m=[37mÂ·[0m'a
                             [34m^[0m
  >assignLhs> (13, 9): do[32mâ†™[0m		c[37mÂ·[0m=[37mÂ·[0m'a
                            [34m^[0m
  <assignLhs< (13, 11): [32mâ†™[0m		c[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (13, 13): 	c[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m
                             [34m^[0m
  <assignRhs< (13, 17): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m		pr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 17): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m		pr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (13, 9): do[32mâ†™[0m		c[37mÂ·[0m=[37mÂ·[0m'a
                             [34m^[0m
  >assignLhs> (13, 9): do[32mâ†™[0m		c[37mÂ·[0m=[37mÂ·[0m'a
                            [34m^[0m
  <assignLhs< (13, 11): [32mâ†™[0m		c[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (13, 13): 	c[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m
                             [34m^[0m
  <assignRhs< (13, 17): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m		pr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 17): [37mÂ·[0m'a'[37mÂ·[0m;[32mâ†™[0m		pr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (14, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (14, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (14, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 5): e[37mÂ·[0m;[32mâ†™[0m	printl
                             [34m^[0m
  >assignLhs> (16, 5): e[37mÂ·[0m;[32mâ†™[0m	printl
                            [34m^[0m
  <assignLhs< (16, 5): e[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): e[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - while tests: loopIntCondition.wacc[0m
>assignRhs> (11, 13): [37mÂ·[0mn[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m	w
                           [34m^[0m
<assignRhs< (11, 15): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m	whi [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 13): [37mÂ·[0mn[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m	w
                           [34m^[0m
<assignRhs< (11, 15): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m	whi [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 5): 0[37mÂ·[0m;[32mâ†™[0m	while[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 5): 0[37mÂ·[0m;[32mâ†™[0m	while[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 5): 0[37mÂ·[0m;[32mâ†™[0m	while[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 5): 0[37mÂ·[0m;[32mâ†™[0m	while[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 9): do[32mâ†™[0m		n[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 9): do[32mâ†™[0m		n[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 11): [32mâ†™[0m		n[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (13, 13): 	n[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m		
                             [34m^[0m
  <assignRhs< (13, 15): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m		pr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 15): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m		pr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (13, 9): do[32mâ†™[0m		n[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 9): do[32mâ†™[0m		n[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 11): [32mâ†™[0m		n[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m [32mGood[0m
                             [34m^[0m
  >assignRhs> (13, 13): 	n[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m		
                             [34m^[0m
  <assignRhs< (13, 15): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m		pr [32mGood[0m
                             [34m^[0m
<asgnEqParser< (13, 15): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m		pr [32mGood[0m
                              [34m^[0m
>asgnEqParser> (14, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                             [34m^[0m
  >assignLhs> (14, 9): [37mÂ·[0m;[32mâ†™[0m		printl
                            [34m^[0m
  <assignLhs< (14, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 9): [37mÂ·[0m;[32mâ†™[0m		printl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 5): e[37mÂ·[0m;[32mâ†™[0m	printl
                             [34m^[0m
  >assignLhs> (16, 5): e[37mÂ·[0m;[32mâ†™[0m	printl
                            [34m^[0m
  <assignLhs< (16, 5): e[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 5): e[37mÂ·[0m;[32mâ†™[0m	printl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - while tests: max.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (14, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (14, 15): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (14, 15): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (14, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (14, 15): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (14, 15): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 9): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (15, 15): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (15, 15): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (16, 9): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (17, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): ";[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - while tests: min.wacc[0m
>assignRhs> (10, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (10, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (10, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (11, 14): =[37mÂ·[0m10[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 14): =[37mÂ·[0m17[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                           [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (14, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (14, 15): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (14, 15): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (14, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (14, 15): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (14, 15): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (15, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (15, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (15, 9): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (15, 15): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (15, 15): [37mÂ·[0m-[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (16, 9): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (17, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - while tests: rmStyleAddIO.wacc[0m
>assignRhs> (14, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (14, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (14, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (15, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (15, 13): [37mÂ·[0m=[37mÂ·[0m0[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx
                             [34m^[0m
  >assignLhs> (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx
                            [34m^[0m
  <assignLhs< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                             [34m^[0m
>assignLhs> (17, 8): read[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                          [34m^[0m
<assignLhs< (17, 10): ad[37mÂ·[0mx[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (18, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0my
                             [34m^[0m
  >assignLhs> (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0my
                            [34m^[0m
  <assignLhs< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0my [31mFail[0m
                            [34m^[0m
<asgnEqParser< (19, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mread[37mÂ·[0my [31mFail[0m
                             [34m^[0m
>assignLhs> (19, 8): read[37mÂ·[0my[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                          [34m^[0m
<assignLhs< (19, 10): ad[37mÂ·[0my[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (20, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (24, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (24, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (24, 15): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (24, 15): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (25, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (25, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (25, 9): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m-[37mÂ·[0m1[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (26, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (26, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (27, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (28, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (28, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (28, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (28, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (29, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (29, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (29, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (29, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - while tests: rmStyleAdd.wacc[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (12, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (12, 13): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0min [32mGood[0m
                           [34m^[0m
>assignRhs> (13, 11): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0m7[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (13, 13): [37mÂ·[0m=[37mÂ·[0m7[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (14, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (15, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (17, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (18, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (18, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (18, 9): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mx[37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (18, 15): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                             [34m^[0m
<asgnEqParser< (18, 15): [37mÂ·[0m+[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m [32mGood[0m
                              [34m^[0m
>asgnEqParser> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (19, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (19, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m-[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (19, 9): [37mÂ·[0my[37mÂ·[0m=[37mÂ·[0my[37mÂ·[0m-[37mÂ·[0m1[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (20, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (20, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - while tests: whileBasic.wacc[0m
>asgnEqParser> (8, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  >assignLhs> (8, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                           [34m^[0m
  <assignLhs< (8, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                           [34m^[0m
<asgnEqParser< (8, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
Type checking not implemented for Skip()
failed
Exit Code: 200
[31m- should return exit code 0 *** FAILED ***[0m
[31m  200 was not equal to 0 (validWhileTests.scala:82)[0m
[32mvalid - while tests: whileBoolFlip.wacc[0m
>assignRhs> (11, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (11, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                           [34m^[0m
>assignRhs> (11, 12): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m;
                           [34m^[0m
<assignRhs< (11, 17): true[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwh [32mGood[0m
                           [34m^[0m
>asgnEqParser> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (12, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m!b
                             [34m^[0m
  >assignLhs> (14, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m!b
                            [34m^[0m
  <assignLhs< (14, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m!b[32mâ†™[0m[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (14, 9): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m!b[32mâ†™[0m[37mÂ·[0m[37mÂ·[0md
                            [34m^[0m
  <assignRhs< (15, 3): !b[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                            [34m^[0m
<asgnEqParser< (15, 3): !b[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[37mÂ·[0m; [32mGood[0m
                             [34m^[0m
>asgnEqParser> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (16, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - while tests: whileCount.wacc[0m
>assignRhs> (20, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (20, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>assignRhs> (20, 11): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0m
                           [34m^[0m
<assignRhs< (20, 13): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mpr [32mGood[0m
                           [34m^[0m
>asgnEqParser> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (21, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (22, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (23, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (24, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (24, 7): [37mÂ·[0m[37mÂ·[0m[37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                            [34m^[0m
  >assignRhs> (24, 9): [37mÂ·[0mi[37mÂ·[0m=[37mÂ·[0mi[37mÂ·[0m+[37mÂ·[0m1[32mâ†™[0m
                            [34m^[0m
  <assignRhs< (25, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[32mâ†™[0me [32mGood[0m
                            [34m^[0m
<asgnEqParser< (25, 3): [37mÂ·[0m1[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mdone[32mâ†™[0me [32mGood[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mvalid - while tests: whileFalse.wacc[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                             [34m^[0m
  >assignLhs> (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  <assignLhs< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
<asgnEqParser< (10, 3): in[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                             [34m^[0m
>asgnEqParser> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (11, 5): [32mâ†™[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
>asgnEqParser> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                             [34m^[0m
  >assignLhs> (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl
                            [34m^[0m
  <assignLhs< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
<asgnEqParser< (13, 3): [37mÂ·[0m;[32mâ†™[0m[37mÂ·[0m[37mÂ·[0mprintl [31mFail[0m
                             [34m^[0m
exit code: 0
Exit Code: 0
[32m- should return exit code 0[0m
[32mparseAtoms:[0m
[32mthe parser[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m123[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m
                          [34m^[0m
<assignRhs< (2, 2): 23[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse unsigned int literals[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m+123[37mÂ·[0m[32mâ†™[0m
                          [34m^[0m
<assignRhs< (2, 2): 23[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse signed positive int literals[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m-123[37mÂ·[0m[32mâ†™[0m
                          [34m^[0m
<assignRhs< (2, 2): 23[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse signed negative int literals[0m
[33m- should reject doubly signed int literals !!! IGNORED !!![0m
>assignRhs> (1, 20): ut[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0m[32mâ†™[0m
                          [34m^[0m
<assignRhs< (2, 2): ue[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse true bool literals[0m
>assignRhs> (1, 20): ut[37mÂ·[0m=[37mÂ·[0mfalse[37mÂ·[0m
                          [34m^[0m
<assignRhs< (2, 2): se[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse false bool literals[0m
>assignRhs> (1, 20): ut[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0m[32mâ†™[0m[37mÂ·[0m
                          [34m^[0m
<assignRhs< (2, 2): a'[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse char literals[0m
[33m- should parse escaped char literals !!! IGNORED !!![0m
[33m- should reject invalid escaped char literals !!! IGNORED !!![0m
[33m- should reject invalid char literals !!! IGNORED !!![0m
>assignRhs> (1, 22): ut[37mÂ·[0m=[37mÂ·[0m""[37mÂ·[0m[32mâ†™[0m[37mÂ·[0me
                          [34m^[0m
<assignRhs< (2, 2): ""[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse empty string literals[0m
>assignRhs> (1, 22): ut[37mÂ·[0m=[37mÂ·[0m"hello
                          [34m^[0m
<assignRhs< (2, 2): o"[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 22): ut[37mÂ·[0m=[37mÂ·[0m"hello
                          [34m^[0m
<assignRhs< (2, 2): d"[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse string literals[0m
[33m- should parse escaped string literals !!! IGNORED !!![0m
[33m- should reject invalid string literals !!! IGNORED !!![0m
[33m- should reject invalid escaped string literals !!! IGNORED !!![0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0mnull[37mÂ·[0m[32mâ†™[0m
                          [34m^[0m
<assignRhs< (2, 2): ll[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse null literals[0m
>assignRhs> (1, 19): lo[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m[32mâ†™[0m[37mÂ·[0men
                          [34m^[0m
<assignRhs< (2, 2): [37mÂ·[0m1[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse identifiers[0m
>assignRhs> (1, 25): ld[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m[32mâ†™[0m[37mÂ·[0men
                          [34m^[0m
<assignRhs< (2, 2): [37mÂ·[0m1[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse identifiers with underscores[0m
>assignRhs> (1, 20): lo[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m[32mâ†™[0m[37mÂ·[0men
                          [34m^[0m
<assignRhs< (2, 2): [37mÂ·[0m1[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse identifiers starting with underscores[0m
>assignRhs> (1, 22): 23[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m[32mâ†™[0m[37mÂ·[0men
                          [34m^[0m
<assignRhs< (2, 2): [37mÂ·[0m1[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse identifiers with numbers[0m
[32m- should reject identifiers starting with numbers[0m
>assignRhs> (1, 28): 23[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m[32mâ†™[0m[37mÂ·[0men
                          [34m^[0m
<assignRhs< (2, 2): [37mÂ·[0m1[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse identifiers with underscores and numbers[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m#[37mÂ·[0mTh
                          [34m^[0m
<assignRhs< (2, 2): ent[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m##[37mÂ·[0mT
                          [34m^[0m
<assignRhs< (2, 2): ent[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should ignore comments[0m
>assignRhs> (1, 42): t[37mÂ·[0mend[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (1, 42): t[37mÂ·[0mend[31mâ€¢[0m [31mFail[0m
                          [34m^[0m
>assignRhs> (1, 42): t[37mÂ·[0mend[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (1, 42): t[37mÂ·[0mend[31mâ€¢[0m [31mFail[0m
                          [34m^[0m
[32m- should reject comments without EOL[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m(123)[37mÂ·[0m
                          [34m^[0m
<assignRhs< (2, 2): 3)[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 20): ut[37mÂ·[0m=[37mÂ·[0m(true)
                          [34m^[0m
<assignRhs< (2, 2): e)[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 20): ut[37mÂ·[0m=[37mÂ·[0m('a')[37mÂ·[0m
                          [34m^[0m
<assignRhs< (2, 2): ')[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 22): ut[37mÂ·[0m=[37mÂ·[0m("")[37mÂ·[0m[32mâ†™[0m
                          [34m^[0m
<assignRhs< (2, 2): ")[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m(null)
                          [34m^[0m
<assignRhs< (2, 2): l)[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m(hello
                          [34m^[0m
<assignRhs< (2, 2): o)[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse brackets[0m
[32m- should reject brackets around identifiers[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m((123)
                          [34m^[0m
<assignRhs< (2, 2): ))[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 20): ut[37mÂ·[0m=[37mÂ·[0m((true
                          [34m^[0m
<assignRhs< (2, 2): ))[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 20): ut[37mÂ·[0m=[37mÂ·[0m(('a')
                          [34m^[0m
<assignRhs< (2, 2): ))[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 22): ut[37mÂ·[0m=[37mÂ·[0m((""))
                          [34m^[0m
<assignRhs< (2, 2): ))[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m((null
                          [34m^[0m
<assignRhs< (2, 2): ))[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m((hell
                          [34m^[0m
<assignRhs< (2, 2): ))[37mÂ·[0m[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should parse double brackets[0m
[32mparseExprs:[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m!
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m!
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m! [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m! [31mFail[0m
                            [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m!
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m!
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m! [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m! [31mFail[0m
                            [34m^[0m
[32m- should parse negations[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m!
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m!
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m! [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m! [31mFail[0m
                            [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m!
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m!
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m! [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m! [31mFail[0m
                            [34m^[0m
[32m- should parse negations with brackets[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m-
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m-
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m- [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m- [31mFail[0m
                            [34m^[0m
[32m- should parse dashes[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ml
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ml
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ml [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ml [31mFail[0m
                            [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ml
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ml
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ml [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ml [31mFail[0m
                            [34m^[0m
[32m- should parse len[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mo
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mo
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mo [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mo [31mFail[0m
                            [34m^[0m
[32m- should parse ord[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mc
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mc
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mc [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mc [31mFail[0m
                            [34m^[0m
[32m- should parse chr[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
[32m- should parse multiplication[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
[32m- should parse division[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
[32m- should parse modulo[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
[32m- should parse addition[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
[32m- should parse subtraction[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
[32m- should parse greater than[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
[32m- should parse greater than or equal[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
[32m- should parse less than[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
[32m- should parse less than or equal[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
[32m- should parse equals[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
[32m- should parse not equals[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mt
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mt
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mt [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mt [31mFail[0m
                            [34m^[0m
[32m- should parse and[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mt
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mt
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mt [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0mt [31mFail[0m
                            [34m^[0m
[32m- should parse or[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ma
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ma
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ma [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ma [31mFail[0m
                            [34m^[0m
[32m- should parse array elements[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ma
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ma
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ma [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0ma [31mFail[0m
                            [34m^[0m
[32m- should parse 2d array elements[0m
[32mparseFunctions:[0m
[32mfunctionProgram[0m
[32m- should parse a function program[0m
[32m- should parse a function program with multiple functions[0m
>asgnEqParser> (1, 23): )[37mÂ·[0mis[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (1, 23): )[37mÂ·[0mis[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (1, 23): )[37mÂ·[0mis[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (1, 23): )[37mÂ·[0mis[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>asgnEqParser> (1, 52): )[37mÂ·[0mis[37mÂ·[0mreturn
                             [34m^[0m
  >assignLhs> (1, 52): )[37mÂ·[0mis[37mÂ·[0mreturn
                            [34m^[0m
  <assignLhs< (1, 52): )[37mÂ·[0mis[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
<asgnEqParser< (1, 52): )[37mÂ·[0mis[37mÂ·[0mreturn [31mFail[0m
                             [34m^[0m
>assignRhs> (1, 73): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                          [34m^[0m
<assignRhs< (1, 83): f(5)[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse functions that are called[0m
[32mparseStatements:[0m
[32mThe parser[0m
[32m- should parse skip[0m
>assignRhs> (1, 15): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0mend[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (1, 17): [37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse LHS new identifier assignments[0m
>asgnEqParser> (1, 1): x[37mÂ·[0m=[37mÂ·[0m3[31mâ€¢[0m
                       [34m^[0m
  >assignLhs> (1, 1): x[37mÂ·[0m=[37mÂ·[0m3[31mâ€¢[0m
                      [34m^[0m
  <assignLhs< (1, 3): x[37mÂ·[0m=[37mÂ·[0m3[31mâ€¢[0m [32mGood[0m
                        [34m^[0m
  >assignRhs> (1, 5): x[37mÂ·[0m=[37mÂ·[0m3[31mâ€¢[0m
                          [34m^[0m
  <assignRhs< (1, 6): x[37mÂ·[0m=[37mÂ·[0m3[31mâ€¢[0m [32mGood[0m
                           [34m^[0m
<asgnEqParser< (1, 6): x[37mÂ·[0m=[37mÂ·[0m3[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
>asgnEqParser> (1, 1): x[2][37mÂ·[0m=
                       [34m^[0m
  >assignLhs> (1, 1): x[2][37mÂ·[0m=
                      [34m^[0m
  <assignLhs< (1, 6): x[2][37mÂ·[0m=[37mÂ·[0m2[31mâ€¢[0m [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 8): 2][37mÂ·[0m=[37mÂ·[0m2[31mâ€¢[0m
                           [34m^[0m
  <assignRhs< (1, 9): ][37mÂ·[0m=[37mÂ·[0m2[31mâ€¢[0m [32mGood[0m
                           [34m^[0m
<asgnEqParser< (1, 9): ][37mÂ·[0m=[37mÂ·[0m2[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
[32m- should parse LHS existing identifier assignments[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[1][37mÂ·[0m=
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[1][37mÂ·[0m=
                           [34m^[0m
  <assignLhs< (1, 12): x[1][37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0men [32mGood[0m
                            [34m^[0m
  >assignRhs> (1, 14): 1][37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0mend[31mâ€¢[0m
                            [34m^[0m
  <assignRhs< (1, 16): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 16): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
[32m- should parse LHS array elem assignments[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mfst[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mfst[37mÂ·[0mp[37mÂ·[0m
                           [34m^[0m
  <assignLhs< (1, 13): st[37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0men [32mGood[0m
                            [34m^[0m
  >assignRhs> (1, 15): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0mend[31mâ€¢[0m
                            [34m^[0m
  <assignRhs< (1, 17): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 17): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0msnd[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0msnd[37mÂ·[0mp[37mÂ·[0m
                           [34m^[0m
  <assignLhs< (1, 13): nd[37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0men [32mGood[0m
                            [34m^[0m
  >assignRhs> (1, 15): [37mÂ·[0mp[37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0mend[31mâ€¢[0m
                            [34m^[0m
  <assignRhs< (1, 17): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 17): [37mÂ·[0m=[37mÂ·[0m3[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
[32m- should parse LHS pair elem assignments[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m+[37mÂ·[0m [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m+[37mÂ·[0m2[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (1, 17): [37mÂ·[0m+[37mÂ·[0m2[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 17): [37mÂ·[0m+[37mÂ·[0m2[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m*[37mÂ·[0m [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m*[37mÂ·[0m2[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (1, 17): [37mÂ·[0m*[37mÂ·[0m2[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 17): [37mÂ·[0m*[37mÂ·[0m2[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m/[37mÂ·[0m [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m/[37mÂ·[0m2[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (1, 17): [37mÂ·[0m/[37mÂ·[0m2[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 17): [37mÂ·[0m/[37mÂ·[0m2[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m!t
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m!t
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m!tru [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m!true[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (1, 17): true[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 17): true[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mle
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mle
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mlen[37mÂ·[0m [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mlen[37mÂ·[0m"h
                            [34m^[0m
  <assignRhs< (1, 23): llo"[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 23): llo"[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
[32m- should parse RHS expression assignments[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[]
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[]
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[][37mÂ·[0me [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[][37mÂ·[0mend[31mâ€¢[0m
                            [34m^[0m
  <assignRhs< (1, 14): =[37mÂ·[0m[][37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 14): =[37mÂ·[0m[][37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1][37mÂ·[0m [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1][37mÂ·[0men
                            [34m^[0m
  <assignRhs< (1, 15): [37mÂ·[0m[1][37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 15): [37mÂ·[0m[1][37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                            [34m^[0m
  <assignRhs< (1, 21): ,[37mÂ·[0m3][37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 21): ,[37mÂ·[0m3][37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
[32m- should parse RHS array literal assignments[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mne
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mne
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mnewp [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mnewpai
                            [34m^[0m
  <assignRhs< (1, 25): ,[37mÂ·[0m2)[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 25): ,[37mÂ·[0m2)[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
[32m- should parse RHS new pair assignments[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mfs
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mfs
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0m [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mfst[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (1, 17): st[37mÂ·[0mp[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 17): st[37mÂ·[0mp[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0msn
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0msn
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0m [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0msnd[37mÂ·[0mp[37mÂ·[0m
                            [34m^[0m
  <assignRhs< (1, 17): nd[37mÂ·[0mp[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 17): nd[37mÂ·[0mp[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
[32m- should parse RHS pair elem assignments[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                            [34m^[0m
  <assignRhs< (1, 20): [37mÂ·[0mf()[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 20): [37mÂ·[0mf()[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mca
                           [34m^[0m
  <assignLhs< (1, 9): in[37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall [32mGood[0m
                           [34m^[0m
  >assignRhs> (1, 11): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mcall[37mÂ·[0mf
                            [34m^[0m
  <assignRhs< (1, 27): ,[37mÂ·[0m3)[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                            [34m^[0m
<asgnEqParser< (1, 27): ,[37mÂ·[0m3)[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                             [34m^[0m
[32m- should parse RHS call assignments[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mread[37mÂ·[0mx
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mread[37mÂ·[0mx
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
>assignLhs> (1, 12): read[37mÂ·[0mx[37mÂ·[0mend[31mâ€¢[0m
                          [34m^[0m
<assignLhs< (1, 14): ad[37mÂ·[0mx[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse read with identifier[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mread[37mÂ·[0mx
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mread[37mÂ·[0mx
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mread[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
>assignLhs> (1, 12): read[37mÂ·[0mx[1][37mÂ·[0me
                          [34m^[0m
<assignLhs< (1, 17): x[1][37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse read with array elem[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mread[37mÂ·[0mf
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mread[37mÂ·[0mf
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mread[37mÂ·[0mf [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mread[37mÂ·[0mf [31mFail[0m
                            [34m^[0m
>assignLhs> (1, 12): read[37mÂ·[0mfst[37mÂ·[0mp[37mÂ·[0m
                          [34m^[0m
<assignLhs< (1, 18): st[37mÂ·[0mp[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mread[37mÂ·[0ms
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mread[37mÂ·[0ms
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mread[37mÂ·[0ms [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mread[37mÂ·[0ms [31mFail[0m
                            [34m^[0m
>assignLhs> (1, 12): read[37mÂ·[0msnd[37mÂ·[0mp[37mÂ·[0m
                          [34m^[0m
<assignLhs< (1, 18): nd[37mÂ·[0mp[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse read with pair elem[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mfree[37mÂ·[0mx
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mfree[37mÂ·[0mx
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mfree[37mÂ·[0mx [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mfree[37mÂ·[0mx [31mFail[0m
                            [34m^[0m
[32m- should parse free[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mreturn
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mreturn
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mreturn [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mreturn [31mFail[0m
                            [34m^[0m
[32m- should parse return[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mexit[37mÂ·[0m1 [31mFail[0m
                            [34m^[0m
[32m- should parse exit[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mprint[37mÂ·[0m
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mprint[37mÂ·[0m
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mprint[37mÂ·[0m [31mFail[0m
                            [34m^[0m
[32m- should parse print[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mprintl
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mprintl
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mprintl [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mprintl [31mFail[0m
                            [34m^[0m
[32m- should parse println[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mif[37mÂ·[0mtru
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mif[37mÂ·[0mtru
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mif[37mÂ·[0mtru [31mFail[0m
                            [34m^[0m
[32m- should parse if[0m
>asgnEqParser> (1, 7): egin[37mÂ·[0mwhile[37mÂ·[0m
                            [34m^[0m
  >assignLhs> (1, 7): egin[37mÂ·[0mwhile[37mÂ·[0m
                           [34m^[0m
  <assignLhs< (1, 7): egin[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                           [34m^[0m
<asgnEqParser< (1, 7): egin[37mÂ·[0mwhile[37mÂ·[0m [31mFail[0m
                            [34m^[0m
[32m- should parse while[0m
[32m- should parse multiple statements[0m
[32mparseTypes:[0m
[32mThe parser[0m
>assignRhs> (1, 15): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0mend[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (1, 17): [37mÂ·[0m=[37mÂ·[0m5[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse an int type[0m
>assignRhs> (1, 16): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mtrue[37mÂ·[0me
                          [34m^[0m
<assignRhs< (1, 21): true[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse a bool type[0m
>assignRhs> (1, 16): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m'a'[37mÂ·[0men
                          [34m^[0m
<assignRhs< (1, 20): [37mÂ·[0m'a'[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse a char type[0m
>assignRhs> (1, 18): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m"hello
                          [34m^[0m
<assignRhs< (1, 26): llo"[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse a string type[0m
>assignRhs> (1, 17): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[1,[37mÂ·[0m2,
                          [34m^[0m
<assignRhs< (1, 27): ,[37mÂ·[0m3][37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse an int array type[0m
>assignRhs> (1, 18): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m[true,
                          [34m^[0m
<assignRhs< (1, 32): lse][37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse a bool array type[0m
>assignRhs> (1, 18): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m['a',[37mÂ·[0m
                          [34m^[0m
<assignRhs< (1, 34): 'c'][37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse a char array type[0m
>assignRhs> (1, 20): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0m["hell
                          [34m^[0m
<assignRhs< (1, 39): ld"][37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse a string array type[0m
>assignRhs> (1, 27): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (1, 44): rue)[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse pair types[0m
>assignRhs> (1, 17): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,2,3
                          [34m^[0m
<assignRhs< (1, 26): ,3,4];[37mÂ·[0mbool [32mGood[0m
                          [34m^[0m
>assignRhs> (1, 17): [37mÂ·[0ma[37mÂ·[0m=[37mÂ·[0m[1,2,3
                          [34m^[0m
<assignRhs< (1, 26): ,3,4];[37mÂ·[0mbool [32mGood[0m
                          [34m^[0m
>assignRhs> (1, 39): [37mÂ·[0mb[37mÂ·[0m=[37mÂ·[0m[true,
                          [34m^[0m
<assignRhs< (1, 52): alse];[37mÂ·[0mpair [32mGood[0m
                          [34m^[0m
>assignRhs> (1, 78): [37mÂ·[0mx[37mÂ·[0m=[37mÂ·[0mnewpai
                          [34m^[0m
<assignRhs< (1, 92): ,[37mÂ·[0mb)[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse pair types with array types[0m
[32m- should reject pair types with pair types[0m
[33m- should parse pair types with pair array types !!! IGNORED !!![0m
[32mtypeCheckerTest:[0m
[32mThe type checker[0m
[32m- should accept integer literals[0m
[32m- should accept character literals[0m
[32m- should accept string literals[0m
[32m- should accept boolean literals[0m
[32m- should accept brackets[0m
[32m- should correctly type check programs[0m
[32m- should correctly type check function calls[0m
[32mparseAsgns:[0m
>assignRhs> (1, 19): lo[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m[37mÂ·[0mend[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (1, 22): =[37mÂ·[0m1[37mÂ·[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse identifiers[0m
>assignRhs> (1, 25): ld[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m[37mÂ·[0mend[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (1, 28): =[37mÂ·[0m1[37mÂ·[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse identifiers with underscores[0m
>assignRhs> (1, 20): lo[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m[37mÂ·[0mend[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (1, 23): =[37mÂ·[0m1[37mÂ·[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse identifiers starting with underscores[0m
>assignRhs> (1, 22): 23[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m[37mÂ·[0mend[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (1, 25): =[37mÂ·[0m1[37mÂ·[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse identifiers with numbers[0m
[32m- should reject identifiers starting with numbers[0m
>assignRhs> (1, 28): 23[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m[37mÂ·[0mend[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (1, 31): =[37mÂ·[0m1[37mÂ·[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse identifiers with underscores and numbers[0m
[32m- should reject brackets around identifiers[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m[1,2,3
                          [34m^[0m
<assignRhs< (1, 28): ,3][37mÂ·[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                          [34m^[0m
[32m- should parse arrays[0m
[31m- should parse arrays of arrays *** FAILED ***[0m
[31m  Failure("(line 1, column 12):[0m
[31m    unexpected "["[0m
[31m    expected identifier[0m
[31m    >begin int[][] input = [[1,2],[3,4]] end[0m
[31m                ^") was not equal to Success(Program(List(), IdentAsgn(integer, Ident("input"), ArrayLiter(List(ArrayLiter(List(IntLiter(1), IntLiter(2))), ArrayLiter(List(IntLiter(3), IntLiter(4)))))))) (parseAsgns.scala:106)[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m#[37mÂ·[0mTh
                          [34m^[0m
<assignRhs< (2, 2): ent[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
>assignRhs> (1, 19): ut[37mÂ·[0m=[37mÂ·[0m1[37mÂ·[0m##[37mÂ·[0mT
                          [34m^[0m
<assignRhs< (2, 2): ent[32mâ†™[0m[37mÂ·[0mend[31mâ€¢[0m [32mGood[0m
                         [34m^[0m
[32m- should ignore comments[0m
>assignRhs> (1, 42): t[37mÂ·[0mend[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (1, 42): t[37mÂ·[0mend[31mâ€¢[0m [31mFail[0m
                          [34m^[0m
>assignRhs> (1, 42): t[37mÂ·[0mend[31mâ€¢[0m
                          [34m^[0m
<assignRhs< (1, 42): t[37mÂ·[0mend[31mâ€¢[0m [31mFail[0m
                          [34m^[0m
[32m- should reject comments without EOL[0m
[36mRun completed in 4 seconds, 549 milliseconds.[0m
[36mTotal number of tests run: 461[0m
[36mSuites: completed 44, aborted 0[0m
[36mTests: succeeded 348, failed 113, canceled 0, ignored 8, pending 0[0m
[31m*** 113 TESTS FAILED ***[0m
